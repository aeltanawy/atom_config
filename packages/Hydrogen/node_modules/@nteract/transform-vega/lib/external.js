"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const util_1 = require("util");
const mime_1 = require("./mime");
/** Call the external library to do the embedding. */
async function embed(anchor, mediaType, spec, options = {}) {
    const version = mime_1.MEDIA_TYPES[mediaType];
    const defaults = {
        actions: false,
        mode: version.kind,
    };
    switch (version.vegaLevel) {
        case 2:
            return await Promise.resolve().then(() => __importStar(require("@nteract/vega-embed-v2"))).then(({ default: vegaEmbed }) => util_1.promisify(vegaEmbed)(anchor, Object.assign({}, defaults, options, { spec })));
        case 3:
            return await Promise.resolve().then(() => __importStar(require("@nteract/vega-embed-v3"))).then(({ default: vegaEmbed }) => vegaEmbed(anchor, deepThaw(spec), Object.assign({}, defaults, options)));
        case 4:
        case 5:
            return await Promise.resolve().then(() => __importStar(require("vega-embed"))).then(({ default: vegaEmbed }) => vegaEmbed(anchor, deepThaw(spec), Object.assign({}, defaults, options)));
    }
}
exports.embed = embed;
function deepThaw(spec) {
    return JSON.parse(JSON.stringify(spec));
}
