"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs2/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var _ansiToReact = _interopRequireDefault(require("ansi-to-react"));

var _transforms = require("@nteract/transforms");

var Immutable = _interopRequireWildcard(require("immutable"));

var _richestMime = _interopRequireDefault(require("./richest-mime"));

var classPrefix = "nteract-display-area-";

var Output =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(Output, _React$Component);

  function Output() {
    (0, _classCallCheck2.default)(this, Output);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Output).apply(this, arguments));
  }

  (0, _createClass2.default)(Output, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      return (// NOTE: this only does a shallow comparison that mostly only works
        //       well for Immutable Outputs
        nextProps.output !== this.props.output || nextProps.displayOrder !== this.props.displayOrder || nextProps.transforms !== this.props.transforms || nextProps.theme !== this.props.theme || nextProps.models !== this.props.models || nextProps.channels !== this.props.channels
      );
    }
  }, {
    key: "render",
    value: function render() {
      var output = this.props.output;
      var models = this.props.models; // TODO: Incorporate the new output record types into both commutable and the react components that use them

      if (Immutable.isImmutable(output)) {
        output = output.toJS();
      }

      if (Immutable.isImmutable(models)) {
        models = models.toJS();
      }

      var outputType = output.output_type;

      switch (outputType) {
        case "execute_result": // We can defer to display data here, the cell number will be handled
        // separately. For reference, it is output.execution_count
        // The execution_count belongs in the component above if
        // this is a code cell
        // falls through

        case "display_data":
          {
            var bundle = output.data;
            var metadata = output.metadata;
            return _react.default.createElement(_richestMime.default, {
              bundle: bundle,
              metadata: metadata,
              displayOrder: this.props.displayOrder,
              transforms: this.props.transforms,
              theme: this.props.theme,
              models: models,
              channels: this.props.channels
            });
          }

        case "stream":
          {
            var text = output.text;
            var name = output.name;

            switch (name) {
              case "stdout":
              case "stderr":
                return _react.default.createElement(_ansiToReact.default, {
                  className: classPrefix + name
                }, text);

              default:
                return null;
            }
          }

        case "error":
          {
            var traceback = output.traceback;

            if (!traceback) {
              return _react.default.createElement(_ansiToReact.default, {
                className: classPrefix + "traceback"
              }, "".concat(output.ename, ": ").concat(output.evalue));
            }

            return _react.default.createElement(_ansiToReact.default, {
              className: classPrefix + "traceback"
            }, traceback.join("\n"));
          }

        default:
          return null;
      }
    }
  }]);
  return Output;
}(_react.default.Component);

exports.default = Output;
(0, _defineProperty2.default)(Output, "defaultProps", {
  models: {},
  theme: "light",
  transforms: _transforms.transforms,
  displayOrder: _transforms.displayOrder
});