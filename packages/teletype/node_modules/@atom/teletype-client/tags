!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Buffer	test/helpers/fake-buffer-delegate.js	/^class Buffer {$/;"	c
BufferProxy	lib/buffer-proxy.js	/^class BufferProxy {$/;"	c
BufferProxy	lib/teletype-client_pb.js	/^proto.BufferProxy = function(opt_data) {$/;"	r
BufferProxyUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate = function(opt_data) {$/;"	r
ClientOutOfDateError	lib/errors.js	/^class ClientOutOfDateError extends Error {$/;"	c
Deletion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion = function(opt_data) {$/;"	r
Editor	test/helpers/fake-editor-delegate.js	/^class Editor {$/;"	c
EditorProxy	lib/editor-proxy.js	/^class EditorProxy {$/;"	c
EditorProxy	lib/teletype-client_pb.js	/^proto.EditorProxy = function(opt_data) {$/;"	r
EditorProxyCreation	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation = function(opt_data) {$/;"	r
EditorProxyMetadata	lib/editor-proxy-metadata.js	/^class EditorProxyMetadata {$/;"	c
EditorProxyMetadata	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata = function(opt_data) {$/;"	r
EditorProxyRemoval	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyRemoval = function(opt_data) {$/;"	r
EditorProxySwitch	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxySwitch = function(opt_data) {$/;"	r
EditorProxyUpdate	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate = function(opt_data) {$/;"	r
FakePortalDelegate	test/helpers/fake-portal-delegate.js	/^class FakePortalDelegate {$/;"	c
HTTPRequestError	lib/errors.js	/^class HTTPRequestError extends Error {$/;"	c
Insertion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion = function(opt_data) {$/;"	r
InvalidAuthenticationTokenError	lib/errors.js	/^class InvalidAuthenticationTokenError extends Error {$/;"	c
LayerOperation	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation = function(opt_data) {$/;"	r
LogicalRange	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange = function(opt_data) {$/;"	r
MarkerOperation	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation = function(opt_data) {$/;"	r
MarkerUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate = function(opt_data) {$/;"	r
MarkersUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate = function(opt_data) {$/;"	r
NetworkConnectionError	lib/errors.js	/^class NetworkConnectionError extends Error {$/;"	c
NetworkMessage	lib/teletype-client_pb.js	/^proto.NetworkMessage = function(opt_data) {$/;"	r
Notification	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification = function(opt_data) {$/;"	r
NullEditorProxyDelegate	lib/null-editor-proxy-delegate.js	/^class NullEditorProxyDelegate {$/;"	c
NullPortalDelegate	lib/null-portal-delegate.js	/^class NullPortalDelegate {$/;"	c
Operation	lib/teletype-crdt_pb.js	/^proto.Operation = function(opt_data) {$/;"	r
OperationsUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate = function(opt_data) {$/;"	r
PeerConnection	lib/peer-connection.js	/^class PeerConnection {$/;"	c
PeerConnectionError	lib/errors.js	/^class PeerConnectionError extends Error {$/;"	c
PeerIdentity	lib/teletype-client_pb.js	/^proto.PeerIdentity = function(opt_data) {$/;"	r
PeerPool	lib/peer-pool.js	/^class PeerPool {$/;"	c
Point	lib/teletype-crdt_pb.js	/^proto.Operation.Point = function(opt_data) {$/;"	r
Portal	lib/portal.js	/^class Portal {$/;"	c
PortalCreationError	lib/errors.js	/^class PortalCreationError extends Error {$/;"	c
PortalJoinError	lib/errors.js	/^class PortalJoinError extends Error {$/;"	c
PortalNotFoundError	lib/errors.js	/^class PortalNotFoundError extends Error {$/;"	c
PortalSubscriptionResponse	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse = function(opt_data) {$/;"	r
PortalUpdate	lib/teletype-client_pb.js	/^proto.PortalUpdate = function(opt_data) {$/;"	r
PubSubConnectionError	lib/errors.js	/^class PubSubConnectionError extends Error {$/;"	c
PubSubSignalingProvider	lib/pub-sub-signaling-provider.js	/^class PubSubSignalingProvider {$/;"	c
PusherPubSubGateway	lib/pusher-pub-sub-gateway.js	/^class PusherPubSubGateway {$/;"	c
RTCPeerConnection and RTCDataChannel error events	test/peer-pool.test.js	/^  test('RTCPeerConnection and RTCDataChannel error events', async () => {$/;"	f
Request	lib/teletype-client_pb.js	/^proto.RouterMessage.Request = function(opt_data) {$/;"	r
Response	lib/teletype-client_pb.js	/^proto.RouterMessage.Response = function(opt_data) {$/;"	r
RestGateway	lib/rest-gateway.js	/^class RestGateway {$/;"	c
Router	lib/router.js	/^class Router {$/;"	c
RouterMessage	lib/teletype-client_pb.js	/^proto.RouterMessage = function(opt_data) {$/;"	r
SelectionsUpdate	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.SelectionsUpdate = function(opt_data) {$/;"	r
SiteAssignment	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment = function(opt_data) {$/;"	r
Splice	lib/teletype-crdt_pb.js	/^proto.Operation.Splice = function(opt_data) {$/;"	r
SpliceId	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId = function(opt_data) {$/;"	r
StarBroadcast	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast = function(opt_data) {$/;"	r
StarJoinNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification = function(opt_data) {$/;"	r
StarJoinRequest	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinRequest = function(opt_data) {$/;"	r
StarJoinResponse	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinResponse = function(opt_data) {$/;"	r
StarLeaveNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification = function(opt_data) {$/;"	r
StarOverlayNetwork	lib/star-overlay-network.js	/^class StarOverlayNetwork {$/;"	c
StarUnicast	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast = function(opt_data) {$/;"	r
TeletypeClient	lib/teletype-client.js	/^class TeletypeClient {$/;"	c
Tether	lib/teletype-client_pb.js	/^proto.Tether = function(opt_data) {$/;"	r
URIUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.URIUpdate = function(opt_data) {$/;"	r
Undo	lib/teletype-crdt_pb.js	/^proto.Operation.Undo = function(opt_data) {$/;"	r
UnexpectedAuthenticationError	lib/errors.js	/^class UnexpectedAuthenticationError extends Error {$/;"	c
activateEditorProxy	lib/portal.js	/^  activateEditorProxy (newEditorProxy) {$/;"	r
active positions of other collaborators	test/integration.test.js	/^  test('active positions of other collaborators', async () => {$/;"	f
activeEditorDidScroll	lib/portal.js	/^  activeEditorDidScroll () {$/;"	r
activeEditorDidUpdateLocalSelections	lib/portal.js	/^  activeEditorDidUpdateLocalSelections ({initialUpdate}) {$/;"	r
activeEditorDidUpdateRemoteSelections	lib/portal.js	/^  activeEditorDidUpdateRemoteSelections ({selectionLayerIdsBySiteId, initialUpdate}) {$/;"	r
activeEditorDidUpdateText	lib/portal.js	/^  activeEditorDidUpdateText ({remote}) {$/;"	r
activeEditorProxyForSiteId	lib/portal.js	/^  activeEditorProxyForSiteId (siteId) {$/;"	r
activePositions.editorProxy	lib/portal.js	/^        activePositions[siteId] = {editorProxy: null, position: null}$/;"	p
activePositions.position	lib/portal.js	/^        activePositions[siteId] = {editorProxy: null, position: null}$/;"	p
addActiveBufferProxies	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.addActiveBufferProxies = function(opt_value, opt_index) {$/;"	r
addActiveEditorProxies	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.addActiveEditorProxies = function(opt_value, opt_index) {$/;"	r
addEditorProxiesMetadata	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.addEditorProxiesMetadata = function(opt_value, opt_index) {$/;"	r
addOperations	lib/teletype-client_pb.js	/^proto.BufferProxy.prototype.addOperations = function(opt_value, opt_index) {$/;"	r
addOperations	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate.prototype.addOperations = function(opt_value, opt_index) {$/;"	r
addTethers	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.addTethers = function(opt_value, opt_index) {$/;"	r
adding and removing editor proxies	test/integration.test.js	/^  test('adding and removing editor proxies', async () => {$/;"	f
applyGroupingInterval	lib/buffer-proxy.js	/^  applyGroupingInterval (groupingInterval) {$/;"	r
assertActivePositions	test/integration.test.js	/^    function assertActivePositions (expectedPositions) {$/;"	r
assignNewSiteId	lib/portal.js	/^  assignNewSiteId (peerId) {$/;"	r
async notification and request handlers	test/router.test.js	/^  test('async notification and request handlers', async () => {$/;"	f
async.senderId	lib/pub-sub-signaling-provider.js	/^      senderId: this.localPeerId,$/;"	p
attempting to connect to yourself	test/peer-pool.test.js	/^  test('attempting to connect to yourself', async () => {$/;"	f
attempting to join a non-existent portal	test/integration.test.js	/^  test('attempting to join a non-existent portal', async () => {$/;"	f
authentication errors during signaling	test/peer-pool.test.js	/^  test('authentication errors during signaling', async () => {$/;"	f
bindPeerIdToSiteId	lib/portal.js	/^  bindPeerIdToSiteId (peerId, siteId) {$/;"	r
broadcast	lib/star-overlay-network.js	/^  broadcast (message) {$/;"	r
broadcastEditorProxyCreation	lib/portal.js	/^  broadcastEditorProxyCreation (editorProxy) {$/;"	r
broadcastEditorProxySwitch	lib/portal.js	/^  broadcastEditorProxySwitch (editorProxy) {$/;"	r
broadcastOperations	lib/buffer-proxy.js	/^  broadcastOperations (operations) {$/;"	r
broadcastURIChange	lib/buffer-proxy.js	/^  broadcastURIChange (uri) {$/;"	r
broadcastUpdate	lib/buffer-proxy.js	/^  broadcastUpdate (updateMessage) {$/;"	r
bufferProxyDidUpdateMarkers	lib/editor-proxy.js	/^  bufferProxyDidUpdateMarkers (markerUpdates, options = {}) {$/;"	r
buildClient	test/integration.test.js	/^  async function buildClient (options={}) {$/;"	r
buildPeerPool	test/helpers/peer-pools.js	/^async function buildPeerPool (peerId, server, options = {}) {$/;"	r
buildPortal	test/portal.test.js	/^  async function buildPortal (portalId, peerPool, hostPeerId) {$/;"	r
buildStarNetwork	test/helpers/build-star-network.js	/^function buildStarNetwork (id, peerPool, {isHub, connectionTimeout}={}) {$/;"	r
changing buffer proxy uri	test/integration.test.js	/^  test('changing buffer proxy uri', async () => {$/;"	f
characterIndexForPosition	test/helpers/fake-buffer-delegate.js	/^function characterIndexForPosition (text, target) {$/;"	r
clearActiveBufferProxiesList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.clearActiveBufferProxiesList = function() {$/;"	r
clearActiveEditorProxiesList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.clearActiveEditorProxiesList = function() {$/;"	r
clearActiveEditorProxyIdsBySiteIdMap	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.clearActiveEditorProxyIdsBySiteIdMap = function() {$/;"	r
clearDeletion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.clearDeletion = function() {$/;"	r
clearEditorProxiesMetadataList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.clearEditorProxiesMetadataList = function() {$/;"	r
clearEditorProxyCreation	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.clearEditorProxyCreation = function() {$/;"	r
clearEditorProxyMetadata	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation.prototype.clearEditorProxyMetadata = function() {$/;"	r
clearEditorProxySwitch	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.clearEditorProxySwitch = function() {$/;"	r
clearEndDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.clearEndDependencyId = function() {$/;"	r
clearInsertion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.clearInsertion = function() {$/;"	r
clearLayerOperationsMap	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.prototype.clearLayerOperationsMap = function() {$/;"	r
clearLeftDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.clearLeftDependencyId = function() {$/;"	r
clearLeftDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.clearLeftDependencyId = function() {$/;"	r
clearMarkerOperationsMap	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation.prototype.clearMarkerOperationsMap = function() {$/;"	r
clearMarkerUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.prototype.clearMarkerUpdate = function() {$/;"	r
clearMarkersUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.clearMarkersUpdate = function() {$/;"	r
clearMaxSeqsBySiteMap	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.clearMaxSeqsBySiteMap = function() {$/;"	r
clearMemberIdentitiesByIdMap	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinResponse.prototype.clearMemberIdentitiesByIdMap = function() {$/;"	r
clearMemberIdentity	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.prototype.clearMemberIdentity = function() {$/;"	r
clearNotification	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.clearNotification = function() {$/;"	r
clearOffsetInEndDependency	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.clearOffsetInEndDependency = function() {$/;"	r
clearOffsetInLeftDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.clearOffsetInLeftDependency = function() {$/;"	r
clearOffsetInLeftDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.clearOffsetInLeftDependency = function() {$/;"	r
clearOffsetInRightDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.clearOffsetInRightDependency = function() {$/;"	r
clearOffsetInRightDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.clearOffsetInRightDependency = function() {$/;"	r
clearOffsetInStartDependency	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.clearOffsetInStartDependency = function() {$/;"	r
clearOperationsList	lib/teletype-client_pb.js	/^proto.BufferProxy.prototype.clearOperationsList = function() {$/;"	r
clearOperationsList	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate.prototype.clearOperationsList = function() {$/;"	r
clearOperationsUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.clearOperationsUpdate = function() {$/;"	r
clearPeerPools	test/helpers/peer-pools.js	/^function clearPeerPools () {$/;"	r
clearRange	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.clearRange = function() {$/;"	r
clearRequest	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.clearRequest = function() {$/;"	r
clearResponse	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.clearResponse = function() {$/;"	r
clearRightDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.clearRightDependencyId = function() {$/;"	r
clearRightDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.clearRightDependencyId = function() {$/;"	r
clearSelectionLayerIdsBySiteIdMap	lib/teletype-client_pb.js	/^proto.EditorProxy.prototype.clearSelectionLayerIdsBySiteIdMap = function() {$/;"	r
clearSelectionLayerIdsBySiteIdMap	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.SelectionsUpdate.prototype.clearSelectionLayerIdsBySiteIdMap = function() {$/;"	r
clearSelectionsForSiteId	lib/null-editor-proxy-delegate.js	/^  clearSelectionsForSiteId () {}$/;"	r
clearSelectionsForSiteId	test/helpers/fake-editor-delegate.js	/^  clearSelectionsForSiteId (siteId) {$/;"	r
clearSelectionsUpdate	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.prototype.clearSelectionsUpdate = function() {$/;"	r
clearSiteAssignment	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.clearSiteAssignment = function() {$/;"	r
clearSiteIdsByPeerIdMap	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.clearSiteIdsByPeerIdMap = function() {$/;"	r
clearSplice	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.clearSplice = function() {$/;"	r
clearSpliceId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.clearSpliceId = function() {$/;"	r
clearSpliceId	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.prototype.clearSpliceId = function() {$/;"	r
clearStarBroadcast	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.clearStarBroadcast = function() {$/;"	r
clearStarJoinNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.clearStarJoinNotification = function() {$/;"	r
clearStarJoinRequest	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.clearStarJoinRequest = function() {$/;"	r
clearStarJoinResponse	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.clearStarJoinResponse = function() {$/;"	r
clearStarLeaveNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.clearStarLeaveNotification = function() {$/;"	r
clearStarUnicast	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.clearStarUnicast = function() {$/;"	r
clearStartDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.clearStartDependencyId = function() {$/;"	r
clearTetherUpdate	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.clearTetherUpdate = function() {$/;"	r
clearTethersList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.clearTethersList = function() {$/;"	r
clearUndo	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.clearUndo = function() {$/;"	r
clearUriUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.clearUriUpdate = function() {$/;"	r
compare	test/helpers/fake-buffer-delegate.js	/^function compare (a, b) {$/;"	f
compare	test/helpers/fake-buffer-delegate.js	/^function compare (a, b) {$/;"	r
condition	test/helpers/condition.js	/^function condition (fn) {$/;"	r
connect	lib/peer-connection.js	/^  connect () {$/;"	r
connect	lib/pusher-pub-sub-gateway.js	/^  connect () {$/;"	r
connectTo	test/portal.test.js	/^      portal.network.connectTo = function () {$/;"	r
connection and sending messages between peers	test/peer-pool.test.js	/^  test('connection and sending messages between peers', async () => {$/;"	f
const.column	test/helpers/fake-buffer-delegate.js	/^  const position = {row: 0, column: 0}$/;"	p
const.row	test/helpers/fake-buffer-delegate.js	/^  const position = {row: 0, column: 0}$/;"	p
constructor	lib/buffer-proxy.js	/^  constructor ({id, uri, text, history, operations, router, hostPeerId, siteId, didDispose}) {$/;"	r
constructor	lib/editor-proxy-metadata.js	/^  constructor ({id, bufferProxyId, bufferProxyURI, siteId, router, didDispose}) {$/;"	r
constructor	lib/editor-proxy.js	/^  constructor ({id, bufferProxy, selectionLayerIdsBySiteId, selections, router, siteId, didDispose, portal}) {$/;"	r
constructor	lib/errors.js	/^  constructor () {$/;"	r
constructor	lib/null-editor-proxy-delegate.js	/^  constructor () {}$/;"	r
constructor	lib/peer-connection.js	/^  constructor (props) {$/;"	r
constructor	lib/peer-pool.js	/^  constructor ({peerId, peerIdentity, restGateway, pubSubGateway, fragmentSize, connectionTimeout, testEpoch}) {$/;"	r
constructor	lib/portal.js	/^  constructor ({id, hostPeerId, siteId, peerPool, connectionTimeout, tetherDisconnectWindow}) {$/;"	r
constructor	lib/pub-sub-signaling-provider.js	/^  constructor ({localPeerId, remotePeerId, restGateway, testEpoch}) {$/;"	r
constructor	lib/pusher-pub-sub-gateway.js	/^  constructor ({key, options}) {$/;"	r
constructor	lib/rest-gateway.js	/^  constructor ({baseURL, oauthToken}) {$/;"	r
constructor	lib/router.js	/^  constructor (network) {$/;"	r
constructor	lib/star-overlay-network.js	/^  constructor ({id, peerPool, isHub, connectionTimeout}) {$/;"	r
constructor	lib/teletype-client.js	/^  constructor ({restGateway, pubSubGateway, connectionTimeout, tetherDisconnectWindow, testEpoch, pusherKey, pusherOptions, baseURL, didCreateOrJoinPortal}) {$/;"	r
constructor	test/helpers/fake-buffer-delegate.js	/^  constructor (text, {didSetText} = {}) {$/;"	r
constructor	test/helpers/fake-editor-delegate.js	/^  constructor () {$/;"	r
constructor	test/helpers/fake-portal-delegate.js	/^  constructor () {$/;"	r
convertToProtobufCompatibleBuffer	lib/convert-to-protobuf-compatible-buffer.js	/^function convertToProtobufCompatibleBuffer (data) {$/;"	r
createBufferProxy	lib/portal.js	/^  createBufferProxy (props) {$/;"	r
createCheckpoint	lib/buffer-proxy.js	/^  createCheckpoint (options) {$/;"	r
createDisconnectedPusherClient	lib/pusher-pub-sub-gateway.js	/^function createDisconnectedPusherClient (key, options) {$/;"	r
createEditorProxy	lib/portal.js	/^  createEditorProxy (props) {$/;"	r
createLocalSelectionsLayer	lib/editor-proxy.js	/^  createLocalSelectionsLayer (selections) {$/;"	r
creating a portal after auth token has been revoked	test/integration.test.js	/^    test('creating a portal after auth token has been revoked', async () => {$/;"	f
cursorPositionForSiteId	lib/editor-proxy.js	/^  cursorPositionForSiteId (siteId) {$/;"	r
delete	test/helpers/fake-buffer-delegate.js	/^  delete (startPosition, extent) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.BufferProxy.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.URIUpdate.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.EditorProxy.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.SelectionsUpdate.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinRequest.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinResponse.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.PeerIdentity.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyRemoval.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxySwitch.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.PortalUpdate.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.RouterMessage.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-client_pb.js	/^proto.Tether.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.Point.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.deserializeBinary = function(bytes) {$/;"	r
deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.deserializeBinary = function(bytes) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.BufferProxy.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.URIUpdate.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.EditorProxy.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.SelectionsUpdate.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinRequest.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinResponse.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.NetworkMessage.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.PeerIdentity.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyRemoval.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxySwitch.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.PortalUpdate.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.RouterMessage.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.Tether.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.Point.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.deserializeBinaryFromReader = function(msg, reader) {$/;"	r
deserializeBufferProxy	lib/portal.js	/^  deserializeBufferProxy (message) {$/;"	r
deserializeEditorProxy	lib/portal.js	/^  deserializeEditorProxy (message) {$/;"	r
deserializeEditorProxyMetadata	lib/portal.js	/^  deserializeEditorProxyMetadata (message) {$/;"	r
deserializePeerIdentity	lib/star-overlay-network.js	/^function deserializePeerIdentity (identityMessage) {$/;"	r
didChangeEditorProxies	lib/null-portal-delegate.js	/^  didChangeEditorProxies () {}$/;"	r
didChangeEditorProxies	test/helpers/fake-portal-delegate.js	/^  didChangeEditorProxies () {$/;"	r
didChangeTetherState	lib/portal.js	/^  didChangeTetherState ({oldResolvedState, oldResolvedLeaderId, newResolvedState, newResolvedLeaderId}) {$/;"	r
didChangeURI	test/helpers/fake-buffer-delegate.js	/^  didChangeURI () {$/;"	r
didDisconnect	lib/peer-pool.js	/^  didDisconnect (peerId) {$/;"	r
didLoseConnectionToPeer	lib/star-overlay-network.js	/^  didLoseConnectionToPeer ({peerId}) {$/;"	r
didReceiveMessage	lib/peer-pool.js	/^  didReceiveMessage (event) {$/;"	r
didReceiveSignal	lib/peer-pool.js	/^  didReceiveSignal (message) {$/;"	r
didScroll	lib/editor-proxy.js	/^  didScroll (callback) {$/;"	r
disconnect	lib/peer-connection.js	/^  disconnect () {$/;"	r
disconnect	lib/peer-pool.js	/^  disconnect () {$/;"	r
disconnect	lib/pusher-pub-sub-gateway.js	/^  disconnect () {$/;"	r
disconnect	lib/star-overlay-network.js	/^  disconnect () {$/;"	r
disconnecting after encountering an error while joining the network	test/star-overlay-network.test.js	/^    test('disconnecting after encountering an error while joining the network', async () => {$/;"	f
dispose	lib/buffer-proxy.js	/^  dispose () {$/;"	r
dispose	lib/editor-proxy-metadata.js	/^  dispose () {$/;"	r
dispose	lib/editor-proxy.js	/^  dispose () {$/;"	r
dispose	lib/null-editor-proxy-delegate.js	/^  dispose () {}$/;"	r
dispose	lib/null-portal-delegate.js	/^  dispose () {}$/;"	r
dispose	lib/peer-pool.js	/^  dispose () {$/;"	r
dispose	lib/portal.js	/^  dispose () {$/;"	r
dispose	lib/router.js	/^  dispose () {$/;"	r
dispose	lib/star-overlay-network.js	/^  dispose () {$/;"	r
dispose	lib/teletype-client.js	/^  dispose () {$/;"	r
dispose	test/helpers/fake-buffer-delegate.js	/^  dispose () {$/;"	r
dispose	test/helpers/fake-editor-delegate.js	/^  dispose () {$/;"	r
dispose	test/helpers/fake-portal-delegate.js	/^  dispose () {$/;"	r
dispose	test/peer-pool.test.js	/^          dispose () {}$/;"	r
dispose	test/peer-pool.test.js	/^      dispose () {$/;"	r
dispose	test/teletype-client.test.js	/^            dispose () {}$/;"	r
disposing editor and buffer proxies	test/integration.test.js	/^  test('disposing editor and buffer proxies', async () => {$/;"	f
doNothing	lib/buffer-proxy.js	/^function doNothing () {}$/;"	r
doNothing	lib/editor-proxy.js	/^function doNothing () {}$/;"	r
extendTether	lib/portal.js	/^  extendTether () {$/;"	r
extending, retracting, and disconnecting when collaborating across multiple editors	test/integration.test.js	/^    test('extending, retracting, and disconnecting when collaborating across multiple editors', async () => {$/;"	f
extending, retracting, and disconnecting when collaborating in a single editor	test/integration.test.js	/^    test('extending, retracting, and disconnecting when collaborating in a single editor', async () => {$/;"	f
extentForText	test/helpers/fake-buffer-delegate.js	/^function extentForText (text) {$/;"	f
extentForText	test/helpers/fake-buffer-delegate.js	/^function extentForText (text) {$/;"	r
failed request	test/rest-gateway.test.js	/^    test('failed request', async () => {$/;"	f
finishReceiving	lib/peer-connection.js	/^  finishReceiving (envelope) {$/;"	r
fires if the underlying PeerPool emits an error	test/teletype-client.test.js	/^    test('fires if the underlying PeerPool emits an error', async () => {$/;"	f
follow	lib/portal.js	/^  follow (leaderSiteId) {$/;"	r
forwardBroadcast	lib/star-overlay-network.js	/^  forwardBroadcast (senderId, rawMessage) {$/;"	r
forwardUnicast	lib/star-overlay-network.js	/^  forwardUnicast (recipientId, rawMessage) {$/;"	r
get	lib/rest-gateway.js	/^  get (relativeURL, options) {$/;"	r
get	test/teletype-client.test.js	/^          stubRestGateway.get = function () {$/;"	r
get	test/teletype-client.test.js	/^        get () {$/;"	r
getAbsoluteURL	lib/rest-gateway.js	/^  getAbsoluteURL (relativeURL) {$/;"	r
getActiveBufferProxiesList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.getActiveBufferProxiesList = function() {$/;"	r
getActiveEditorProxiesList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.getActiveEditorProxiesList = function() {$/;"	r
getActiveEditorProxyIdsBySiteIdMap	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.getActiveEditorProxyIdsBySiteIdMap = function(opt_noLazyCreate) {$/;"	r
getActivePositions	test/helpers/fake-portal-delegate.js	/^  getActivePositions () {$/;"	r
getActiveSiteIds	lib/portal.js	/^  getActiveSiteIds () {$/;"	r
getBody	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.prototype.getBody = function() {$/;"	r
getBody	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.prototype.getBody = function() {$/;"	r
getBody	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.prototype.getBody = function() {$/;"	r
getBody	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.prototype.getBody = function() {$/;"	r
getBody	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.prototype.getBody = function() {$/;"	r
getBody_asB64	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.prototype.getBody_asB64 = function() {$/;"	r
getBody_asB64	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.prototype.getBody_asB64 = function() {$/;"	r
getBody_asB64	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.prototype.getBody_asB64 = function() {$/;"	r
getBody_asB64	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.prototype.getBody_asB64 = function() {$/;"	r
getBody_asB64	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.prototype.getBody_asB64 = function() {$/;"	r
getBody_asU8	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.prototype.getBody_asU8 = function() {$/;"	r
getBody_asU8	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.prototype.getBody_asU8 = function() {$/;"	r
getBody_asU8	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.prototype.getBody_asU8 = function() {$/;"	r
getBody_asU8	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.prototype.getBody_asU8 = function() {$/;"	r
getBody_asU8	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.prototype.getBody_asU8 = function() {$/;"	r
getBufferProxyId	lib/teletype-client_pb.js	/^proto.EditorProxy.prototype.getBufferProxyId = function() {$/;"	r
getBufferProxyId	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.prototype.getBufferProxyId = function() {$/;"	r
getBufferProxyUri	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.prototype.getBufferProxyUri = function() {$/;"	r
getChangesSinceCheckpoint	lib/buffer-proxy.js	/^  getChangesSinceCheckpoint (checkpoint) {$/;"	r
getChannelId	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.prototype.getChannelId = function() {$/;"	r
getChannelId	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.prototype.getChannelId = function() {$/;"	r
getClientId	lib/teletype-client.js	/^  getClientId () {$/;"	r
getColumn	lib/teletype-crdt_pb.js	/^proto.Operation.Point.prototype.getColumn = function() {$/;"	r
getConnectedPromise	lib/peer-connection.js	/^  getConnectedPromise () {$/;"	r
getConnectedPromise	lib/peer-pool.js	/^  getConnectedPromise (peerId) {$/;"	r
getConnectionLost	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification.prototype.getConnectionLost = function() {$/;"	r
getDefaultHeaders	lib/rest-gateway.js	/^  getDefaultHeaders () {$/;"	r
getDefaultHeaders.Accept	lib/rest-gateway.js	/^    const headers = {'Accept': 'application\/json'}$/;"	p
getDeletion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.getDeletion = function() {$/;"	r
getDiagnosticMessage	lib/rest-gateway.js	/^function getDiagnosticMessage ({method, url, status, rawBody}) {$/;"	r
getDisconnectedPromise	lib/peer-connection.js	/^  getDisconnectedPromise () {$/;"	r
getDisconnectedPromise	lib/peer-pool.js	/^  getDisconnectedPromise (peerId) {$/;"	r
getEditorProxiesMetadata	lib/portal.js	/^  getEditorProxiesMetadata () {$/;"	r
getEditorProxiesMetadataList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.getEditorProxiesMetadataList = function() {$/;"	r
getEditorProxyCreation	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.getEditorProxyCreation = function() {$/;"	r
getEditorProxyId	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyRemoval.prototype.getEditorProxyId = function() {$/;"	r
getEditorProxyId	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxySwitch.prototype.getEditorProxyId = function() {$/;"	r
getEditorProxyMetadata	lib/portal.js	/^  getEditorProxyMetadata (editorProxyId) {$/;"	r
getEditorProxyMetadata	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation.prototype.getEditorProxyMetadata = function() {$/;"	r
getEditorProxySwitch	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.getEditorProxySwitch = function() {$/;"	r
getEndDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.getEndDependencyId = function() {$/;"	r
getExclusive	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.getExclusive = function() {$/;"	r
getFollowedSiteId	lib/portal.js	/^  getFollowedSiteId () {$/;"	r
getFollowerSiteId	lib/teletype-client_pb.js	/^proto.Tether.prototype.getFollowerSiteId = function() {$/;"	r
getHistory	lib/buffer-proxy.js	/^  getHistory (maxEntries) {$/;"	r
getId	lib/teletype-client_pb.js	/^proto.BufferProxy.prototype.getId = function() {$/;"	r
getId	lib/teletype-client_pb.js	/^proto.EditorProxy.prototype.getId = function() {$/;"	r
getId	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.prototype.getId = function() {$/;"	r
getInsertion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.getInsertion = function() {$/;"	r
getIsDeletion	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation.prototype.getIsDeletion = function() {$/;"	r
getIsDeletion	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.prototype.getIsDeletion = function() {$/;"	r
getLayerOperationsMap	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.prototype.getLayerOperationsMap = function(opt_noLazyCreate) {$/;"	r
getLeaderSiteId	lib/teletype-client_pb.js	/^proto.Tether.prototype.getLeaderSiteId = function() {$/;"	r
getLeftDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.getLeftDependencyId = function() {$/;"	r
getLeftDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.getLeftDependencyId = function() {$/;"	r
getLocalActiveEditorProxy	lib/portal.js	/^  getLocalActiveEditorProxy () {$/;"	r
getLocalHiddenSelections	lib/editor-proxy.js	/^  getLocalHiddenSelections () {$/;"	r
getLocalPeerIdentity	lib/peer-pool.js	/^  getLocalPeerIdentity () {$/;"	r
getLocalSiteId	lib/portal.js	/^  getLocalSiteId () {$/;"	r
getLocalUserIdentity	lib/teletype-client.js	/^  getLocalUserIdentity () {$/;"	r
getLogin	lib/teletype-client_pb.js	/^proto.PeerIdentity.prototype.getLogin = function() {$/;"	r
getMarkerOperationsMap	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation.prototype.getMarkerOperationsMap = function(opt_noLazyCreate) {$/;"	r
getMarkerUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.prototype.getMarkerUpdate = function() {$/;"	r
getMarkers	lib/buffer-proxy.js	/^  getMarkers () {$/;"	r
getMarkersUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.getMarkersUpdate = function() {$/;"	r
getMaxSeqsBySiteMap	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.getMaxSeqsBySiteMap = function(opt_noLazyCreate) {$/;"	r
getMemberId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.prototype.getMemberId = function() {$/;"	r
getMemberId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification.prototype.getMemberId = function() {$/;"	r
getMemberIdentitiesByIdMap	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinResponse.prototype.getMemberIdentitiesByIdMap = function(opt_noLazyCreate) {$/;"	r
getMemberIdentity	lib/star-overlay-network.js	/^  getMemberIdentity (peerId) {$/;"	r
getMemberIdentity	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.prototype.getMemberIdentity = function() {$/;"	r
getMemberIds	lib/star-overlay-network.js	/^  getMemberIds () {$/;"	r
getMetadata	lib/editor-proxy.js	/^  getMetadata () {$/;"	r
getNetworkId	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.getNetworkId = function() {$/;"	r
getNextMarkerLayerId	lib/buffer-proxy.js	/^  getNextMarkerLayerId () {$/;"	r
getNotification	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.getNotification = function() {$/;"	r
getOffsetInEndDependency	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.getOffsetInEndDependency = function() {$/;"	r
getOffsetInLeftDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.getOffsetInLeftDependency = function() {$/;"	r
getOffsetInLeftDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.getOffsetInLeftDependency = function() {$/;"	r
getOffsetInRightDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.getOffsetInRightDependency = function() {$/;"	r
getOffsetInRightDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.getOffsetInRightDependency = function() {$/;"	r
getOffsetInStartDependency	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.getOffsetInStartDependency = function() {$/;"	r
getOk	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.prototype.getOk = function() {$/;"	r
getOperationsList	lib/teletype-client_pb.js	/^proto.BufferProxy.prototype.getOperationsList = function() {$/;"	r
getOperationsList	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate.prototype.getOperationsList = function() {$/;"	r
getOperationsUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.getOperationsUpdate = function() {$/;"	r
getPeerConnection	lib/peer-pool.js	/^  getPeerConnection (peerId) {$/;"	r
getPeerId	lib/star-overlay-network.js	/^  getPeerId () {$/;"	r
getPeerId	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment.prototype.getPeerId = function() {$/;"	r
getPeerIdentity	lib/peer-pool.js	/^  getPeerIdentity (peerId) {$/;"	r
getRange	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.getRange = function() {$/;"	r
getRecipientId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.prototype.getRecipientId = function() {$/;"	r
getRequest	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.getRequest = function() {$/;"	r
getRequestId	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.prototype.getRequestId = function() {$/;"	r
getRequestId	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.prototype.getRequestId = function() {$/;"	r
getResponse	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.getResponse = function() {$/;"	r
getReversed	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.getReversed = function() {$/;"	r
getRightDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.getRightDependencyId = function() {$/;"	r
getRightDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.getRightDependencyId = function() {$/;"	r
getRow	lib/teletype-crdt_pb.js	/^proto.Operation.Point.prototype.getRow = function() {$/;"	r
getSelectionLayerIdsBySiteIdMap	lib/teletype-client_pb.js	/^proto.EditorProxy.prototype.getSelectionLayerIdsBySiteIdMap = function(opt_noLazyCreate) {$/;"	r
getSelectionLayerIdsBySiteIdMap	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.SelectionsUpdate.prototype.getSelectionLayerIdsBySiteIdMap = function(opt_noLazyCreate) {$/;"	r
getSelectionsForSiteId	test/helpers/fake-editor-delegate.js	/^  getSelectionsForSiteId (siteId) {$/;"	r
getSelectionsUpdate	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.prototype.getSelectionsUpdate = function() {$/;"	r
getSenderId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.prototype.getSenderId = function() {$/;"	r
getSenderId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinRequest.prototype.getSenderId = function() {$/;"	r
getSenderId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.prototype.getSenderId = function() {$/;"	r
getSeq	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId.prototype.getSeq = function() {$/;"	r
getSite	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId.prototype.getSite = function() {$/;"	r
getSiteAssignment	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.getSiteAssignment = function() {$/;"	r
getSiteId	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment.prototype.getSiteId = function() {$/;"	r
getSiteId	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.prototype.getSiteId = function() {$/;"	r
getSiteIdentity	lib/portal.js	/^  getSiteIdentity (siteId) {$/;"	r
getSiteIdsByPeerIdMap	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.getSiteIdsByPeerIdMap = function(opt_noLazyCreate) {$/;"	r
getSplice	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.getSplice = function() {$/;"	r
getSpliceId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.getSpliceId = function() {$/;"	r
getSpliceId	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.prototype.getSpliceId = function() {$/;"	r
getStarBroadcast	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.getStarBroadcast = function() {$/;"	r
getStarJoinNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.getStarJoinNotification = function() {$/;"	r
getStarJoinRequest	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.getStarJoinRequest = function() {$/;"	r
getStarJoinResponse	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.getStarJoinResponse = function() {$/;"	r
getStarLeaveNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.getStarLeaveNotification = function() {$/;"	r
getStarUnicast	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.getStarUnicast = function() {$/;"	r
getStartDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.getStartDependencyId = function() {$/;"	r
getState	lib/teletype-client_pb.js	/^proto.Tether.prototype.getState = function() {$/;"	r
getTailed	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.getTailed = function() {$/;"	r
getTetherBufferProxyURI	test/helpers/fake-portal-delegate.js	/^  getTetherBufferProxyURI () {$/;"	r
getTetherEditorProxy	test/helpers/fake-portal-delegate.js	/^  getTetherEditorProxy () {$/;"	r
getTetherPosition	test/helpers/fake-portal-delegate.js	/^  getTetherPosition () {$/;"	r
getTetherState	test/helpers/fake-portal-delegate.js	/^  getTetherState () {$/;"	r
getTetherUpdate	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.getTetherUpdate = function() {$/;"	r
getTethersList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.getTethersList = function() {$/;"	r
getText	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.getText = function() {$/;"	r
getText	test/helpers/fake-buffer-delegate.js	/^  getText () {$/;"	r
getUndo	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.getUndo = function() {$/;"	r
getUndoCount	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.prototype.getUndoCount = function() {$/;"	r
getUri	lib/teletype-client_pb.js	/^proto.BufferProxy.prototype.getUri = function() {$/;"	r
getUri	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.URIUpdate.prototype.getUri = function() {$/;"	r
getUriUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.getUriUpdate = function() {$/;"	r
getVariantCase	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.getVariantCase = function() {$/;"	r
getVariantCase	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.prototype.getVariantCase = function() {$/;"	r
getVariantCase	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.getVariantCase = function() {$/;"	r
getVariantCase	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.getVariantCase = function() {$/;"	r
getVariantCase	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.getVariantCase = function() {$/;"	r
getVariantCase	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.getVariantCase = function() {$/;"	r
goog	lib/teletype-client_pb.js	/^var goog = jspb;$/;"	v
goog	lib/teletype-crdt_pb.js	/^var goog = jspb;$/;"	v
groupChangesSinceCheckpoint	lib/buffer-proxy.js	/^  groupChangesSinceCheckpoint (checkpoint, options) {$/;"	r
groupLastChanges	lib/buffer-proxy.js	/^  groupLastChanges () {$/;"	r
guest gracefully handles race conditions	test/portal.test.js	/^    test('guest gracefully handles race conditions', async () => {$/;"	f
guest gracefully handles switching to an editor proxy that has already been destroyed	test/portal.test.js	/^    test('guest gracefully handles switching to an editor proxy that has already been destroyed', async () => {$/;"	f
guest gracefully handles switching to an editor proxy whose buffer has already been destroyed	test/portal.test.js	/^    test('guest gracefully handles switching to an editor proxy whose buffer has already been destroyed', async () => {$/;"	f
guest leaving a portal	test/integration.test.js	/^    test('guest leaving a portal', async () => {$/;"	f
handleConnectionStateChange	lib/peer-connection.js	/^  handleConnectionStateChange () {$/;"	r
handleDataChannel	lib/peer-connection.js	/^  handleDataChannel ({channel}) {$/;"	r
handleError	lib/peer-connection.js	/^  handleError (event) {$/;"	r
hasDeletion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.hasDeletion = function() {$/;"	r
hasEditorProxyCreation	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.hasEditorProxyCreation = function() {$/;"	r
hasEditorProxyMetadata	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation.prototype.hasEditorProxyMetadata = function() {$/;"	r
hasEditorProxySwitch	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.hasEditorProxySwitch = function() {$/;"	r
hasEndDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.hasEndDependencyId = function() {$/;"	r
hasHostClosedPortal	test/helpers/fake-portal-delegate.js	/^  hasHostClosedPortal () {$/;"	r
hasHostLostConnection	test/helpers/fake-portal-delegate.js	/^  hasHostLostConnection () {$/;"	r
hasInsertion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.hasInsertion = function() {$/;"	r
hasLeftDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.hasLeftDependencyId = function() {$/;"	r
hasLeftDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.hasLeftDependencyId = function() {$/;"	r
hasMarkerUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.prototype.hasMarkerUpdate = function() {$/;"	r
hasMarkersUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.hasMarkersUpdate = function() {$/;"	r
hasMemberIdentity	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.prototype.hasMemberIdentity = function() {$/;"	r
hasNotification	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.hasNotification = function() {$/;"	r
hasOffsetInEndDependency	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.hasOffsetInEndDependency = function() {$/;"	r
hasOffsetInLeftDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.hasOffsetInLeftDependency = function() {$/;"	r
hasOffsetInLeftDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.hasOffsetInLeftDependency = function() {$/;"	r
hasOffsetInRightDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.hasOffsetInRightDependency = function() {$/;"	r
hasOffsetInRightDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.hasOffsetInRightDependency = function() {$/;"	r
hasOffsetInStartDependency	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.hasOffsetInStartDependency = function() {$/;"	r
hasOperationsUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.hasOperationsUpdate = function() {$/;"	r
hasRange	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.hasRange = function() {$/;"	r
hasRequest	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.hasRequest = function() {$/;"	r
hasResponse	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.hasResponse = function() {$/;"	r
hasRightDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.hasRightDependencyId = function() {$/;"	r
hasRightDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.hasRightDependencyId = function() {$/;"	r
hasSelectionsUpdate	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.prototype.hasSelectionsUpdate = function() {$/;"	r
hasSiteAssignment	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.hasSiteAssignment = function() {$/;"	r
hasSplice	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.hasSplice = function() {$/;"	r
hasSpliceId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.hasSpliceId = function() {$/;"	r
hasSpliceId	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.prototype.hasSpliceId = function() {$/;"	r
hasStarBroadcast	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.hasStarBroadcast = function() {$/;"	r
hasStarJoinNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.hasStarJoinNotification = function() {$/;"	r
hasStarJoinRequest	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.hasStarJoinRequest = function() {$/;"	r
hasStarJoinResponse	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.hasStarJoinResponse = function() {$/;"	r
hasStarLeaveNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.hasStarLeaveNotification = function() {$/;"	r
hasStarUnicast	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.hasStarUnicast = function() {$/;"	r
hasStartDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.hasStartDependencyId = function() {$/;"	r
hasTetherUpdate	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.hasTetherUpdate = function() {$/;"	r
hasUndo	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.hasUndo = function() {$/;"	r
hasUriUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.hasUriUpdate = function() {$/;"	r
hideSelections	lib/editor-proxy.js	/^  hideSelections () {$/;"	r
host closing a portal	test/integration.test.js	/^    test('host closing a portal', async () => {$/;"	f
host gracefully handles guests switching to an editor that has already been destroyed	test/portal.test.js	/^    test('host gracefully handles guests switching to an editor that has already been destroyed', async () => {$/;"	f
host only notifies guests when active editor proxy has changed	test/portal.test.js	/^    test('host only notifies guests when active editor proxy has changed', async () => {$/;"	f
hostDidClosePortal	lib/null-portal-delegate.js	/^  hostDidClosePortal () {}$/;"	r
hostDidClosePortal	test/helpers/fake-portal-delegate.js	/^  hostDidClosePortal () {$/;"	r
hostDidDisconnect	lib/editor-proxy.js	/^  hostDidDisconnect () {$/;"	r
hostDidLoseConnection	lib/null-portal-delegate.js	/^  hostDidLoseConnection () {}$/;"	r
hostDidLoseConnection	test/helpers/fake-portal-delegate.js	/^  hostDidLoseConnection () {$/;"	r
insert	test/helpers/fake-buffer-delegate.js	/^  insert (position, text) {$/;"	r
integrateOperations	lib/buffer-proxy.js	/^  integrateOperations (operations) {$/;"	r
isConnectedToPeer	lib/peer-pool.js	/^  isConnectedToPeer (peerId) {$/;"	r
isConnectionClosed	lib/peer-connection.js	/^  isConnectionClosed () {$/;"	r
isConnectionOpen	lib/peer-connection.js	/^  isConnectionOpen () {$/;"	r
isDisposed	test/helpers/fake-buffer-delegate.js	/^  isDisposed () {$/;"	r
isDisposed	test/helpers/fake-editor-delegate.js	/^  isDisposed () {$/;"	r
isDisposed	test/helpers/fake-portal-delegate.js	/^  isDisposed () {$/;"	r
isHostSiteId	lib/portal.js	/^function isHostSiteId (siteId) {$/;"	r
isScrollNeededToViewPosition	lib/editor-proxy.js	/^  isScrollNeededToViewPosition (position) {$/;"	r
isScrollNeededToViewPosition	lib/null-editor-proxy-delegate.js	/^  isScrollNeededToViewPosition () {}$/;"	r
isScrollNeededToViewPosition	test/helpers/fake-editor-delegate.js	/^  isScrollNeededToViewPosition (position) {$/;"	r
isSignedIn	lib/teletype-client.js	/^  isSignedIn () {$/;"	r
joining a portal after auth token has been revoked	test/integration.test.js	/^    test('joining a portal after auth token has been revoked', async () => {$/;"	f
joining and leaving	test/star-overlay-network.test.js	/^    test('joining and leaving', async () => {$/;"	f
joining and leaving a portal	test/portal.test.js	/^  test('joining and leaving a portal', async () => {$/;"	f
jspb	lib/teletype-client_pb.js	/^var jspb = require('google-protobuf');$/;"	v
jspb	lib/teletype-crdt_pb.js	/^var jspb = require('google-protobuf');$/;"	v
leaderDidUpdate	lib/portal.js	/^  leaderDidUpdate () {$/;"	r
listen	test/rest-gateway.test.js	/^  function listen (requestListener) {$/;"	r
listening more than once for incoming connections	test/peer-pool.test.js	/^  test('listening more than once for incoming connections', async () => {$/;"	f
losing connection to guest	test/integration.test.js	/^    test('losing connection to guest', async () => {$/;"	f
losing connection to host	test/integration.test.js	/^    test('losing connection to host', async () => {$/;"	f
losing connection to peer	test/star-overlay-network.test.js	/^    test('losing connection to peer', async () => {$/;"	f
memberDidLeave	lib/star-overlay-network.js	/^  memberDidLeave (peerId, connectionLost) {$/;"	r
module.exports	test/helpers/set-equal.js	/^module.exports =$/;"	f
module.exports	test/helpers/timeout.js	/^module.exports =$/;"	f
module.exports.DISCONNECTED	lib/follow-state.js	/^  DISCONNECTED: 0,$/;"	p
module.exports.EXTENDED	lib/follow-state.js	/^  EXTENDED: 2$/;"	p
module.exports.RETRACTED	lib/follow-state.js	/^  RETRACTED: 1,$/;"	p
non-JSON response	test/rest-gateway.test.js	/^    test('non-JSON response', async () => {$/;"	f
notifications	test/router.test.js	/^  test('notifications', async () => {$/;"	f
notify	lib/router.js	/^  notify ({recipientId, channelId, body}) {$/;"	r
notifying delegate of active position of other sites	test/portal.test.js	/^  test('notifying delegate of active position of other sites', async () => {$/;"	f
onConnectionError	lib/teletype-client.js	/^  onConnectionError (callback) {$/;"	r
onDidScroll	lib/editor-proxy.js	/^  onDidScroll (callback) {$/;"	r
onDidUpdateLocalSelections	lib/editor-proxy.js	/^  onDidUpdateLocalSelections (callback) {$/;"	r
onDidUpdateMarkers	lib/buffer-proxy.js	/^  onDidUpdateMarkers (listener) {$/;"	r
onDidUpdateRemoteSelections	lib/editor-proxy.js	/^  onDidUpdateRemoteSelections (callback) {$/;"	r
onDidUpdateText	lib/buffer-proxy.js	/^  onDidUpdateText (listener) {$/;"	r
onDisconnection	lib/peer-pool.js	/^  onDisconnection (callback) {$/;"	r
onError	lib/peer-pool.js	/^  onError (callback) {$/;"	r
onMemberJoin	lib/star-overlay-network.js	/^  onMemberJoin (callback) {$/;"	r
onMemberLeave	lib/star-overlay-network.js	/^  onMemberLeave (callback) {$/;"	r
onNotification	lib/router.js	/^  onNotification (channelId, callback) {$/;"	r
onReceive	lib/peer-pool.js	/^  onReceive (callback) {$/;"	r
onReceive	lib/star-overlay-network.js	/^  onReceive (callback) {$/;"	r
onRequest	lib/router.js	/^  onRequest (channelId, callback) {$/;"	r
onSignInChange	lib/teletype-client.js	/^  onSignInChange (callback) {$/;"	r
peerConnectionDidError	lib/peer-pool.js	/^  peerConnectionDidError ({peerId, event}) {$/;"	r
peerPoolDidError	lib/teletype-client.js	/^  peerPoolDidError (error) {$/;"	r
point	test/integration.test.js	/^  function point (row, column) {$/;"	r
pointsEqual	lib/portal.js	/^function pointsEqual (a, b) {$/;"	r
post	lib/rest-gateway.js	/^  post (relativeURL, requestBody) {$/;"	r
post	test/teletype-client.test.js	/^          stubRestGateway.post = function () {$/;"	r
proto.BufferProxy	lib/teletype-client_pb.js	/^proto.BufferProxy = function(opt_data) {$/;"	f
proto.BufferProxy	lib/teletype-client_pb.js	/^proto.BufferProxy.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.BufferProxy.addOperations	lib/teletype-client_pb.js	/^proto.BufferProxy.prototype.addOperations = function(opt_value, opt_index) {$/;"	m
proto.BufferProxy.clearOperationsList	lib/teletype-client_pb.js	/^proto.BufferProxy.prototype.clearOperationsList = function() {$/;"	m
proto.BufferProxy.deserializeBinary	lib/teletype-client_pb.js	/^proto.BufferProxy.deserializeBinary = function(bytes) {$/;"	f
proto.BufferProxy.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.BufferProxy.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.BufferProxy.getId	lib/teletype-client_pb.js	/^proto.BufferProxy.prototype.getId = function() {$/;"	m
proto.BufferProxy.getOperationsList	lib/teletype-client_pb.js	/^proto.BufferProxy.prototype.getOperationsList = function() {$/;"	m
proto.BufferProxy.getUri	lib/teletype-client_pb.js	/^proto.BufferProxy.prototype.getUri = function() {$/;"	m
proto.BufferProxy.serializeBinary	lib/teletype-client_pb.js	/^proto.BufferProxy.prototype.serializeBinary = function() {$/;"	m
proto.BufferProxy.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.BufferProxy.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.BufferProxy.setId	lib/teletype-client_pb.js	/^proto.BufferProxy.prototype.setId = function(value) {$/;"	m
proto.BufferProxy.setOperationsList	lib/teletype-client_pb.js	/^proto.BufferProxy.prototype.setOperationsList = function(value) {$/;"	m
proto.BufferProxy.setUri	lib/teletype-client_pb.js	/^proto.BufferProxy.prototype.setUri = function(value) {$/;"	m
proto.BufferProxy.toObject	lib/teletype-client_pb.js	/^proto.BufferProxy.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.BufferProxy.toObject	lib/teletype-client_pb.js	/^proto.BufferProxy.toObject = function(includeInstance, msg) {$/;"	f
proto.BufferProxy.toObject.f.id	lib/teletype-client_pb.js	/^    id: jspb.Message.getFieldWithDefault(msg, 1, 0),$/;"	p
proto.BufferProxyUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate = function(opt_data) {$/;"	f
proto.BufferProxyUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.getVariantCase = function() {$/;"	c
proto.BufferProxyUpdate.OperationsUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate = function(opt_data) {$/;"	f
proto.BufferProxyUpdate.OperationsUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.BufferProxyUpdate.OperationsUpdate.addOperations	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate.prototype.addOperations = function(opt_value, opt_index) {$/;"	m
proto.BufferProxyUpdate.OperationsUpdate.clearOperationsList	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate.prototype.clearOperationsList = function() {$/;"	m
proto.BufferProxyUpdate.OperationsUpdate.deserializeBinary	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate.deserializeBinary = function(bytes) {$/;"	f
proto.BufferProxyUpdate.OperationsUpdate.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.BufferProxyUpdate.OperationsUpdate.getOperationsList	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate.prototype.getOperationsList = function() {$/;"	m
proto.BufferProxyUpdate.OperationsUpdate.serializeBinary	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate.prototype.serializeBinary = function() {$/;"	m
proto.BufferProxyUpdate.OperationsUpdate.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.BufferProxyUpdate.OperationsUpdate.setOperationsList	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate.prototype.setOperationsList = function(value) {$/;"	m
proto.BufferProxyUpdate.OperationsUpdate.toObject	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.BufferProxyUpdate.OperationsUpdate.toObject	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate.toObject = function(includeInstance, msg) {$/;"	f
proto.BufferProxyUpdate.OperationsUpdate.toObject.f.operationsList	lib/teletype-client_pb.js	/^    operationsList: jspb.Message.toObjectList(msg.getOperationsList(),$/;"	p
proto.BufferProxyUpdate.URIUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.URIUpdate = function(opt_data) {$/;"	f
proto.BufferProxyUpdate.URIUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.URIUpdate.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.BufferProxyUpdate.URIUpdate.deserializeBinary	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.URIUpdate.deserializeBinary = function(bytes) {$/;"	f
proto.BufferProxyUpdate.URIUpdate.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.URIUpdate.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.BufferProxyUpdate.URIUpdate.getUri	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.URIUpdate.prototype.getUri = function() {$/;"	m
proto.BufferProxyUpdate.URIUpdate.serializeBinary	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.URIUpdate.prototype.serializeBinary = function() {$/;"	m
proto.BufferProxyUpdate.URIUpdate.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.URIUpdate.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.BufferProxyUpdate.URIUpdate.setUri	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.URIUpdate.prototype.setUri = function(value) {$/;"	m
proto.BufferProxyUpdate.URIUpdate.toObject	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.URIUpdate.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.BufferProxyUpdate.URIUpdate.toObject	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.URIUpdate.toObject = function(includeInstance, msg) {$/;"	f
proto.BufferProxyUpdate.URIUpdate.toObject.f.uri	lib/teletype-client_pb.js	/^    uri: jspb.Message.getFieldWithDefault(msg, 1, "")$/;"	p
proto.BufferProxyUpdate.VariantCase.OPERATIONS_UPDATE	lib/teletype-client_pb.js	/^  OPERATIONS_UPDATE: 2,$/;"	p
proto.BufferProxyUpdate.VariantCase.URI_UPDATE	lib/teletype-client_pb.js	/^  URI_UPDATE: 3$/;"	p
proto.BufferProxyUpdate.VariantCase.VARIANT_NOT_SET	lib/teletype-client_pb.js	/^  VARIANT_NOT_SET: 0,$/;"	p
proto.BufferProxyUpdate.clearOperationsUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.clearOperationsUpdate = function() {$/;"	m
proto.BufferProxyUpdate.clearUriUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.clearUriUpdate = function() {$/;"	m
proto.BufferProxyUpdate.deserializeBinary	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.deserializeBinary = function(bytes) {$/;"	f
proto.BufferProxyUpdate.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.BufferProxyUpdate.getOperationsUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.getOperationsUpdate = function() {$/;"	m
proto.BufferProxyUpdate.getUriUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.getUriUpdate = function() {$/;"	m
proto.BufferProxyUpdate.getVariantCase	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.getVariantCase = function() {$/;"	m
proto.BufferProxyUpdate.hasOperationsUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.hasOperationsUpdate = function() {$/;"	m
proto.BufferProxyUpdate.hasUriUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.hasUriUpdate = function() {$/;"	m
proto.BufferProxyUpdate.serializeBinary	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.serializeBinary = function() {$/;"	m
proto.BufferProxyUpdate.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.BufferProxyUpdate.setOperationsUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.setOperationsUpdate = function(value) {$/;"	m
proto.BufferProxyUpdate.setUriUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.setUriUpdate = function(value) {$/;"	m
proto.BufferProxyUpdate.toObject	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.BufferProxyUpdate.toObject	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.toObject = function(includeInstance, msg) {$/;"	f
proto.BufferProxyUpdate.toObject.f.operationsUpdate	lib/teletype-client_pb.js	/^    operationsUpdate: (f = msg.getOperationsUpdate()) && proto.BufferProxyUpdate.OperationsUpdate.toObject(includeInstance, f),$/;"	p
proto.EditorProxy	lib/teletype-client_pb.js	/^proto.EditorProxy = function(opt_data) {$/;"	f
proto.EditorProxy	lib/teletype-client_pb.js	/^proto.EditorProxy.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.EditorProxy.clearSelectionLayerIdsBySiteIdMap	lib/teletype-client_pb.js	/^proto.EditorProxy.prototype.clearSelectionLayerIdsBySiteIdMap = function() {$/;"	m
proto.EditorProxy.deserializeBinary	lib/teletype-client_pb.js	/^proto.EditorProxy.deserializeBinary = function(bytes) {$/;"	f
proto.EditorProxy.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.EditorProxy.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.EditorProxy.getBufferProxyId	lib/teletype-client_pb.js	/^proto.EditorProxy.prototype.getBufferProxyId = function() {$/;"	m
proto.EditorProxy.getId	lib/teletype-client_pb.js	/^proto.EditorProxy.prototype.getId = function() {$/;"	m
proto.EditorProxy.getSelectionLayerIdsBySiteIdMap	lib/teletype-client_pb.js	/^proto.EditorProxy.prototype.getSelectionLayerIdsBySiteIdMap = function(opt_noLazyCreate) {$/;"	m
proto.EditorProxy.serializeBinary	lib/teletype-client_pb.js	/^proto.EditorProxy.prototype.serializeBinary = function() {$/;"	m
proto.EditorProxy.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.EditorProxy.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.EditorProxy.setBufferProxyId	lib/teletype-client_pb.js	/^proto.EditorProxy.prototype.setBufferProxyId = function(value) {$/;"	m
proto.EditorProxy.setId	lib/teletype-client_pb.js	/^proto.EditorProxy.prototype.setId = function(value) {$/;"	m
proto.EditorProxy.toObject	lib/teletype-client_pb.js	/^proto.EditorProxy.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.EditorProxy.toObject	lib/teletype-client_pb.js	/^proto.EditorProxy.toObject = function(includeInstance, msg) {$/;"	f
proto.EditorProxy.toObject.f.id	lib/teletype-client_pb.js	/^    id: jspb.Message.getFieldWithDefault(msg, 1, 0),$/;"	p
proto.EditorProxyMetadata	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata = function(opt_data) {$/;"	f
proto.EditorProxyMetadata	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.EditorProxyMetadata.deserializeBinary	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.deserializeBinary = function(bytes) {$/;"	f
proto.EditorProxyMetadata.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.EditorProxyMetadata.getBufferProxyId	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.prototype.getBufferProxyId = function() {$/;"	m
proto.EditorProxyMetadata.getBufferProxyUri	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.prototype.getBufferProxyUri = function() {$/;"	m
proto.EditorProxyMetadata.getId	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.prototype.getId = function() {$/;"	m
proto.EditorProxyMetadata.serializeBinary	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.prototype.serializeBinary = function() {$/;"	m
proto.EditorProxyMetadata.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.EditorProxyMetadata.setBufferProxyId	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.prototype.setBufferProxyId = function(value) {$/;"	m
proto.EditorProxyMetadata.setBufferProxyUri	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.prototype.setBufferProxyUri = function(value) {$/;"	m
proto.EditorProxyMetadata.setId	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.prototype.setId = function(value) {$/;"	m
proto.EditorProxyMetadata.toObject	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.EditorProxyMetadata.toObject	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.toObject = function(includeInstance, msg) {$/;"	f
proto.EditorProxyMetadata.toObject.f.id	lib/teletype-client_pb.js	/^    id: jspb.Message.getFieldWithDefault(msg, 1, 0),$/;"	p
proto.EditorProxyUpdate	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate = function(opt_data) {$/;"	f
proto.EditorProxyUpdate	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.prototype.getVariantCase = function() {$/;"	c
proto.EditorProxyUpdate.SelectionsUpdate	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.SelectionsUpdate = function(opt_data) {$/;"	f
proto.EditorProxyUpdate.SelectionsUpdate	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.SelectionsUpdate.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.EditorProxyUpdate.SelectionsUpdate.clearSelectionLayerIdsBySiteIdMap	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.SelectionsUpdate.prototype.clearSelectionLayerIdsBySiteIdMap = function() {$/;"	m
proto.EditorProxyUpdate.SelectionsUpdate.deserializeBinary	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.SelectionsUpdate.deserializeBinary = function(bytes) {$/;"	f
proto.EditorProxyUpdate.SelectionsUpdate.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.SelectionsUpdate.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.EditorProxyUpdate.SelectionsUpdate.getSelectionLayerIdsBySiteIdMap	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.SelectionsUpdate.prototype.getSelectionLayerIdsBySiteIdMap = function(opt_noLazyCreate) {$/;"	m
proto.EditorProxyUpdate.SelectionsUpdate.serializeBinary	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.SelectionsUpdate.prototype.serializeBinary = function() {$/;"	m
proto.EditorProxyUpdate.SelectionsUpdate.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.SelectionsUpdate.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.EditorProxyUpdate.SelectionsUpdate.toObject	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.SelectionsUpdate.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.EditorProxyUpdate.SelectionsUpdate.toObject	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.SelectionsUpdate.toObject = function(includeInstance, msg) {$/;"	f
proto.EditorProxyUpdate.SelectionsUpdate.toObject.f.selectionLayerIdsBySiteIdMap	lib/teletype-client_pb.js	/^    selectionLayerIdsBySiteIdMap: (f = msg.getSelectionLayerIdsBySiteIdMap()) ? f.toObject(includeInstance, undefined) : []$/;"	p
proto.EditorProxyUpdate.VariantCase.SELECTIONS_UPDATE	lib/teletype-client_pb.js	/^  SELECTIONS_UPDATE: 1$/;"	p
proto.EditorProxyUpdate.VariantCase.VARIANT_NOT_SET	lib/teletype-client_pb.js	/^  VARIANT_NOT_SET: 0,$/;"	p
proto.EditorProxyUpdate.clearSelectionsUpdate	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.prototype.clearSelectionsUpdate = function() {$/;"	m
proto.EditorProxyUpdate.deserializeBinary	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.deserializeBinary = function(bytes) {$/;"	f
proto.EditorProxyUpdate.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.EditorProxyUpdate.getSelectionsUpdate	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.prototype.getSelectionsUpdate = function() {$/;"	m
proto.EditorProxyUpdate.getVariantCase	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.prototype.getVariantCase = function() {$/;"	m
proto.EditorProxyUpdate.hasSelectionsUpdate	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.prototype.hasSelectionsUpdate = function() {$/;"	m
proto.EditorProxyUpdate.serializeBinary	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.prototype.serializeBinary = function() {$/;"	m
proto.EditorProxyUpdate.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.EditorProxyUpdate.setSelectionsUpdate	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.prototype.setSelectionsUpdate = function(value) {$/;"	m
proto.EditorProxyUpdate.toObject	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.EditorProxyUpdate.toObject	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.toObject = function(includeInstance, msg) {$/;"	f
proto.EditorProxyUpdate.toObject.f.selectionsUpdate	lib/teletype-client_pb.js	/^    selectionsUpdate: (f = msg.getSelectionsUpdate()) && proto.EditorProxyUpdate.SelectionsUpdate.toObject(includeInstance, f)$/;"	p
proto.NetworkMessage	lib/teletype-client_pb.js	/^proto.NetworkMessage = function(opt_data) {$/;"	f
proto.NetworkMessage	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.getVariantCase = function() {$/;"	c
proto.NetworkMessage.StarBroadcast	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast = function(opt_data) {$/;"	f
proto.NetworkMessage.StarBroadcast	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.NetworkMessage.StarBroadcast.deserializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.deserializeBinary = function(bytes) {$/;"	f
proto.NetworkMessage.StarBroadcast.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.NetworkMessage.StarBroadcast.getBody	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.prototype.getBody = function() {$/;"	m
proto.NetworkMessage.StarBroadcast.getBody_asB64	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.prototype.getBody_asB64 = function() {$/;"	m
proto.NetworkMessage.StarBroadcast.getBody_asU8	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.prototype.getBody_asU8 = function() {$/;"	m
proto.NetworkMessage.StarBroadcast.getSenderId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.prototype.getSenderId = function() {$/;"	m
proto.NetworkMessage.StarBroadcast.serializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.prototype.serializeBinary = function() {$/;"	m
proto.NetworkMessage.StarBroadcast.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.NetworkMessage.StarBroadcast.setBody	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.prototype.setBody = function(value) {$/;"	m
proto.NetworkMessage.StarBroadcast.setSenderId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.prototype.setSenderId = function(value) {$/;"	m
proto.NetworkMessage.StarBroadcast.toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.NetworkMessage.StarBroadcast.toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.toObject = function(includeInstance, msg) {$/;"	f
proto.NetworkMessage.StarBroadcast.toObject.f.senderId	lib/teletype-client_pb.js	/^    senderId: jspb.Message.getFieldWithDefault(msg, 1, ""),$/;"	p
proto.NetworkMessage.StarJoinNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification = function(opt_data) {$/;"	f
proto.NetworkMessage.StarJoinNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.NetworkMessage.StarJoinNotification.clearMemberIdentity	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.prototype.clearMemberIdentity = function() {$/;"	m
proto.NetworkMessage.StarJoinNotification.deserializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.deserializeBinary = function(bytes) {$/;"	f
proto.NetworkMessage.StarJoinNotification.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.NetworkMessage.StarJoinNotification.getMemberId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.prototype.getMemberId = function() {$/;"	m
proto.NetworkMessage.StarJoinNotification.getMemberIdentity	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.prototype.getMemberIdentity = function() {$/;"	m
proto.NetworkMessage.StarJoinNotification.hasMemberIdentity	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.prototype.hasMemberIdentity = function() {$/;"	m
proto.NetworkMessage.StarJoinNotification.serializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.prototype.serializeBinary = function() {$/;"	m
proto.NetworkMessage.StarJoinNotification.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.NetworkMessage.StarJoinNotification.setMemberId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.prototype.setMemberId = function(value) {$/;"	m
proto.NetworkMessage.StarJoinNotification.setMemberIdentity	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.prototype.setMemberIdentity = function(value) {$/;"	m
proto.NetworkMessage.StarJoinNotification.toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.NetworkMessage.StarJoinNotification.toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.toObject = function(includeInstance, msg) {$/;"	f
proto.NetworkMessage.StarJoinNotification.toObject.f.memberId	lib/teletype-client_pb.js	/^    memberId: jspb.Message.getFieldWithDefault(msg, 1, ""),$/;"	p
proto.NetworkMessage.StarJoinRequest	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinRequest = function(opt_data) {$/;"	f
proto.NetworkMessage.StarJoinRequest	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinRequest.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.NetworkMessage.StarJoinRequest.deserializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinRequest.deserializeBinary = function(bytes) {$/;"	f
proto.NetworkMessage.StarJoinRequest.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinRequest.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.NetworkMessage.StarJoinRequest.getSenderId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinRequest.prototype.getSenderId = function() {$/;"	m
proto.NetworkMessage.StarJoinRequest.serializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinRequest.prototype.serializeBinary = function() {$/;"	m
proto.NetworkMessage.StarJoinRequest.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinRequest.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.NetworkMessage.StarJoinRequest.setSenderId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinRequest.prototype.setSenderId = function(value) {$/;"	m
proto.NetworkMessage.StarJoinRequest.toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinRequest.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.NetworkMessage.StarJoinRequest.toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinRequest.toObject = function(includeInstance, msg) {$/;"	f
proto.NetworkMessage.StarJoinRequest.toObject.f.senderId	lib/teletype-client_pb.js	/^    senderId: jspb.Message.getFieldWithDefault(msg, 1, "")$/;"	p
proto.NetworkMessage.StarJoinResponse	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinResponse = function(opt_data) {$/;"	f
proto.NetworkMessage.StarJoinResponse	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinResponse.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.NetworkMessage.StarJoinResponse.clearMemberIdentitiesByIdMap	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinResponse.prototype.clearMemberIdentitiesByIdMap = function() {$/;"	m
proto.NetworkMessage.StarJoinResponse.deserializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinResponse.deserializeBinary = function(bytes) {$/;"	f
proto.NetworkMessage.StarJoinResponse.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinResponse.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.NetworkMessage.StarJoinResponse.getMemberIdentitiesByIdMap	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinResponse.prototype.getMemberIdentitiesByIdMap = function(opt_noLazyCreate) {$/;"	m
proto.NetworkMessage.StarJoinResponse.serializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinResponse.prototype.serializeBinary = function() {$/;"	m
proto.NetworkMessage.StarJoinResponse.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinResponse.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.NetworkMessage.StarJoinResponse.toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinResponse.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.NetworkMessage.StarJoinResponse.toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinResponse.toObject = function(includeInstance, msg) {$/;"	f
proto.NetworkMessage.StarJoinResponse.toObject.f.memberIdentitiesByIdMap	lib/teletype-client_pb.js	/^    memberIdentitiesByIdMap: (f = msg.getMemberIdentitiesByIdMap()) ? f.toObject(includeInstance, proto.PeerIdentity.toObject) : []$/;"	p
proto.NetworkMessage.StarLeaveNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification = function(opt_data) {$/;"	f
proto.NetworkMessage.StarLeaveNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.NetworkMessage.StarLeaveNotification.deserializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification.deserializeBinary = function(bytes) {$/;"	f
proto.NetworkMessage.StarLeaveNotification.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.NetworkMessage.StarLeaveNotification.getConnectionLost	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification.prototype.getConnectionLost = function() {$/;"	m
proto.NetworkMessage.StarLeaveNotification.getMemberId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification.prototype.getMemberId = function() {$/;"	m
proto.NetworkMessage.StarLeaveNotification.serializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification.prototype.serializeBinary = function() {$/;"	m
proto.NetworkMessage.StarLeaveNotification.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.NetworkMessage.StarLeaveNotification.setConnectionLost	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification.prototype.setConnectionLost = function(value) {$/;"	m
proto.NetworkMessage.StarLeaveNotification.setMemberId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification.prototype.setMemberId = function(value) {$/;"	m
proto.NetworkMessage.StarLeaveNotification.toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.NetworkMessage.StarLeaveNotification.toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification.toObject = function(includeInstance, msg) {$/;"	f
proto.NetworkMessage.StarLeaveNotification.toObject.f.memberId	lib/teletype-client_pb.js	/^    memberId: jspb.Message.getFieldWithDefault(msg, 1, ""),$/;"	p
proto.NetworkMessage.StarUnicast	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast = function(opt_data) {$/;"	f
proto.NetworkMessage.StarUnicast	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.NetworkMessage.StarUnicast.deserializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.deserializeBinary = function(bytes) {$/;"	f
proto.NetworkMessage.StarUnicast.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.NetworkMessage.StarUnicast.getBody	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.prototype.getBody = function() {$/;"	m
proto.NetworkMessage.StarUnicast.getBody_asB64	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.prototype.getBody_asB64 = function() {$/;"	m
proto.NetworkMessage.StarUnicast.getBody_asU8	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.prototype.getBody_asU8 = function() {$/;"	m
proto.NetworkMessage.StarUnicast.getRecipientId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.prototype.getRecipientId = function() {$/;"	m
proto.NetworkMessage.StarUnicast.getSenderId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.prototype.getSenderId = function() {$/;"	m
proto.NetworkMessage.StarUnicast.serializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.prototype.serializeBinary = function() {$/;"	m
proto.NetworkMessage.StarUnicast.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.NetworkMessage.StarUnicast.setBody	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.prototype.setBody = function(value) {$/;"	m
proto.NetworkMessage.StarUnicast.setRecipientId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.prototype.setRecipientId = function(value) {$/;"	m
proto.NetworkMessage.StarUnicast.setSenderId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.prototype.setSenderId = function(value) {$/;"	m
proto.NetworkMessage.StarUnicast.toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.NetworkMessage.StarUnicast.toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.toObject = function(includeInstance, msg) {$/;"	f
proto.NetworkMessage.StarUnicast.toObject.f.senderId	lib/teletype-client_pb.js	/^    senderId: jspb.Message.getFieldWithDefault(msg, 1, ""),$/;"	p
proto.NetworkMessage.VariantCase.STAR_BROADCAST	lib/teletype-client_pb.js	/^  STAR_BROADCAST: 7$/;"	p
proto.NetworkMessage.VariantCase.STAR_JOIN_NOTIFICATION	lib/teletype-client_pb.js	/^  STAR_JOIN_NOTIFICATION: 4,$/;"	p
proto.NetworkMessage.VariantCase.STAR_JOIN_REQUEST	lib/teletype-client_pb.js	/^  STAR_JOIN_REQUEST: 2,$/;"	p
proto.NetworkMessage.VariantCase.STAR_JOIN_RESPONSE	lib/teletype-client_pb.js	/^  STAR_JOIN_RESPONSE: 3,$/;"	p
proto.NetworkMessage.VariantCase.STAR_LEAVE_NOTIFICATION	lib/teletype-client_pb.js	/^  STAR_LEAVE_NOTIFICATION: 5,$/;"	p
proto.NetworkMessage.VariantCase.STAR_UNICAST	lib/teletype-client_pb.js	/^  STAR_UNICAST: 6,$/;"	p
proto.NetworkMessage.VariantCase.VARIANT_NOT_SET	lib/teletype-client_pb.js	/^  VARIANT_NOT_SET: 0,$/;"	p
proto.NetworkMessage.clearStarBroadcast	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.clearStarBroadcast = function() {$/;"	m
proto.NetworkMessage.clearStarJoinNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.clearStarJoinNotification = function() {$/;"	m
proto.NetworkMessage.clearStarJoinRequest	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.clearStarJoinRequest = function() {$/;"	m
proto.NetworkMessage.clearStarJoinResponse	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.clearStarJoinResponse = function() {$/;"	m
proto.NetworkMessage.clearStarLeaveNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.clearStarLeaveNotification = function() {$/;"	m
proto.NetworkMessage.clearStarUnicast	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.clearStarUnicast = function() {$/;"	m
proto.NetworkMessage.deserializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.deserializeBinary = function(bytes) {$/;"	f
proto.NetworkMessage.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.NetworkMessage.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.NetworkMessage.getNetworkId	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.getNetworkId = function() {$/;"	m
proto.NetworkMessage.getStarBroadcast	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.getStarBroadcast = function() {$/;"	m
proto.NetworkMessage.getStarJoinNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.getStarJoinNotification = function() {$/;"	m
proto.NetworkMessage.getStarJoinRequest	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.getStarJoinRequest = function() {$/;"	m
proto.NetworkMessage.getStarJoinResponse	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.getStarJoinResponse = function() {$/;"	m
proto.NetworkMessage.getStarLeaveNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.getStarLeaveNotification = function() {$/;"	m
proto.NetworkMessage.getStarUnicast	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.getStarUnicast = function() {$/;"	m
proto.NetworkMessage.getVariantCase	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.getVariantCase = function() {$/;"	m
proto.NetworkMessage.hasStarBroadcast	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.hasStarBroadcast = function() {$/;"	m
proto.NetworkMessage.hasStarJoinNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.hasStarJoinNotification = function() {$/;"	m
proto.NetworkMessage.hasStarJoinRequest	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.hasStarJoinRequest = function() {$/;"	m
proto.NetworkMessage.hasStarJoinResponse	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.hasStarJoinResponse = function() {$/;"	m
proto.NetworkMessage.hasStarLeaveNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.hasStarLeaveNotification = function() {$/;"	m
proto.NetworkMessage.hasStarUnicast	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.hasStarUnicast = function() {$/;"	m
proto.NetworkMessage.serializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.serializeBinary = function() {$/;"	m
proto.NetworkMessage.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.NetworkMessage.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.NetworkMessage.setNetworkId	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.setNetworkId = function(value) {$/;"	m
proto.NetworkMessage.setStarBroadcast	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.setStarBroadcast = function(value) {$/;"	m
proto.NetworkMessage.setStarJoinNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.setStarJoinNotification = function(value) {$/;"	m
proto.NetworkMessage.setStarJoinRequest	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.setStarJoinRequest = function(value) {$/;"	m
proto.NetworkMessage.setStarJoinResponse	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.setStarJoinResponse = function(value) {$/;"	m
proto.NetworkMessage.setStarLeaveNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.setStarLeaveNotification = function(value) {$/;"	m
proto.NetworkMessage.setStarUnicast	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.setStarUnicast = function(value) {$/;"	m
proto.NetworkMessage.toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.NetworkMessage.toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.toObject = function(includeInstance, msg) {$/;"	f
proto.NetworkMessage.toObject.f.networkId	lib/teletype-client_pb.js	/^    networkId: jspb.Message.getFieldWithDefault(msg, 1, ""),$/;"	p
proto.Operation	lib/teletype-crdt_pb.js	/^proto.Operation = function(opt_data) {$/;"	f
proto.Operation	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.getVariantCase = function() {$/;"	c
proto.Operation.MarkersUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate = function(opt_data) {$/;"	f
proto.Operation.MarkersUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.Operation.MarkersUpdate.LayerOperation	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation = function(opt_data) {$/;"	f
proto.Operation.MarkersUpdate.LayerOperation	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.Operation.MarkersUpdate.LayerOperation.clearMarkerOperationsMap	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation.prototype.clearMarkerOperationsMap = function() {$/;"	m
proto.Operation.MarkersUpdate.LayerOperation.deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation.deserializeBinary = function(bytes) {$/;"	f
proto.Operation.MarkersUpdate.LayerOperation.deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.Operation.MarkersUpdate.LayerOperation.getIsDeletion	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation.prototype.getIsDeletion = function() {$/;"	m
proto.Operation.MarkersUpdate.LayerOperation.getMarkerOperationsMap	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation.prototype.getMarkerOperationsMap = function(opt_noLazyCreate) {$/;"	m
proto.Operation.MarkersUpdate.LayerOperation.serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation.prototype.serializeBinary = function() {$/;"	m
proto.Operation.MarkersUpdate.LayerOperation.serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.Operation.MarkersUpdate.LayerOperation.setIsDeletion	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation.prototype.setIsDeletion = function(value) {$/;"	m
proto.Operation.MarkersUpdate.LayerOperation.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.Operation.MarkersUpdate.LayerOperation.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation.toObject = function(includeInstance, msg) {$/;"	f
proto.Operation.MarkersUpdate.LayerOperation.toObject.f.isDeletion	lib/teletype-crdt_pb.js	/^    isDeletion: jspb.Message.getFieldWithDefault(msg, 1, false),$/;"	p
proto.Operation.MarkersUpdate.LogicalRange	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange = function(opt_data) {$/;"	f
proto.Operation.MarkersUpdate.LogicalRange	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.Operation.MarkersUpdate.LogicalRange.clearEndDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.clearEndDependencyId = function() {$/;"	m
proto.Operation.MarkersUpdate.LogicalRange.clearOffsetInEndDependency	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.clearOffsetInEndDependency = function() {$/;"	m
proto.Operation.MarkersUpdate.LogicalRange.clearOffsetInStartDependency	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.clearOffsetInStartDependency = function() {$/;"	m
proto.Operation.MarkersUpdate.LogicalRange.clearStartDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.clearStartDependencyId = function() {$/;"	m
proto.Operation.MarkersUpdate.LogicalRange.deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.deserializeBinary = function(bytes) {$/;"	f
proto.Operation.MarkersUpdate.LogicalRange.deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.Operation.MarkersUpdate.LogicalRange.getEndDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.getEndDependencyId = function() {$/;"	m
proto.Operation.MarkersUpdate.LogicalRange.getOffsetInEndDependency	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.getOffsetInEndDependency = function() {$/;"	m
proto.Operation.MarkersUpdate.LogicalRange.getOffsetInStartDependency	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.getOffsetInStartDependency = function() {$/;"	m
proto.Operation.MarkersUpdate.LogicalRange.getStartDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.getStartDependencyId = function() {$/;"	m
proto.Operation.MarkersUpdate.LogicalRange.hasEndDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.hasEndDependencyId = function() {$/;"	m
proto.Operation.MarkersUpdate.LogicalRange.hasOffsetInEndDependency	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.hasOffsetInEndDependency = function() {$/;"	m
proto.Operation.MarkersUpdate.LogicalRange.hasOffsetInStartDependency	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.hasOffsetInStartDependency = function() {$/;"	m
proto.Operation.MarkersUpdate.LogicalRange.hasStartDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.hasStartDependencyId = function() {$/;"	m
proto.Operation.MarkersUpdate.LogicalRange.serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.serializeBinary = function() {$/;"	m
proto.Operation.MarkersUpdate.LogicalRange.serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.Operation.MarkersUpdate.LogicalRange.setEndDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.setEndDependencyId = function(value) {$/;"	m
proto.Operation.MarkersUpdate.LogicalRange.setOffsetInEndDependency	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.setOffsetInEndDependency = function(value) {$/;"	m
proto.Operation.MarkersUpdate.LogicalRange.setOffsetInStartDependency	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.setOffsetInStartDependency = function(value) {$/;"	m
proto.Operation.MarkersUpdate.LogicalRange.setStartDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.setStartDependencyId = function(value) {$/;"	m
proto.Operation.MarkersUpdate.LogicalRange.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.Operation.MarkersUpdate.LogicalRange.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.toObject = function(includeInstance, msg) {$/;"	f
proto.Operation.MarkersUpdate.LogicalRange.toObject.f.startDependencyId	lib/teletype-crdt_pb.js	/^    startDependencyId: (f = msg.getStartDependencyId()) && proto.Operation.SpliceId.toObject(includeInstance, f),$/;"	p
proto.Operation.MarkersUpdate.MarkerOperation	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation = function(opt_data) {$/;"	f
proto.Operation.MarkersUpdate.MarkerOperation	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.Operation.MarkersUpdate.MarkerOperation.clearMarkerUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.prototype.clearMarkerUpdate = function() {$/;"	m
proto.Operation.MarkersUpdate.MarkerOperation.deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.deserializeBinary = function(bytes) {$/;"	f
proto.Operation.MarkersUpdate.MarkerOperation.deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.Operation.MarkersUpdate.MarkerOperation.getIsDeletion	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.prototype.getIsDeletion = function() {$/;"	m
proto.Operation.MarkersUpdate.MarkerOperation.getMarkerUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.prototype.getMarkerUpdate = function() {$/;"	m
proto.Operation.MarkersUpdate.MarkerOperation.hasMarkerUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.prototype.hasMarkerUpdate = function() {$/;"	m
proto.Operation.MarkersUpdate.MarkerOperation.serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.prototype.serializeBinary = function() {$/;"	m
proto.Operation.MarkersUpdate.MarkerOperation.serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.Operation.MarkersUpdate.MarkerOperation.setIsDeletion	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.prototype.setIsDeletion = function(value) {$/;"	m
proto.Operation.MarkersUpdate.MarkerOperation.setMarkerUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.prototype.setMarkerUpdate = function(value) {$/;"	m
proto.Operation.MarkersUpdate.MarkerOperation.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.Operation.MarkersUpdate.MarkerOperation.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.toObject = function(includeInstance, msg) {$/;"	f
proto.Operation.MarkersUpdate.MarkerOperation.toObject.f.isDeletion	lib/teletype-crdt_pb.js	/^    isDeletion: jspb.Message.getFieldWithDefault(msg, 1, false),$/;"	p
proto.Operation.MarkersUpdate.MarkerUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate = function(opt_data) {$/;"	f
proto.Operation.MarkersUpdate.MarkerUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.Operation.MarkersUpdate.MarkerUpdate.clearRange	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.clearRange = function() {$/;"	m
proto.Operation.MarkersUpdate.MarkerUpdate.deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.deserializeBinary = function(bytes) {$/;"	f
proto.Operation.MarkersUpdate.MarkerUpdate.deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.Operation.MarkersUpdate.MarkerUpdate.getExclusive	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.getExclusive = function() {$/;"	m
proto.Operation.MarkersUpdate.MarkerUpdate.getRange	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.getRange = function() {$/;"	m
proto.Operation.MarkersUpdate.MarkerUpdate.getReversed	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.getReversed = function() {$/;"	m
proto.Operation.MarkersUpdate.MarkerUpdate.getTailed	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.getTailed = function() {$/;"	m
proto.Operation.MarkersUpdate.MarkerUpdate.hasRange	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.hasRange = function() {$/;"	m
proto.Operation.MarkersUpdate.MarkerUpdate.serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.serializeBinary = function() {$/;"	m
proto.Operation.MarkersUpdate.MarkerUpdate.serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.Operation.MarkersUpdate.MarkerUpdate.setExclusive	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.setExclusive = function(value) {$/;"	m
proto.Operation.MarkersUpdate.MarkerUpdate.setRange	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.setRange = function(value) {$/;"	m
proto.Operation.MarkersUpdate.MarkerUpdate.setReversed	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.setReversed = function(value) {$/;"	m
proto.Operation.MarkersUpdate.MarkerUpdate.setTailed	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.setTailed = function(value) {$/;"	m
proto.Operation.MarkersUpdate.MarkerUpdate.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.Operation.MarkersUpdate.MarkerUpdate.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.toObject = function(includeInstance, msg) {$/;"	f
proto.Operation.MarkersUpdate.MarkerUpdate.toObject.f.range	lib/teletype-crdt_pb.js	/^    range: (f = msg.getRange()) && proto.Operation.MarkersUpdate.LogicalRange.toObject(includeInstance, f),$/;"	p
proto.Operation.MarkersUpdate.clearLayerOperationsMap	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.prototype.clearLayerOperationsMap = function() {$/;"	m
proto.Operation.MarkersUpdate.deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.deserializeBinary = function(bytes) {$/;"	f
proto.Operation.MarkersUpdate.deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.Operation.MarkersUpdate.getLayerOperationsMap	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.prototype.getLayerOperationsMap = function(opt_noLazyCreate) {$/;"	m
proto.Operation.MarkersUpdate.getSiteId	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.prototype.getSiteId = function() {$/;"	m
proto.Operation.MarkersUpdate.serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.prototype.serializeBinary = function() {$/;"	m
proto.Operation.MarkersUpdate.serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.Operation.MarkersUpdate.setSiteId	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.prototype.setSiteId = function(value) {$/;"	m
proto.Operation.MarkersUpdate.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.Operation.MarkersUpdate.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.toObject = function(includeInstance, msg) {$/;"	f
proto.Operation.MarkersUpdate.toObject.f.siteId	lib/teletype-crdt_pb.js	/^    siteId: jspb.Message.getFieldWithDefault(msg, 1, 0),$/;"	p
proto.Operation.Point	lib/teletype-crdt_pb.js	/^proto.Operation.Point = function(opt_data) {$/;"	f
proto.Operation.Point	lib/teletype-crdt_pb.js	/^proto.Operation.Point.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.Operation.Point.deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.Point.deserializeBinary = function(bytes) {$/;"	f
proto.Operation.Point.deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.Point.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.Operation.Point.getColumn	lib/teletype-crdt_pb.js	/^proto.Operation.Point.prototype.getColumn = function() {$/;"	m
proto.Operation.Point.getRow	lib/teletype-crdt_pb.js	/^proto.Operation.Point.prototype.getRow = function() {$/;"	m
proto.Operation.Point.serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.Point.prototype.serializeBinary = function() {$/;"	m
proto.Operation.Point.serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.Point.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.Operation.Point.setColumn	lib/teletype-crdt_pb.js	/^proto.Operation.Point.prototype.setColumn = function(value) {$/;"	m
proto.Operation.Point.setRow	lib/teletype-crdt_pb.js	/^proto.Operation.Point.prototype.setRow = function(value) {$/;"	m
proto.Operation.Point.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.Point.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.Operation.Point.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.Point.toObject = function(includeInstance, msg) {$/;"	f
proto.Operation.Point.toObject.f.row	lib/teletype-crdt_pb.js	/^    row: jspb.Message.getFieldWithDefault(msg, 1, 0),$/;"	p
proto.Operation.Splice	lib/teletype-crdt_pb.js	/^proto.Operation.Splice = function(opt_data) {$/;"	f
proto.Operation.Splice	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.Operation.Splice.Deletion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion = function(opt_data) {$/;"	f
proto.Operation.Splice.Deletion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.Operation.Splice.Deletion.clearLeftDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.clearLeftDependencyId = function() {$/;"	m
proto.Operation.Splice.Deletion.clearMaxSeqsBySiteMap	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.clearMaxSeqsBySiteMap = function() {$/;"	m
proto.Operation.Splice.Deletion.clearOffsetInLeftDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.clearOffsetInLeftDependency = function() {$/;"	m
proto.Operation.Splice.Deletion.clearOffsetInRightDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.clearOffsetInRightDependency = function() {$/;"	m
proto.Operation.Splice.Deletion.clearRightDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.clearRightDependencyId = function() {$/;"	m
proto.Operation.Splice.Deletion.deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.deserializeBinary = function(bytes) {$/;"	f
proto.Operation.Splice.Deletion.deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.Operation.Splice.Deletion.getLeftDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.getLeftDependencyId = function() {$/;"	m
proto.Operation.Splice.Deletion.getMaxSeqsBySiteMap	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.getMaxSeqsBySiteMap = function(opt_noLazyCreate) {$/;"	m
proto.Operation.Splice.Deletion.getOffsetInLeftDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.getOffsetInLeftDependency = function() {$/;"	m
proto.Operation.Splice.Deletion.getOffsetInRightDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.getOffsetInRightDependency = function() {$/;"	m
proto.Operation.Splice.Deletion.getRightDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.getRightDependencyId = function() {$/;"	m
proto.Operation.Splice.Deletion.hasLeftDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.hasLeftDependencyId = function() {$/;"	m
proto.Operation.Splice.Deletion.hasOffsetInLeftDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.hasOffsetInLeftDependency = function() {$/;"	m
proto.Operation.Splice.Deletion.hasOffsetInRightDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.hasOffsetInRightDependency = function() {$/;"	m
proto.Operation.Splice.Deletion.hasRightDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.hasRightDependencyId = function() {$/;"	m
proto.Operation.Splice.Deletion.serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.serializeBinary = function() {$/;"	m
proto.Operation.Splice.Deletion.serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.Operation.Splice.Deletion.setLeftDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.setLeftDependencyId = function(value) {$/;"	m
proto.Operation.Splice.Deletion.setOffsetInLeftDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.setOffsetInLeftDependency = function(value) {$/;"	m
proto.Operation.Splice.Deletion.setOffsetInRightDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.setOffsetInRightDependency = function(value) {$/;"	m
proto.Operation.Splice.Deletion.setRightDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.setRightDependencyId = function(value) {$/;"	m
proto.Operation.Splice.Deletion.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.Operation.Splice.Deletion.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.toObject = function(includeInstance, msg) {$/;"	f
proto.Operation.Splice.Deletion.toObject.f.leftDependencyId	lib/teletype-crdt_pb.js	/^    leftDependencyId: (f = msg.getLeftDependencyId()) && proto.Operation.SpliceId.toObject(includeInstance, f),$/;"	p
proto.Operation.Splice.Insertion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion = function(opt_data) {$/;"	f
proto.Operation.Splice.Insertion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.Operation.Splice.Insertion.clearLeftDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.clearLeftDependencyId = function() {$/;"	m
proto.Operation.Splice.Insertion.clearOffsetInLeftDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.clearOffsetInLeftDependency = function() {$/;"	m
proto.Operation.Splice.Insertion.clearOffsetInRightDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.clearOffsetInRightDependency = function() {$/;"	m
proto.Operation.Splice.Insertion.clearRightDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.clearRightDependencyId = function() {$/;"	m
proto.Operation.Splice.Insertion.deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.deserializeBinary = function(bytes) {$/;"	f
proto.Operation.Splice.Insertion.deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.Operation.Splice.Insertion.getLeftDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.getLeftDependencyId = function() {$/;"	m
proto.Operation.Splice.Insertion.getOffsetInLeftDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.getOffsetInLeftDependency = function() {$/;"	m
proto.Operation.Splice.Insertion.getOffsetInRightDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.getOffsetInRightDependency = function() {$/;"	m
proto.Operation.Splice.Insertion.getRightDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.getRightDependencyId = function() {$/;"	m
proto.Operation.Splice.Insertion.getText	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.getText = function() {$/;"	m
proto.Operation.Splice.Insertion.hasLeftDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.hasLeftDependencyId = function() {$/;"	m
proto.Operation.Splice.Insertion.hasOffsetInLeftDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.hasOffsetInLeftDependency = function() {$/;"	m
proto.Operation.Splice.Insertion.hasOffsetInRightDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.hasOffsetInRightDependency = function() {$/;"	m
proto.Operation.Splice.Insertion.hasRightDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.hasRightDependencyId = function() {$/;"	m
proto.Operation.Splice.Insertion.serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.serializeBinary = function() {$/;"	m
proto.Operation.Splice.Insertion.serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.Operation.Splice.Insertion.setLeftDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.setLeftDependencyId = function(value) {$/;"	m
proto.Operation.Splice.Insertion.setOffsetInLeftDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.setOffsetInLeftDependency = function(value) {$/;"	m
proto.Operation.Splice.Insertion.setOffsetInRightDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.setOffsetInRightDependency = function(value) {$/;"	m
proto.Operation.Splice.Insertion.setRightDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.setRightDependencyId = function(value) {$/;"	m
proto.Operation.Splice.Insertion.setText	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.setText = function(value) {$/;"	m
proto.Operation.Splice.Insertion.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.Operation.Splice.Insertion.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.toObject = function(includeInstance, msg) {$/;"	f
proto.Operation.Splice.Insertion.toObject.f.text	lib/teletype-crdt_pb.js	/^    text: jspb.Message.getFieldWithDefault(msg, 2, ""),$/;"	p
proto.Operation.Splice.clearDeletion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.clearDeletion = function() {$/;"	m
proto.Operation.Splice.clearInsertion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.clearInsertion = function() {$/;"	m
proto.Operation.Splice.clearSpliceId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.clearSpliceId = function() {$/;"	m
proto.Operation.Splice.deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.deserializeBinary = function(bytes) {$/;"	f
proto.Operation.Splice.deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.Operation.Splice.getDeletion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.getDeletion = function() {$/;"	m
proto.Operation.Splice.getInsertion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.getInsertion = function() {$/;"	m
proto.Operation.Splice.getSpliceId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.getSpliceId = function() {$/;"	m
proto.Operation.Splice.hasDeletion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.hasDeletion = function() {$/;"	m
proto.Operation.Splice.hasInsertion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.hasInsertion = function() {$/;"	m
proto.Operation.Splice.hasSpliceId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.hasSpliceId = function() {$/;"	m
proto.Operation.Splice.serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.serializeBinary = function() {$/;"	m
proto.Operation.Splice.serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.Operation.Splice.setDeletion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.setDeletion = function(value) {$/;"	m
proto.Operation.Splice.setInsertion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.setInsertion = function(value) {$/;"	m
proto.Operation.Splice.setSpliceId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.setSpliceId = function(value) {$/;"	m
proto.Operation.Splice.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.Operation.Splice.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.toObject = function(includeInstance, msg) {$/;"	f
proto.Operation.Splice.toObject.f.spliceId	lib/teletype-crdt_pb.js	/^    spliceId: (f = msg.getSpliceId()) && proto.Operation.SpliceId.toObject(includeInstance, f),$/;"	p
proto.Operation.SpliceId	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId = function(opt_data) {$/;"	f
proto.Operation.SpliceId	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.Operation.SpliceId.deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId.deserializeBinary = function(bytes) {$/;"	f
proto.Operation.SpliceId.deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.Operation.SpliceId.getSeq	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId.prototype.getSeq = function() {$/;"	m
proto.Operation.SpliceId.getSite	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId.prototype.getSite = function() {$/;"	m
proto.Operation.SpliceId.serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId.prototype.serializeBinary = function() {$/;"	m
proto.Operation.SpliceId.serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.Operation.SpliceId.setSeq	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId.prototype.setSeq = function(value) {$/;"	m
proto.Operation.SpliceId.setSite	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId.prototype.setSite = function(value) {$/;"	m
proto.Operation.SpliceId.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.Operation.SpliceId.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId.toObject = function(includeInstance, msg) {$/;"	f
proto.Operation.SpliceId.toObject.f.site	lib/teletype-crdt_pb.js	/^    site: jspb.Message.getFieldWithDefault(msg, 1, 0),$/;"	p
proto.Operation.Undo	lib/teletype-crdt_pb.js	/^proto.Operation.Undo = function(opt_data) {$/;"	f
proto.Operation.Undo	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.Operation.Undo.clearSpliceId	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.prototype.clearSpliceId = function() {$/;"	m
proto.Operation.Undo.deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.deserializeBinary = function(bytes) {$/;"	f
proto.Operation.Undo.deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.Operation.Undo.getSpliceId	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.prototype.getSpliceId = function() {$/;"	m
proto.Operation.Undo.getUndoCount	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.prototype.getUndoCount = function() {$/;"	m
proto.Operation.Undo.hasSpliceId	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.prototype.hasSpliceId = function() {$/;"	m
proto.Operation.Undo.serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.prototype.serializeBinary = function() {$/;"	m
proto.Operation.Undo.serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.Operation.Undo.setSpliceId	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.prototype.setSpliceId = function(value) {$/;"	m
proto.Operation.Undo.setUndoCount	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.prototype.setUndoCount = function(value) {$/;"	m
proto.Operation.Undo.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.Operation.Undo.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.toObject = function(includeInstance, msg) {$/;"	f
proto.Operation.Undo.toObject.f.spliceId	lib/teletype-crdt_pb.js	/^    spliceId: (f = msg.getSpliceId()) && proto.Operation.SpliceId.toObject(includeInstance, f),$/;"	p
proto.Operation.VariantCase.MARKERS_UPDATE	lib/teletype-crdt_pb.js	/^  MARKERS_UPDATE: 3$/;"	p
proto.Operation.VariantCase.SPLICE	lib/teletype-crdt_pb.js	/^  SPLICE: 1,$/;"	p
proto.Operation.VariantCase.UNDO	lib/teletype-crdt_pb.js	/^  UNDO: 2,$/;"	p
proto.Operation.VariantCase.VARIANT_NOT_SET	lib/teletype-crdt_pb.js	/^  VARIANT_NOT_SET: 0,$/;"	p
proto.Operation.clearMarkersUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.clearMarkersUpdate = function() {$/;"	m
proto.Operation.clearSplice	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.clearSplice = function() {$/;"	m
proto.Operation.clearUndo	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.clearUndo = function() {$/;"	m
proto.Operation.deserializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.deserializeBinary = function(bytes) {$/;"	f
proto.Operation.deserializeBinaryFromReader	lib/teletype-crdt_pb.js	/^proto.Operation.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.Operation.getMarkersUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.getMarkersUpdate = function() {$/;"	m
proto.Operation.getSplice	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.getSplice = function() {$/;"	m
proto.Operation.getUndo	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.getUndo = function() {$/;"	m
proto.Operation.getVariantCase	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.getVariantCase = function() {$/;"	m
proto.Operation.hasMarkersUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.hasMarkersUpdate = function() {$/;"	m
proto.Operation.hasSplice	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.hasSplice = function() {$/;"	m
proto.Operation.hasUndo	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.hasUndo = function() {$/;"	m
proto.Operation.serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.serializeBinary = function() {$/;"	m
proto.Operation.serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.Operation.setMarkersUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.setMarkersUpdate = function(value) {$/;"	m
proto.Operation.setSplice	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.setSplice = function(value) {$/;"	m
proto.Operation.setUndo	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.setUndo = function(value) {$/;"	m
proto.Operation.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.Operation.toObject	lib/teletype-crdt_pb.js	/^proto.Operation.toObject = function(includeInstance, msg) {$/;"	f
proto.Operation.toObject.f.splice	lib/teletype-crdt_pb.js	/^    splice: (f = msg.getSplice()) && proto.Operation.Splice.toObject(includeInstance, f),$/;"	p
proto.PeerIdentity	lib/teletype-client_pb.js	/^proto.PeerIdentity = function(opt_data) {$/;"	f
proto.PeerIdentity	lib/teletype-client_pb.js	/^proto.PeerIdentity.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.PeerIdentity.deserializeBinary	lib/teletype-client_pb.js	/^proto.PeerIdentity.deserializeBinary = function(bytes) {$/;"	f
proto.PeerIdentity.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.PeerIdentity.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.PeerIdentity.getLogin	lib/teletype-client_pb.js	/^proto.PeerIdentity.prototype.getLogin = function() {$/;"	m
proto.PeerIdentity.serializeBinary	lib/teletype-client_pb.js	/^proto.PeerIdentity.prototype.serializeBinary = function() {$/;"	m
proto.PeerIdentity.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.PeerIdentity.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.PeerIdentity.setLogin	lib/teletype-client_pb.js	/^proto.PeerIdentity.prototype.setLogin = function(value) {$/;"	m
proto.PeerIdentity.toObject	lib/teletype-client_pb.js	/^proto.PeerIdentity.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.PeerIdentity.toObject	lib/teletype-client_pb.js	/^proto.PeerIdentity.toObject = function(includeInstance, msg) {$/;"	f
proto.PeerIdentity.toObject.f.login	lib/teletype-client_pb.js	/^    login: jspb.Message.getFieldWithDefault(msg, 1, "")$/;"	p
proto.PortalSubscriptionResponse	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse = function(opt_data) {$/;"	f
proto.PortalSubscriptionResponse	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.PortalSubscriptionResponse.addActiveBufferProxies	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.addActiveBufferProxies = function(opt_value, opt_index) {$/;"	m
proto.PortalSubscriptionResponse.addActiveEditorProxies	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.addActiveEditorProxies = function(opt_value, opt_index) {$/;"	m
proto.PortalSubscriptionResponse.addEditorProxiesMetadata	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.addEditorProxiesMetadata = function(opt_value, opt_index) {$/;"	m
proto.PortalSubscriptionResponse.addTethers	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.addTethers = function(opt_value, opt_index) {$/;"	m
proto.PortalSubscriptionResponse.clearActiveBufferProxiesList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.clearActiveBufferProxiesList = function() {$/;"	m
proto.PortalSubscriptionResponse.clearActiveEditorProxiesList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.clearActiveEditorProxiesList = function() {$/;"	m
proto.PortalSubscriptionResponse.clearActiveEditorProxyIdsBySiteIdMap	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.clearActiveEditorProxyIdsBySiteIdMap = function() {$/;"	m
proto.PortalSubscriptionResponse.clearEditorProxiesMetadataList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.clearEditorProxiesMetadataList = function() {$/;"	m
proto.PortalSubscriptionResponse.clearSiteIdsByPeerIdMap	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.clearSiteIdsByPeerIdMap = function() {$/;"	m
proto.PortalSubscriptionResponse.clearTethersList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.clearTethersList = function() {$/;"	m
proto.PortalSubscriptionResponse.deserializeBinary	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.deserializeBinary = function(bytes) {$/;"	f
proto.PortalSubscriptionResponse.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.PortalSubscriptionResponse.getActiveBufferProxiesList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.getActiveBufferProxiesList = function() {$/;"	m
proto.PortalSubscriptionResponse.getActiveEditorProxiesList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.getActiveEditorProxiesList = function() {$/;"	m
proto.PortalSubscriptionResponse.getActiveEditorProxyIdsBySiteIdMap	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.getActiveEditorProxyIdsBySiteIdMap = function(opt_noLazyCreate) {$/;"	m
proto.PortalSubscriptionResponse.getEditorProxiesMetadataList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.getEditorProxiesMetadataList = function() {$/;"	m
proto.PortalSubscriptionResponse.getSiteIdsByPeerIdMap	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.getSiteIdsByPeerIdMap = function(opt_noLazyCreate) {$/;"	m
proto.PortalSubscriptionResponse.getTethersList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.getTethersList = function() {$/;"	m
proto.PortalSubscriptionResponse.serializeBinary	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.serializeBinary = function() {$/;"	m
proto.PortalSubscriptionResponse.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.PortalSubscriptionResponse.setActiveBufferProxiesList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.setActiveBufferProxiesList = function(value) {$/;"	m
proto.PortalSubscriptionResponse.setActiveEditorProxiesList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.setActiveEditorProxiesList = function(value) {$/;"	m
proto.PortalSubscriptionResponse.setEditorProxiesMetadataList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.setEditorProxiesMetadataList = function(value) {$/;"	m
proto.PortalSubscriptionResponse.setTethersList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.setTethersList = function(value) {$/;"	m
proto.PortalSubscriptionResponse.toObject	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.PortalSubscriptionResponse.toObject	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.toObject = function(includeInstance, msg) {$/;"	f
proto.PortalSubscriptionResponse.toObject.f.siteIdsByPeerIdMap	lib/teletype-client_pb.js	/^    siteIdsByPeerIdMap: (f = msg.getSiteIdsByPeerIdMap()) ? f.toObject(includeInstance, undefined) : [],$/;"	p
proto.PortalUpdate	lib/teletype-client_pb.js	/^proto.PortalUpdate = function(opt_data) {$/;"	f
proto.PortalUpdate	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.getVariantCase = function() {$/;"	c
proto.PortalUpdate.EditorProxyCreation	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation = function(opt_data) {$/;"	f
proto.PortalUpdate.EditorProxyCreation	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.PortalUpdate.EditorProxyCreation.clearEditorProxyMetadata	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation.prototype.clearEditorProxyMetadata = function() {$/;"	m
proto.PortalUpdate.EditorProxyCreation.deserializeBinary	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation.deserializeBinary = function(bytes) {$/;"	f
proto.PortalUpdate.EditorProxyCreation.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.PortalUpdate.EditorProxyCreation.getEditorProxyMetadata	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation.prototype.getEditorProxyMetadata = function() {$/;"	m
proto.PortalUpdate.EditorProxyCreation.hasEditorProxyMetadata	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation.prototype.hasEditorProxyMetadata = function() {$/;"	m
proto.PortalUpdate.EditorProxyCreation.serializeBinary	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation.prototype.serializeBinary = function() {$/;"	m
proto.PortalUpdate.EditorProxyCreation.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.PortalUpdate.EditorProxyCreation.setEditorProxyMetadata	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation.prototype.setEditorProxyMetadata = function(value) {$/;"	m
proto.PortalUpdate.EditorProxyCreation.toObject	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.PortalUpdate.EditorProxyCreation.toObject	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation.toObject = function(includeInstance, msg) {$/;"	f
proto.PortalUpdate.EditorProxyCreation.toObject.f.editorProxyMetadata	lib/teletype-client_pb.js	/^    editorProxyMetadata: (f = msg.getEditorProxyMetadata()) && proto.EditorProxyMetadata.toObject(includeInstance, f)$/;"	p
proto.PortalUpdate.EditorProxyRemoval	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyRemoval = function(opt_data) {$/;"	f
proto.PortalUpdate.EditorProxyRemoval	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyRemoval.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.PortalUpdate.EditorProxyRemoval.deserializeBinary	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyRemoval.deserializeBinary = function(bytes) {$/;"	f
proto.PortalUpdate.EditorProxyRemoval.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyRemoval.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.PortalUpdate.EditorProxyRemoval.getEditorProxyId	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyRemoval.prototype.getEditorProxyId = function() {$/;"	m
proto.PortalUpdate.EditorProxyRemoval.serializeBinary	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyRemoval.prototype.serializeBinary = function() {$/;"	m
proto.PortalUpdate.EditorProxyRemoval.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyRemoval.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.PortalUpdate.EditorProxyRemoval.setEditorProxyId	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyRemoval.prototype.setEditorProxyId = function(value) {$/;"	m
proto.PortalUpdate.EditorProxyRemoval.toObject	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyRemoval.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.PortalUpdate.EditorProxyRemoval.toObject	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyRemoval.toObject = function(includeInstance, msg) {$/;"	f
proto.PortalUpdate.EditorProxyRemoval.toObject.f.editorProxyId	lib/teletype-client_pb.js	/^    editorProxyId: jspb.Message.getFieldWithDefault(msg, 1, 0)$/;"	p
proto.PortalUpdate.EditorProxySwitch	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxySwitch = function(opt_data) {$/;"	f
proto.PortalUpdate.EditorProxySwitch	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxySwitch.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.PortalUpdate.EditorProxySwitch.deserializeBinary	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxySwitch.deserializeBinary = function(bytes) {$/;"	f
proto.PortalUpdate.EditorProxySwitch.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxySwitch.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.PortalUpdate.EditorProxySwitch.getEditorProxyId	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxySwitch.prototype.getEditorProxyId = function() {$/;"	m
proto.PortalUpdate.EditorProxySwitch.serializeBinary	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxySwitch.prototype.serializeBinary = function() {$/;"	m
proto.PortalUpdate.EditorProxySwitch.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxySwitch.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.PortalUpdate.EditorProxySwitch.setEditorProxyId	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxySwitch.prototype.setEditorProxyId = function(value) {$/;"	m
proto.PortalUpdate.EditorProxySwitch.toObject	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxySwitch.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.PortalUpdate.EditorProxySwitch.toObject	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxySwitch.toObject = function(includeInstance, msg) {$/;"	f
proto.PortalUpdate.EditorProxySwitch.toObject.f.editorProxyId	lib/teletype-client_pb.js	/^    editorProxyId: jspb.Message.getFieldWithDefault(msg, 1, 0)$/;"	p
proto.PortalUpdate.SiteAssignment	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment = function(opt_data) {$/;"	f
proto.PortalUpdate.SiteAssignment	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.PortalUpdate.SiteAssignment.deserializeBinary	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment.deserializeBinary = function(bytes) {$/;"	f
proto.PortalUpdate.SiteAssignment.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.PortalUpdate.SiteAssignment.getPeerId	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment.prototype.getPeerId = function() {$/;"	m
proto.PortalUpdate.SiteAssignment.getSiteId	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment.prototype.getSiteId = function() {$/;"	m
proto.PortalUpdate.SiteAssignment.serializeBinary	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment.prototype.serializeBinary = function() {$/;"	m
proto.PortalUpdate.SiteAssignment.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.PortalUpdate.SiteAssignment.setPeerId	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment.prototype.setPeerId = function(value) {$/;"	m
proto.PortalUpdate.SiteAssignment.setSiteId	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment.prototype.setSiteId = function(value) {$/;"	m
proto.PortalUpdate.SiteAssignment.toObject	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.PortalUpdate.SiteAssignment.toObject	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment.toObject = function(includeInstance, msg) {$/;"	f
proto.PortalUpdate.SiteAssignment.toObject.f.peerId	lib/teletype-client_pb.js	/^    peerId: jspb.Message.getFieldWithDefault(msg, 1, ""),$/;"	p
proto.PortalUpdate.VariantCase.EDITOR_PROXY_CREATION	lib/teletype-client_pb.js	/^  EDITOR_PROXY_CREATION: 5$/;"	p
proto.PortalUpdate.VariantCase.EDITOR_PROXY_SWITCH	lib/teletype-client_pb.js	/^  EDITOR_PROXY_SWITCH: 1,$/;"	p
proto.PortalUpdate.VariantCase.SITE_ASSIGNMENT	lib/teletype-client_pb.js	/^  SITE_ASSIGNMENT: 2,$/;"	p
proto.PortalUpdate.VariantCase.TETHER_UPDATE	lib/teletype-client_pb.js	/^  TETHER_UPDATE: 4,$/;"	p
proto.PortalUpdate.VariantCase.VARIANT_NOT_SET	lib/teletype-client_pb.js	/^  VARIANT_NOT_SET: 0,$/;"	p
proto.PortalUpdate.clearEditorProxyCreation	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.clearEditorProxyCreation = function() {$/;"	m
proto.PortalUpdate.clearEditorProxySwitch	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.clearEditorProxySwitch = function() {$/;"	m
proto.PortalUpdate.clearSiteAssignment	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.clearSiteAssignment = function() {$/;"	m
proto.PortalUpdate.clearTetherUpdate	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.clearTetherUpdate = function() {$/;"	m
proto.PortalUpdate.deserializeBinary	lib/teletype-client_pb.js	/^proto.PortalUpdate.deserializeBinary = function(bytes) {$/;"	f
proto.PortalUpdate.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.PortalUpdate.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.PortalUpdate.getEditorProxyCreation	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.getEditorProxyCreation = function() {$/;"	m
proto.PortalUpdate.getEditorProxySwitch	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.getEditorProxySwitch = function() {$/;"	m
proto.PortalUpdate.getSiteAssignment	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.getSiteAssignment = function() {$/;"	m
proto.PortalUpdate.getTetherUpdate	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.getTetherUpdate = function() {$/;"	m
proto.PortalUpdate.getVariantCase	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.getVariantCase = function() {$/;"	m
proto.PortalUpdate.hasEditorProxyCreation	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.hasEditorProxyCreation = function() {$/;"	m
proto.PortalUpdate.hasEditorProxySwitch	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.hasEditorProxySwitch = function() {$/;"	m
proto.PortalUpdate.hasSiteAssignment	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.hasSiteAssignment = function() {$/;"	m
proto.PortalUpdate.hasTetherUpdate	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.hasTetherUpdate = function() {$/;"	m
proto.PortalUpdate.serializeBinary	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.serializeBinary = function() {$/;"	m
proto.PortalUpdate.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.PortalUpdate.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.PortalUpdate.setEditorProxyCreation	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.setEditorProxyCreation = function(value) {$/;"	m
proto.PortalUpdate.setEditorProxySwitch	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.setEditorProxySwitch = function(value) {$/;"	m
proto.PortalUpdate.setSiteAssignment	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.setSiteAssignment = function(value) {$/;"	m
proto.PortalUpdate.setTetherUpdate	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.setTetherUpdate = function(value) {$/;"	m
proto.PortalUpdate.toObject	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.PortalUpdate.toObject	lib/teletype-client_pb.js	/^proto.PortalUpdate.toObject = function(includeInstance, msg) {$/;"	f
proto.PortalUpdate.toObject.f.editorProxySwitch	lib/teletype-client_pb.js	/^    editorProxySwitch: (f = msg.getEditorProxySwitch()) && proto.PortalUpdate.EditorProxySwitch.toObject(includeInstance, f),$/;"	p
proto.RouterMessage	lib/teletype-client_pb.js	/^proto.RouterMessage = function(opt_data) {$/;"	f
proto.RouterMessage	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.getVariantCase = function() {$/;"	c
proto.RouterMessage.Notification	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification = function(opt_data) {$/;"	f
proto.RouterMessage.Notification	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.RouterMessage.Notification.deserializeBinary	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.deserializeBinary = function(bytes) {$/;"	f
proto.RouterMessage.Notification.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.RouterMessage.Notification.getBody	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.prototype.getBody = function() {$/;"	m
proto.RouterMessage.Notification.getBody_asB64	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.prototype.getBody_asB64 = function() {$/;"	m
proto.RouterMessage.Notification.getBody_asU8	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.prototype.getBody_asU8 = function() {$/;"	m
proto.RouterMessage.Notification.getChannelId	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.prototype.getChannelId = function() {$/;"	m
proto.RouterMessage.Notification.serializeBinary	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.prototype.serializeBinary = function() {$/;"	m
proto.RouterMessage.Notification.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.RouterMessage.Notification.setBody	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.prototype.setBody = function(value) {$/;"	m
proto.RouterMessage.Notification.setChannelId	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.prototype.setChannelId = function(value) {$/;"	m
proto.RouterMessage.Notification.toObject	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.RouterMessage.Notification.toObject	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.toObject = function(includeInstance, msg) {$/;"	f
proto.RouterMessage.Notification.toObject.f.channelId	lib/teletype-client_pb.js	/^    channelId: jspb.Message.getFieldWithDefault(msg, 1, ""),$/;"	p
proto.RouterMessage.Request	lib/teletype-client_pb.js	/^proto.RouterMessage.Request = function(opt_data) {$/;"	f
proto.RouterMessage.Request	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.RouterMessage.Request.deserializeBinary	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.deserializeBinary = function(bytes) {$/;"	f
proto.RouterMessage.Request.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.RouterMessage.Request.getBody	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.prototype.getBody = function() {$/;"	m
proto.RouterMessage.Request.getBody_asB64	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.prototype.getBody_asB64 = function() {$/;"	m
proto.RouterMessage.Request.getBody_asU8	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.prototype.getBody_asU8 = function() {$/;"	m
proto.RouterMessage.Request.getChannelId	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.prototype.getChannelId = function() {$/;"	m
proto.RouterMessage.Request.getRequestId	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.prototype.getRequestId = function() {$/;"	m
proto.RouterMessage.Request.serializeBinary	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.prototype.serializeBinary = function() {$/;"	m
proto.RouterMessage.Request.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.RouterMessage.Request.setBody	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.prototype.setBody = function(value) {$/;"	m
proto.RouterMessage.Request.setChannelId	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.prototype.setChannelId = function(value) {$/;"	m
proto.RouterMessage.Request.setRequestId	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.prototype.setRequestId = function(value) {$/;"	m
proto.RouterMessage.Request.toObject	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.RouterMessage.Request.toObject	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.toObject = function(includeInstance, msg) {$/;"	f
proto.RouterMessage.Request.toObject.f.channelId	lib/teletype-client_pb.js	/^    channelId: jspb.Message.getFieldWithDefault(msg, 1, ""),$/;"	p
proto.RouterMessage.Response	lib/teletype-client_pb.js	/^proto.RouterMessage.Response = function(opt_data) {$/;"	f
proto.RouterMessage.Response	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.RouterMessage.Response.deserializeBinary	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.deserializeBinary = function(bytes) {$/;"	f
proto.RouterMessage.Response.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.RouterMessage.Response.getBody	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.prototype.getBody = function() {$/;"	m
proto.RouterMessage.Response.getBody_asB64	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.prototype.getBody_asB64 = function() {$/;"	m
proto.RouterMessage.Response.getBody_asU8	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.prototype.getBody_asU8 = function() {$/;"	m
proto.RouterMessage.Response.getOk	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.prototype.getOk = function() {$/;"	m
proto.RouterMessage.Response.getRequestId	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.prototype.getRequestId = function() {$/;"	m
proto.RouterMessage.Response.serializeBinary	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.prototype.serializeBinary = function() {$/;"	m
proto.RouterMessage.Response.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.RouterMessage.Response.setBody	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.prototype.setBody = function(value) {$/;"	m
proto.RouterMessage.Response.setOk	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.prototype.setOk = function(value) {$/;"	m
proto.RouterMessage.Response.setRequestId	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.prototype.setRequestId = function(value) {$/;"	m
proto.RouterMessage.Response.toObject	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.RouterMessage.Response.toObject	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.toObject = function(includeInstance, msg) {$/;"	f
proto.RouterMessage.Response.toObject.f.requestId	lib/teletype-client_pb.js	/^    requestId: jspb.Message.getFieldWithDefault(msg, 1, 0),$/;"	p
proto.RouterMessage.VariantCase.NOTIFICATION	lib/teletype-client_pb.js	/^  NOTIFICATION: 2,$/;"	p
proto.RouterMessage.VariantCase.REQUEST	lib/teletype-client_pb.js	/^  REQUEST: 3,$/;"	p
proto.RouterMessage.VariantCase.RESPONSE	lib/teletype-client_pb.js	/^  RESPONSE: 4$/;"	p
proto.RouterMessage.VariantCase.VARIANT_NOT_SET	lib/teletype-client_pb.js	/^  VARIANT_NOT_SET: 0,$/;"	p
proto.RouterMessage.clearNotification	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.clearNotification = function() {$/;"	m
proto.RouterMessage.clearRequest	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.clearRequest = function() {$/;"	m
proto.RouterMessage.clearResponse	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.clearResponse = function() {$/;"	m
proto.RouterMessage.deserializeBinary	lib/teletype-client_pb.js	/^proto.RouterMessage.deserializeBinary = function(bytes) {$/;"	f
proto.RouterMessage.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.RouterMessage.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.RouterMessage.getNotification	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.getNotification = function() {$/;"	m
proto.RouterMessage.getRequest	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.getRequest = function() {$/;"	m
proto.RouterMessage.getResponse	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.getResponse = function() {$/;"	m
proto.RouterMessage.getVariantCase	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.getVariantCase = function() {$/;"	m
proto.RouterMessage.hasNotification	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.hasNotification = function() {$/;"	m
proto.RouterMessage.hasRequest	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.hasRequest = function() {$/;"	m
proto.RouterMessage.hasResponse	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.hasResponse = function() {$/;"	m
proto.RouterMessage.serializeBinary	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.serializeBinary = function() {$/;"	m
proto.RouterMessage.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.RouterMessage.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.RouterMessage.setNotification	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.setNotification = function(value) {$/;"	m
proto.RouterMessage.setRequest	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.setRequest = function(value) {$/;"	m
proto.RouterMessage.setResponse	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.setResponse = function(value) {$/;"	m
proto.RouterMessage.toObject	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.RouterMessage.toObject	lib/teletype-client_pb.js	/^proto.RouterMessage.toObject = function(includeInstance, msg) {$/;"	f
proto.RouterMessage.toObject.f.notification	lib/teletype-client_pb.js	/^    notification: (f = msg.getNotification()) && proto.RouterMessage.Notification.toObject(includeInstance, f),$/;"	p
proto.Tether	lib/teletype-client_pb.js	/^proto.Tether = function(opt_data) {$/;"	f
proto.Tether	lib/teletype-client_pb.js	/^proto.Tether.prototype.toObject = function(opt_includeInstance) {$/;"	c
proto.Tether.deserializeBinary	lib/teletype-client_pb.js	/^proto.Tether.deserializeBinary = function(bytes) {$/;"	f
proto.Tether.deserializeBinaryFromReader	lib/teletype-client_pb.js	/^proto.Tether.deserializeBinaryFromReader = function(msg, reader) {$/;"	f
proto.Tether.getFollowerSiteId	lib/teletype-client_pb.js	/^proto.Tether.prototype.getFollowerSiteId = function() {$/;"	m
proto.Tether.getLeaderSiteId	lib/teletype-client_pb.js	/^proto.Tether.prototype.getLeaderSiteId = function() {$/;"	m
proto.Tether.getState	lib/teletype-client_pb.js	/^proto.Tether.prototype.getState = function() {$/;"	m
proto.Tether.serializeBinary	lib/teletype-client_pb.js	/^proto.Tether.prototype.serializeBinary = function() {$/;"	m
proto.Tether.serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.Tether.serializeBinaryToWriter = function(message, writer) {$/;"	f
proto.Tether.setFollowerSiteId	lib/teletype-client_pb.js	/^proto.Tether.prototype.setFollowerSiteId = function(value) {$/;"	m
proto.Tether.setLeaderSiteId	lib/teletype-client_pb.js	/^proto.Tether.prototype.setLeaderSiteId = function(value) {$/;"	m
proto.Tether.setState	lib/teletype-client_pb.js	/^proto.Tether.prototype.setState = function(value) {$/;"	m
proto.Tether.toObject	lib/teletype-client_pb.js	/^proto.Tether.prototype.toObject = function(opt_includeInstance) {$/;"	m
proto.Tether.toObject	lib/teletype-client_pb.js	/^proto.Tether.toObject = function(includeInstance, msg) {$/;"	f
proto.Tether.toObject.f.followerSiteId	lib/teletype-client_pb.js	/^    followerSiteId: jspb.Message.getFieldWithDefault(msg, 1, 0),$/;"	p
range	test/integration.test.js	/^  function range (start, end) {$/;"	r
receive	lib/peer-connection.js	/^  receive (data) {$/;"	r
receive	lib/router.js	/^  receive ({senderId, message}) {$/;"	r
receive	lib/star-overlay-network.js	/^  receive ({senderId, message}) {$/;"	r
receiveBroadcast	lib/star-overlay-network.js	/^  receiveBroadcast (rawMessage, broadcastMessage) {$/;"	r
receiveBufferUpdate	lib/editor-proxy-metadata.js	/^  receiveBufferUpdate ({body}) {$/;"	r
receiveEditorProxyCreation	lib/portal.js	/^  receiveEditorProxyCreation (editorProxyCreationMessage) {$/;"	r
receiveFetch	lib/buffer-proxy.js	/^  receiveFetch ({requestId}) {$/;"	r
receiveFetch	lib/editor-proxy.js	/^  receiveFetch ({requestId}) {$/;"	r
receiveJoinNotification	lib/star-overlay-network.js	/^  receiveJoinNotification (joinNotificationMessage) {$/;"	r
receiveJoinRequest	lib/star-overlay-network.js	/^  receiveJoinRequest (rawMessage, connectionMessage) {$/;"	r
receiveJoinResponse	lib/star-overlay-network.js	/^  receiveJoinResponse (joinResponseMessage) {$/;"	r
receiveLeaveNotification	lib/star-overlay-network.js	/^  receiveLeaveNotification (rawMessage, leaveNotification) {$/;"	r
receiveNotification	lib/router.js	/^  receiveNotification (senderId, notification) {$/;"	r
receiveOperationsUpdate	lib/buffer-proxy.js	/^  receiveOperationsUpdate (operationsUpdateMessage) {$/;"	r
receiveRequest	lib/router.js	/^  receiveRequest (senderId, request) {$/;"	r
receiveResponse	lib/router.js	/^  receiveResponse (response) {$/;"	r
receiveSave	lib/buffer-proxy.js	/^  receiveSave () {$/;"	r
receiveSelectionsUpdate	lib/editor-proxy.js	/^  receiveSelectionsUpdate (selectionsUpdate) {$/;"	r
receiveSiteAssignment	lib/portal.js	/^  receiveSiteAssignment (siteAssignment) {$/;"	r
receiveSubscription	lib/portal.js	/^  receiveSubscription ({senderId, requestId}) {$/;"	r
receiveTetherUpdate	lib/portal.js	/^  receiveTetherUpdate (tetherUpdate) {$/;"	r
receiveURIUpdate	lib/buffer-proxy.js	/^  receiveURIUpdate (uriUpdateMessage) {$/;"	r
receiveUnicast	lib/star-overlay-network.js	/^  receiveUnicast (rawMessage, unicastMessage) {$/;"	r
receiveUpdate	lib/buffer-proxy.js	/^  receiveUpdate ({body}) {$/;"	r
receiveUpdate	lib/editor-proxy.js	/^  receiveUpdate ({body}) {$/;"	r
recordNotifications	test/router.test.js	/^function recordNotifications (router, channelIds) {$/;"	r
redo	lib/buffer-proxy.js	/^  redo () {$/;"	r
relaying peer identities to spokes	test/star-overlay-network.test.js	/^    test('relaying peer identities to spokes', async () => {$/;"	f
request	lib/router.js	/^  request ({recipientId, channelId, body}) {$/;"	r
request/response	test/router.test.js	/^  test('request\/response', async () => {$/;"	f
requestSave	lib/buffer-proxy.js	/^  requestSave () {$/;"	r
resetConnectedMembers	lib/star-overlay-network.js	/^  resetConnectedMembers () {$/;"	r
resolveFollowState	lib/portal.js	/^  resolveFollowState (followerId = this.siteId) {$/;"	r
resolveLeaderPosition	lib/portal.js	/^  resolveLeaderPosition (followerId = this.siteId) {$/;"	r
resolveLeaderSiteId	lib/portal.js	/^  resolveLeaderSiteId (followerId = this.siteId) {$/;"	r
respond	lib/router.js	/^  respond ({requestId, ok, body}) {$/;"	r
retractOrDisconnectTether	lib/portal.js	/^  retractOrDisconnectTether () {$/;"	r
retractTether	lib/portal.js	/^  retractTether () {$/;"	r
revertToCheckpoint	lib/buffer-proxy.js	/^  revertToCheckpoint (checkpoint, options) {$/;"	r
save	test/helpers/fake-buffer-delegate.js	/^  save () {$/;"	r
save requests	test/integration.test.js	/^  test('save requests', async () => {$/;"	f
send	lib/peer-connection.js	/^  send (message) {$/;"	r
send	lib/peer-pool.js	/^  send (peerId, message) {$/;"	r
send	lib/star-overlay-network.js	/^  send (peerId, message) {$/;"	r
send.resetConnectedMembers.resetConnectedMembers.resetConnectedMembers.function.serializePeerIdentity	lib/star-overlay-network.js	/^function serializePeerIdentity (identity) {$/;"	f
sendSignal	lib/peer-connection.js	/^  sendSignal (signal) {$/;"	r
sendSubscriptionResponse	lib/portal.js	/^  sendSubscriptionResponse (requestId) {$/;"	r
sends messages only to peers that are part of the network	test/star-overlay-network.test.js	/^    test('sends messages only to peers that are part of the network', async () => {$/;"	f
sends messages to all other members of the network	test/star-overlay-network.test.js	/^    test('sends messages to all other members of the network', async () => {$/;"	f
sends messages to only one member of the network	test/star-overlay-network.test.js	/^    test('sends messages to only one member of the network', async () => {$/;"	f
serialize	lib/buffer-proxy.js	/^  serialize () {$/;"	r
serialize	lib/editor-proxy-metadata.js	/^  serialize () {$/;"	r
serialize	lib/editor-proxy.js	/^  serialize () {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.BufferProxy.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.URIUpdate.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.EditorProxy.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.SelectionsUpdate.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinRequest.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinResponse.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.PeerIdentity.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyRemoval.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxySwitch.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-client_pb.js	/^proto.Tether.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.Point.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.prototype.serializeBinary = function() {$/;"	r
serializeBinary	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.serializeBinary = function() {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.BufferProxy.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.URIUpdate.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.EditorProxy.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.SelectionsUpdate.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinRequest.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinResponse.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.NetworkMessage.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.PeerIdentity.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyRemoval.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxySwitch.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.PortalUpdate.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.RouterMessage.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-client_pb.js	/^proto.Tether.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.Point.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializeBinaryToWriter	lib/teletype-crdt_pb.js	/^proto.Operation.serializeBinaryToWriter = function(message, writer) {$/;"	r
serializePeerIdentity	lib/star-overlay-network.js	/^function serializePeerIdentity (identity) {$/;"	r
serializePeerIdentity.deserializePeerIdentity	lib/star-overlay-network.js	/^function deserializePeerIdentity (identityMessage) {$/;"	f
setActiveBufferProxiesList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.setActiveBufferProxiesList = function(value) {$/;"	r
setActiveEditorProxiesList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.setActiveEditorProxiesList = function(value) {$/;"	r
setBody	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.prototype.setBody = function(value) {$/;"	r
setBody	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.prototype.setBody = function(value) {$/;"	r
setBody	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.prototype.setBody = function(value) {$/;"	r
setBody	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.prototype.setBody = function(value) {$/;"	r
setBody	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.prototype.setBody = function(value) {$/;"	r
setBufferProxyId	lib/teletype-client_pb.js	/^proto.EditorProxy.prototype.setBufferProxyId = function(value) {$/;"	r
setBufferProxyId	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.prototype.setBufferProxyId = function(value) {$/;"	r
setBufferProxyUri	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.prototype.setBufferProxyUri = function(value) {$/;"	r
setChannelId	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.prototype.setChannelId = function(value) {$/;"	r
setChannelId	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.prototype.setChannelId = function(value) {$/;"	r
setColumn	lib/teletype-crdt_pb.js	/^proto.Operation.Point.prototype.setColumn = function(value) {$/;"	r
setConnectionLost	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification.prototype.setConnectionLost = function(value) {$/;"	r
setDelegate	lib/buffer-proxy.js	/^  setDelegate (delegate) {$/;"	r
setDelegate	lib/editor-proxy.js	/^  setDelegate (delegate) {$/;"	r
setDeletion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.setDeletion = function(value) {$/;"	r
setEditorProxiesMetadataList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.setEditorProxiesMetadataList = function(value) {$/;"	r
setEditorProxyCreation	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.setEditorProxyCreation = function(value) {$/;"	r
setEditorProxyId	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyRemoval.prototype.setEditorProxyId = function(value) {$/;"	r
setEditorProxyId	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxySwitch.prototype.setEditorProxyId = function(value) {$/;"	r
setEditorProxyMetadata	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation.prototype.setEditorProxyMetadata = function(value) {$/;"	r
setEditorProxySwitch	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.setEditorProxySwitch = function(value) {$/;"	r
setEndDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.setEndDependencyId = function(value) {$/;"	r
setEqual	test/helpers/set-equal.js	/^function setEqual (a, b) {$/;"	f
setEqual	test/helpers/set-equal.js	/^function setEqual (a, b) {$/;"	r
setExclusive	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.setExclusive = function(value) {$/;"	r
setFollowState	lib/portal.js	/^  setFollowState (newState, newLeaderId) {$/;"	r
setFollowerSiteId	lib/teletype-client_pb.js	/^proto.Tether.prototype.setFollowerSiteId = function(value) {$/;"	r
setId	lib/teletype-client_pb.js	/^proto.BufferProxy.prototype.setId = function(value) {$/;"	r
setId	lib/teletype-client_pb.js	/^proto.EditorProxy.prototype.setId = function(value) {$/;"	r
setId	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.prototype.setId = function(value) {$/;"	r
setInsertion	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.setInsertion = function(value) {$/;"	r
setIsDeletion	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation.prototype.setIsDeletion = function(value) {$/;"	r
setIsDeletion	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.prototype.setIsDeletion = function(value) {$/;"	r
setLeaderSiteId	lib/teletype-client_pb.js	/^proto.Tether.prototype.setLeaderSiteId = function(value) {$/;"	r
setLeftDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.setLeftDependencyId = function(value) {$/;"	r
setLeftDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.setLeftDependencyId = function(value) {$/;"	r
setLogin	lib/teletype-client_pb.js	/^proto.PeerIdentity.prototype.setLogin = function(value) {$/;"	r
setMarkerUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.prototype.setMarkerUpdate = function(value) {$/;"	r
setMarkersUpdate	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.setMarkersUpdate = function(value) {$/;"	r
setMemberId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.prototype.setMemberId = function(value) {$/;"	r
setMemberId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification.prototype.setMemberId = function(value) {$/;"	r
setMemberIdentity	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.prototype.setMemberIdentity = function(value) {$/;"	r
setNetworkId	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.setNetworkId = function(value) {$/;"	r
setNotification	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.setNotification = function(value) {$/;"	r
setOauthToken	lib/rest-gateway.js	/^  setOauthToken (oauthToken) {$/;"	r
setOauthToken	test/teletype-client.test.js	/^        setOauthToken () {}$/;"	r
setOauthToken	test/teletype-client.test.js	/^        setOauthToken () {},$/;"	r
setOffsetInEndDependency	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.setOffsetInEndDependency = function(value) {$/;"	r
setOffsetInLeftDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.setOffsetInLeftDependency = function(value) {$/;"	r
setOffsetInLeftDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.setOffsetInLeftDependency = function(value) {$/;"	r
setOffsetInRightDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.setOffsetInRightDependency = function(value) {$/;"	r
setOffsetInRightDependency	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.setOffsetInRightDependency = function(value) {$/;"	r
setOffsetInStartDependency	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.setOffsetInStartDependency = function(value) {$/;"	r
setOk	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.prototype.setOk = function(value) {$/;"	r
setOperationsList	lib/teletype-client_pb.js	/^proto.BufferProxy.prototype.setOperationsList = function(value) {$/;"	r
setOperationsList	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate.prototype.setOperationsList = function(value) {$/;"	r
setOperationsUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.setOperationsUpdate = function(value) {$/;"	r
setPeerId	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment.prototype.setPeerId = function(value) {$/;"	r
setRange	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.setRange = function(value) {$/;"	r
setRecipientId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.prototype.setRecipientId = function(value) {$/;"	r
setRequest	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.setRequest = function(value) {$/;"	r
setRequestId	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.prototype.setRequestId = function(value) {$/;"	r
setRequestId	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.prototype.setRequestId = function(value) {$/;"	r
setResponse	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.setResponse = function(value) {$/;"	r
setReversed	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.setReversed = function(value) {$/;"	r
setRightDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.setRightDependencyId = function(value) {$/;"	r
setRightDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.setRightDependencyId = function(value) {$/;"	r
setRow	lib/teletype-crdt_pb.js	/^proto.Operation.Point.prototype.setRow = function(value) {$/;"	r
setSelectionsUpdate	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.prototype.setSelectionsUpdate = function(value) {$/;"	r
setSenderId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.prototype.setSenderId = function(value) {$/;"	r
setSenderId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinRequest.prototype.setSenderId = function(value) {$/;"	r
setSenderId	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.prototype.setSenderId = function(value) {$/;"	r
setSeq	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId.prototype.setSeq = function(value) {$/;"	r
setSite	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId.prototype.setSite = function(value) {$/;"	r
setSiteAssignment	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.setSiteAssignment = function(value) {$/;"	r
setSiteId	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment.prototype.setSiteId = function(value) {$/;"	r
setSiteId	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.prototype.setSiteId = function(value) {$/;"	r
setSplice	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.setSplice = function(value) {$/;"	r
setSpliceId	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.setSpliceId = function(value) {$/;"	r
setSpliceId	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.prototype.setSpliceId = function(value) {$/;"	r
setStarBroadcast	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.setStarBroadcast = function(value) {$/;"	r
setStarJoinNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.setStarJoinNotification = function(value) {$/;"	r
setStarJoinRequest	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.setStarJoinRequest = function(value) {$/;"	r
setStarJoinResponse	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.setStarJoinResponse = function(value) {$/;"	r
setStarLeaveNotification	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.setStarLeaveNotification = function(value) {$/;"	r
setStarUnicast	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.setStarUnicast = function(value) {$/;"	r
setStartDependencyId	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.setStartDependencyId = function(value) {$/;"	r
setState	lib/teletype-client_pb.js	/^proto.Tether.prototype.setState = function(value) {$/;"	r
setTailed	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.setTailed = function(value) {$/;"	r
setTetherUpdate	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.setTetherUpdate = function(value) {$/;"	r
setTethersList	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.setTethersList = function(value) {$/;"	r
setText	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.setText = function(value) {$/;"	r
setText	test/helpers/fake-buffer-delegate.js	/^  setText (text) {$/;"	r
setTextInRange	lib/buffer-proxy.js	/^  setTextInRange (oldStart, oldEnd, newText) {$/;"	r
setURI	lib/buffer-proxy.js	/^  setURI (uri) {$/;"	r
setUndo	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.setUndo = function(value) {$/;"	r
setUndoCount	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.prototype.setUndoCount = function(value) {$/;"	r
setUri	lib/teletype-client_pb.js	/^proto.BufferProxy.prototype.setUri = function(value) {$/;"	r
setUri	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.URIUpdate.prototype.setUri = function(value) {$/;"	r
setUriUpdate	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.setUriUpdate = function(value) {$/;"	r
sharing a portal and performing basic collaboration with a guest	test/integration.test.js	/^  test('sharing a portal and performing basic collaboration with a guest', async () => {$/;"	f
showSelections	lib/editor-proxy.js	/^  showSelections () {$/;"	r
showing and hiding selections	test/integration.test.js	/^    test('showing and hiding selections', async () => {$/;"	f
signOut	lib/teletype-client.js	/^  signOut () {$/;"	r
signing in using a valid token	test/integration.test.js	/^    test('signing in using a valid token', async () => {$/;"	f
signing in using an invalid token	test/integration.test.js	/^    test('signing in using an invalid token', async () => {$/;"	f
simultaneously hosting a portal and participating as a guest in other portals	test/integration.test.js	/^  test('simultaneously hosting a portal and participating as a guest in other portals', async () => {$/;"	f
site identities	test/portal.test.js	/^  test('site identities', async () => {$/;"	f
siteDidDisconnect	lib/editor-proxy.js	/^  siteDidDisconnect (siteId) {$/;"	r
siteDidJoin	lib/null-portal-delegate.js	/^  siteDidJoin () {}$/;"	r
siteDidJoin	test/helpers/fake-portal-delegate.js	/^  siteDidJoin (siteId) {$/;"	r
siteDidLeave	lib/null-portal-delegate.js	/^  siteDidLeave () {}$/;"	r
siteDidLeave	lib/portal.js	/^  siteDidLeave ({peerId, connectionLost}) {$/;"	r
siteDidLeave	test/helpers/fake-portal-delegate.js	/^  siteDidLeave (siteId) {$/;"	r
subscribe	test/peer-pool.test.js	/^      subscribe () {$/;"	r
subscribe	test/teletype-client.test.js	/^        subscribe () {$/;"	r
subscribeToEditorProxyChanges	lib/portal.js	/^  subscribeToEditorProxyChanges (editorProxy) {$/;"	r
successful request and response	test/rest-gateway.test.js	/^    test('successful request and response', async () => {$/;"	f
switch	lib/teletype-client_pb.js	/^    switch (field) {$/;"	r
switch	lib/teletype-crdt_pb.js	/^    switch (field) {$/;"	r
teletype$crdt_pb	lib/teletype-client_pb.js	/^var teletype$crdt_pb = require('.\/teletype-crdt_pb.js');$/;"	v
throws and disposes itself when a network error occurs	test/portal.test.js	/^    test('throws and disposes itself when a network error occurs', async () => {$/;"	f
throws if posting the portal to the server fails	test/teletype-client.test.js	/^    test('throws if posting the portal to the server fails', async () => {$/;"	f
throws if retrieving the portal from the server fails	test/teletype-client.test.js	/^    test('throws if retrieving the portal from the server fails', async () => {$/;"	f
throws when connecting to a network exceeds the connection timeout	test/star-overlay-network.test.js	/^  test('throws when connecting to a network exceeds the connection timeout', async () => {$/;"	f
throws when contacting the server fails	test/teletype-client.test.js	/^    test('throws when contacting the server fails', async () => {$/;"	f
throws when the protocol version is out of date according to the server	test/teletype-client.test.js	/^    test('throws when the protocol version is out of date according to the server', async () => {$/;"	f
throws when the server replies with an unexpected status code	test/teletype-client.test.js	/^    test('throws when the server replies with an unexpected status code', async () => {$/;"	f
timeout	test/helpers/timeout.js	/^function timeout (ms) {$/;"	f
timeout	test/helpers/timeout.js	/^function timeout (ms) {$/;"	r
timeout	test/router.test.js	/^function timeout (ms) {$/;"	f
timeout	test/router.test.js	/^function timeout (ms) {$/;"	r
timeouts connecting to the pub-sub service	test/peer-pool.test.js	/^  test('timeouts connecting to the pub-sub service', async () => {$/;"	f
timeouts establishing a connection to a peer	test/peer-pool.test.js	/^  test('timeouts establishing a connection to a peer', async () => {$/;"	f
toObject	lib/teletype-client_pb.js	/^proto.BufferProxy.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.BufferProxy.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.OperationsUpdate.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.URIUpdate.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.URIUpdate.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.BufferProxyUpdate.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.EditorProxy.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.EditorProxy.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.EditorProxyMetadata.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.SelectionsUpdate.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.SelectionsUpdate.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.EditorProxyUpdate.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarBroadcast.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinNotification.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinRequest.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinRequest.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinResponse.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarJoinResponse.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarLeaveNotification.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.StarUnicast.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.NetworkMessage.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.PeerIdentity.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.PeerIdentity.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.PortalSubscriptionResponse.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyCreation.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyRemoval.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxyRemoval.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxySwitch.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.PortalUpdate.EditorProxySwitch.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.PortalUpdate.SiteAssignment.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.PortalUpdate.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.PortalUpdate.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.RouterMessage.Notification.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.RouterMessage.Request.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.RouterMessage.Response.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.RouterMessage.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.RouterMessage.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.Tether.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-client_pb.js	/^proto.Tether.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LayerOperation.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.LogicalRange.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerOperation.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.MarkerUpdate.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.MarkersUpdate.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.Point.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.Point.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Deletion.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.Insertion.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.Splice.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.SpliceId.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.Undo.toObject = function(includeInstance, msg) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.prototype.toObject = function(opt_includeInstance) {$/;"	r
toObject	lib/teletype-crdt_pb.js	/^proto.Operation.toObject = function(includeInstance, msg) {$/;"	r
transitive tethering (with cycles)	test/integration.test.js	/^    test('transitive tethering (with cycles)', async () => {$/;"	f
transitive tethering (without cycles)	test/integration.test.js	/^    test('transitive tethering (without cycles)', async () => {$/;"	f
traversal	test/helpers/fake-buffer-delegate.js	/^function traversal (end, start) {$/;"	f
traversal	test/helpers/fake-buffer-delegate.js	/^function traversal (end, start) {$/;"	r
traverse	test/helpers/fake-buffer-delegate.js	/^function traverse (start, distance) {$/;"	f
traverse	test/helpers/fake-buffer-delegate.js	/^function traverse (start, distance) {$/;"	r
undo	lib/buffer-proxy.js	/^  undo () {$/;"	r
unfollow	lib/portal.js	/^  unfollow () {$/;"	r
unicast	lib/star-overlay-network.js	/^  unicast (recipientId, message) {$/;"	r
updateActivePositions	lib/null-editor-proxy-delegate.js	/^  updateActivePositions () {}$/;"	r
updateActivePositions	lib/null-portal-delegate.js	/^  updateActivePositions () {}$/;"	r
updateActivePositions	lib/portal.js	/^  updateActivePositions () {$/;"	r
updateActivePositions	test/helpers/fake-portal-delegate.js	/^  updateActivePositions (activePositionsBySiteId) {$/;"	r
updateMarkers	lib/buffer-proxy.js	/^  updateMarkers (markerUpdatesByLayerId, broadcastOperations = true) {$/;"	r
updateSelections	lib/editor-proxy.js	/^  updateSelections (selections = {}, options = {}) {$/;"	r
updateSelectionsForSiteId	lib/null-editor-proxy-delegate.js	/^  updateSelectionsForSiteId () {}$/;"	r
updateSelectionsForSiteId	test/helpers/fake-editor-delegate.js	/^  updateSelectionsForSiteId (siteId, selectionUpdates) {$/;"	r
updateTether	lib/null-editor-proxy-delegate.js	/^  updateTether () {}$/;"	r
updateTether	lib/null-portal-delegate.js	/^  updateTether () {}$/;"	r
updateTether	test/helpers/fake-portal-delegate.js	/^  updateTether (state, editorProxy, position) {$/;"	r
updateText	test/helpers/fake-buffer-delegate.js	/^  updateText (textUpdates) {$/;"	r
updateViewport	test/helpers/fake-editor-delegate.js	/^  updateViewport (startRow, endRow) {$/;"	r
