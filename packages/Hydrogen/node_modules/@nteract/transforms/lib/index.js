"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.registerTransform = registerTransform;
exports.richestMimetype = richestMimetype;
exports.VDOMTransform = exports.GIFTransform = exports.JPEGTransform = exports.PNGTransform = exports.SVGTransform = exports.LaTeXTransform = exports.MarkdownTransform = exports.HTMLTransform = exports.JavaScriptTransform = exports.JSONTransform = exports.TextTransform = exports.displayOrder = exports.transforms = exports.standardDisplayOrder = exports.standardTransforms = void 0;

var _keys = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/keys"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/toConsumableArray"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));

var _objectSpread3 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/objectSpread"));

var _transformVdom = _interopRequireDefault(require("@nteract/transform-vdom"));

var _text = _interopRequireDefault(require("./text.js"));

var _json = _interopRequireDefault(require("./json.js"));

var _javascript = _interopRequireDefault(require("./javascript.js"));

var _html = _interopRequireDefault(require("./html.js"));

var _markdown = _interopRequireDefault(require("./markdown.js"));

var _latex = _interopRequireDefault(require("./latex.js"));

var _svg = _interopRequireDefault(require("./svg.js"));

var _image = require("./image.js");

var tfs = [_transformVdom.default, _json.default, _javascript.default, _html.default, _markdown.default, _latex.default, _svg.default, _image.GIFDisplay, _image.PNGDisplay, _image.JPEGDisplay, _text.default];
var standardTransforms = {};
exports.standardTransforms = standardTransforms;
tfs.forEach(function (transform) {
  standardTransforms[transform.MIMETYPE] = transform;
});
var standardDisplayOrder = tfs.map(function (transform) {
  return transform.MIMETYPE;
});
exports.standardDisplayOrder = standardDisplayOrder;

function registerTransform(_ref, transform) {
  var transforms = _ref.transforms,
      displayOrder = _ref.displayOrder;
  return {
    transforms: (0, _objectSpread3.default)({}, transforms, (0, _defineProperty2.default)({}, transform.MIMETYPE, transform)),
    displayOrder: [transform.MIMETYPE].concat((0, _toConsumableArray2.default)(displayOrder))
  };
}
/**
 * Choose the richest mimetype available based on the displayOrder and transforms
 * @param  {Map}   bundle - Map({mimetype1: data1, mimetype2: data2, ...})
 * @param  {Array} ordered list of mimetypes - ['text/html', 'text/plain']
 * @param  {Map}   mimetype -> React Component - Map({'text/plain': TextTransform})
 * @return {string}          Richest mimetype
 */


function richestMimetype(bundle) {
  var order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : standardDisplayOrder;
  var tf = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : standardTransforms;
  return (0, _toConsumableArray2.default)((0, _keys.default)(bundle)) // we can only use those we have a transform for
  .filter(function (mimetype) {
    return tf[mimetype] && order.includes(mimetype);
  }) // the richest is based on the order in displayOrder
  .sort(function (a, b) {
    return order.indexOf(a) - order.indexOf(b);
  })[0];
}

var transforms = standardTransforms;
exports.transforms = transforms;
var displayOrder = standardDisplayOrder;
exports.displayOrder = displayOrder;
var TextTransform = _text.default;
exports.TextTransform = TextTransform;
var JSONTransform = _json.default;
exports.JSONTransform = JSONTransform;
var JavaScriptTransform = _javascript.default;
exports.JavaScriptTransform = JavaScriptTransform;
var HTMLTransform = _html.default;
exports.HTMLTransform = HTMLTransform;
var MarkdownTransform = _markdown.default;
exports.MarkdownTransform = MarkdownTransform;
var LaTeXTransform = _latex.default;
exports.LaTeXTransform = LaTeXTransform;
var SVGTransform = _svg.default;
exports.SVGTransform = SVGTransform;
var PNGTransform = _image.PNGDisplay;
exports.PNGTransform = PNGTransform;
var JPEGTransform = _image.JPEGDisplay;
exports.JPEGTransform = JPEGTransform;
var GIFTransform = _image.GIFDisplay;
exports.GIFTransform = GIFTransform;
var VDOMTransform = _transformVdom.default;
exports.VDOMTransform = VDOMTransform;