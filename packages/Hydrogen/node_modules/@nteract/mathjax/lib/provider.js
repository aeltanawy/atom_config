"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs2/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/objectSpread"));

var _keys = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/keys"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/assertThisInitialized"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));

var React = _interopRequireWildcard(require("react"));

var _loadScript = _interopRequireDefault(require("./load-script"));

var _context = _interopRequireDefault(require("./context.js"));

//  strict

/**
 * MathJax Provider
 */
var Provider =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(Provider, _React$Component);

  function Provider(props) {
    var _this;

    (0, _classCallCheck2.default)(this, Provider);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Provider).call(this, props));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), "onLoad", function () {
      if (typeof MathJax === "undefined" || !MathJax || !MathJax.Hub) {
        _this.props.onError(new Error("MathJax not really loaded even though onLoad called"));

        return;
      }

      var options = _this.props.options;

      if (options != null && (0, _keys.default)(options).length > 0) {
        MathJax.Hub.Config(options);
      }

      MathJax.Hub.Register.StartupHook("End", function () {
        if (typeof MathJax === "undefined" || !MathJax) {
          _this.props.onError(new Error("MathJax became undefined in the middle of processing"));

          return;
        }

        MathJax.Hub.processSectionDelay = _this.props.delay;

        if (_this.props.didFinishTypeset) {
          _this.props.didFinishTypeset();
        }
      });
      MathJax.Hub.Register.MessageHook("Math Processing Error", function (message) {
        if (_this.props.onError) {
          _this.props.onError(new Error(message));
        }
      });

      if (_this.props.onLoad) {
        _this.props.onLoad();
      }

      _this.setState({
        MathJax: MathJax
      });
    });
    _this.state = {
      MathJax: undefined,
      input: _this.props.input,
      hasProviderAbove: true
    };
    return _this;
  }

  (0, _createClass2.default)(Provider, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var src = this.props.src;

      if (src == null) {
        return this.onLoad();
      }

      if (typeof MathJax === "undefined" || !MathJax || !MathJax.Hub) {
        return (0, _loadScript.default)(src, this.onLoad);
      }

      this.onLoad();
    }
  }, {
    key: "render",
    value: function render() {
      return React.createElement(_context.default.Provider, {
        value: this.state
      }, this.props.children);
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(props, state) {
      if (state.input !== props.input) {
        return (0, _objectSpread2.default)({}, state, {
          input: props.input
        });
      }

      return null;
    }
  }]);
  return Provider;
}(React.Component);

(0, _defineProperty2.default)(Provider, "defaultProps", {
  src: "https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML",
  input: "tex",
  didFinishTypeset: null,
  delay: 0,
  options: {},
  loading: null,
  noGate: false,
  onLoad: null,
  onError: function onError(err) {
    console.error(err);
  }
});
var _default = Provider;
exports.default = _default;