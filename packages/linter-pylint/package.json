{
  "_args": [
    [
      {
        "raw": "/private/var/folders/6s/ms_gwh6x2fngsylqymfqm59c0009_z/T/d-11887-59717-qu9okh.xaouk57b9/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/private/var/folders/6s/ms_gwh6x2fngsylqymfqm59c0009_z/T/d-11887-59717-qu9okh.xaouk57b9/package.tgz",
        "spec": "/private/var/folders/6s/ms_gwh6x2fngsylqymfqm59c0009_z/T/d-11887-59717-qu9okh.xaouk57b9/package.tgz",
        "type": "local"
      },
      "/private/var/folders/6s/ms_gwh6x2fngsylqymfqm59c0009_z/T/apm-install-dir-11887-59717-m5y6bi.cpzpgjsjor"
    ]
  ],
  "_from": "../d-11887-59717-qu9okh.xaouk57b9/package.tgz",
  "_id": "linter-pylint@2.1.1",
  "_inCache": true,
  "_location": "/linter-pylint",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/private/var/folders/6s/ms_gwh6x2fngsylqymfqm59c0009_z/T/d-11887-59717-qu9okh.xaouk57b9/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/private/var/folders/6s/ms_gwh6x2fngsylqymfqm59c0009_z/T/d-11887-59717-qu9okh.xaouk57b9/package.tgz",
    "spec": "/private/var/folders/6s/ms_gwh6x2fngsylqymfqm59c0009_z/T/d-11887-59717-qu9okh.xaouk57b9/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../d-11887-59717-qu9okh.xaouk57b9/package.tgz",
  "_shasum": "1e3f493022033b23e1c1938f83b0e6c932066644",
  "_shrinkwrap": null,
  "_spec": "/private/var/folders/6s/ms_gwh6x2fngsylqymfqm59c0009_z/T/d-11887-59717-qu9okh.xaouk57b9/package.tgz",
  "_where": "/private/var/folders/6s/ms_gwh6x2fngsylqymfqm59c0009_z/T/apm-install-dir-11887-59717-m5y6bi.cpzpgjsjor",
  "bugs": {
    "url": "https://github.com/AtomLinter/linter-pylint/issues"
  },
  "configSchema": {
    "executablePath": {
      "type": "string",
      "default": "pylint",
      "description": "Command or full path to pylint. Use %p for current project directory (no trailing /) or %h for current project name.",
      "order": 1
    },
    "pythonPath": {
      "type": "string",
      "default": "",
      "description": "Paths to be added to $PYTHONPATH. Use %p for current project directory or %f for the directory of the current file.",
      "order": 1
    },
    "rcFile": {
      "type": "string",
      "default": "",
      "description": "Path to pylintrc file. Use %p for the current project directory or %f for the directory of the current file.",
      "order": 2
    },
    "workingDirectory": {
      "type": "string",
      "default": "%p",
      "description": "Directory pylint is run from. Use %p for the current project directory or %f for the directory of the current file.",
      "order": 2
    },
    "messageFormat": {
      "type": "string",
      "default": "%i %m",
      "description": "Format for Pylint messages where %m is the message, %i is the numeric mesasge ID (e.g. W0613) and %s is the human-readable message ID (e.g. unused-argument).",
      "order": 2
    },
    "disableTimeout": {
      "title": "Disable Execution Timeout",
      "type": "boolean",
      "default": false,
      "description": "By default processes running longer than 10 seconds will be automatically terminated. Enable this option if you are getting messages about process execution timing out.",
      "order": 3
    }
  },
  "dependencies": {
    "atom-linter": "^10.0.0",
    "atom-package-deps": "^4.5.0",
    "lazy-req": "^2.0.0"
  },
  "description": "Lint python on the fly, using pylint",
  "devDependencies": {
    "eslint": "^4.6.0",
    "eslint-config-airbnb-base": "^12.0.0",
    "eslint-plugin-import": "^2.7.0",
    "jasmine-fix": "^1.3.1"
  },
  "engines": {
    "atom": ">=1.4.0 <2.0.0"
  },
  "eslintConfig": {
    "extends": "airbnb-base",
    "rules": {
      "global-require": "off",
      "import/no-unresolved": [
        "error",
        {
          "ignore": [
            "atom"
          ]
        }
      ]
    },
    "globals": {
      "atom": true
    },
    "env": {
      "node": true
    }
  },
  "homepage": "https://github.com/AtomLinter/linter-pylint#readme",
  "license": "MIT",
  "main": "./lib/main.js",
  "name": "linter-pylint",
  "optionalDependencies": {},
  "package-deps": [
    "linter:2.0.0"
  ],
  "private": true,
  "providedServices": {
    "linter": {
      "versions": {
        "2.0.0": "provideLinter"
      }
    }
  },
  "readme": "# linter-pylint\n[![Build Status](https://travis-ci.org/AtomLinter/linter-pylint.svg?branch=master)](https://travis-ci.org/AtomLinter/linter-pylint)\n[![Dependency Status](https://david-dm.org/AtomLinter/linter-pylint.svg)](https://david-dm.org/AtomLinter/linter-pylint)\n[![Plugin installs!](https://img.shields.io/apm/dm/linter-pylint.svg)](https://atom.io/packages/linter-pylint)\n[![Package version!](https://img.shields.io/apm/v/linter-pylint.svg?style=flat)](https://atom.io/packages/linter-pylint)\n\nThis package will lint your opened Python-files in Atom, using [pylint](https://www.pylint.org/).\n\n## Installation\n\n* Install [pylint](http://www.pylint.org/#install).\n* `$ apm install linter-pylint`\n\n## Configuration\n* **Executable** Path to your pylint executable. This is useful if you have different versions of pylint for Python 2\n  and 3 or if you are using a virtualenv. Use `%p` for the current project (no trailing /).\n* **Message Format** Format for Pylint messages where `%m` is the message, `%i` is the numeric message ID (e.g. W0613)\n  and `%s` is the human-readable message ID (e.g. unused-argument).\n* **Python Path** Paths to be added to the `PYTHONPATH` environment variable. Use `%p` for the current project\n  directory (e.g. `%p/vendor`) or `%f` for the directory of the current\n  file location.\n* **Rc File** Path to pylintrc file. Use `%p` for the current project directory or `%f` for the directory of the current\n  file location.\n* **Working Directory** Directory pylint is run from. Use `%p` for the current project directory or `%f` for the\n  directory of the current file.\n* `%p` will fallback to the current file's directory (equivilent to `%f`) if no project directory can be determined.\n\n## Other available linters\nThere are other linters available - take a look at the linters [mainpage](https://github.com/steelbrain/linter).\n\n## Changelog\n\n### 1.1.0\n- Allow use of project and file directories in rcfile, cwd, and PYTHONPATH (d82116d)\n- Fix use of PYTHONPATH (7fb325)\n\n### 1.0.0\n- Use latest linter API\n\n### 0.2.1\n - Use new API for project path\n\n### 0.2.0\n - Settings to configure rcfile, executable name [#24](https://github.com/AtomLinter/linter-pylint/pull/24)\n\n### 0.1.5\n - Fix lint message display on Windows [#15](https://github.com/AtomLinter/linter-pylint/issues/15)\n - Fix temporary file leak when pylint isn't present\n\n### 0.1.3\n - Display pylint message ids\n - Fix debug mode [#9](https://github.com/AtomLinter/linter-pylint/pull/9)\n - Use project directory as cwd (works better with Atom projects)\n\n### 0.1.2\n - fix 'has no method getCmd' bug [#4](https://github.com/AtomLinter/linter-pylint/issues/4)\n\n### 0.1.0\n\n - Implemented first version of 'linter-pylint'\n - Added support for Errors and Warnings, \"Refactor\", \"Convention and \"Fatal\"-messages are ignored due to missing display-capabilities.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/AtomLinter/linter-pylint.git"
  },
  "scripts": {
    "lint": "eslint .",
    "test": "apm test"
  },
  "version": "2.1.1"
}
