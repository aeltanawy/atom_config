{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///rollbar.noconflict.umd.min.js","webpack:///webpack/bootstrap 197b436c5588bcd8fab2","webpack:///./src/browser/bundles/rollbar.noconflict.js","webpack:///./src/browser/rollbar.js","webpack:///./src/rollbar.js","webpack:///./src/rateLimiter.js","webpack:///./src/utility.js","webpack:///./src/merge.js","webpack:///./vendor/JSON-js/json3.js","webpack:///./src/queue.js","webpack:///./src/notifier.js","webpack:///./src/telemetry.js","webpack:///./src/api.js","webpack:///./src/apiUtility.js","webpack:///./src/browser/logger.js","webpack:///./~/console-polyfill/index.js","webpack:///./src/browser/detection.js","webpack:///./src/browser/globalSetup.js","webpack:///./src/browser/transport.js","webpack:///./src/truncation.js","webpack:///./src/browser/url.js","webpack:///./src/browser/transforms.js","webpack:///./src/browser/errorParser.js","webpack:///./~/error-stack-parser/error-stack-parser.js","webpack:///./~/error-stack-parser/~/stackframe/stackframe.js","webpack:///./src/transforms.js","webpack:///./src/browser/predicates.js","webpack:///./src/predicates.js","webpack:///./src/browser/telemetry.js","webpack:///./src/browser/domUtility.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","rollbar","window","_rollbarStartTime","Date","getTime","Rollbar","options","client","_","handleOptions","defaultOptions","api","API","transport","urllib","Client","logger","gWindow","self","gDocument","document","addTransformsToNotifier","notifier","addPredicatesToQueue","queue","captureUncaught","handleUncaughtExceptions","globals","captureUncaughtExceptions","wrapGlobals","captureUnhandledRejections","handleUnhandledRejections","instrumenter","Instrumenter","telemeter","instrument","handleUninitialized","maybeCallback","message","error","Error","addTransform","transforms","handleItemWithError","ensureItemHasSomethingToSay","addBaseInfo","addRequestInfo","addClientInfo","addPluginInfo","addBody","sharedTransforms","addMessageWithError","addTelemetryData","addConfigToPayload","scrubPayload","userTransform","itemToPayload","addPredicate","sharedPredicates","checkLevel","predicates","checkIgnore","userCheckIgnore","urlIsNotBlacklisted","urlIsWhitelisted","messageIsIgnored","_getFirstFunction","args","i","len","length","isFunction","errorParser","_instance","init","global","configure","prototype","payloadData","oldOptions","payload","lastError","log","item","_createItem","arguments","uuid","apply","debug","info","warn","warning","critical","handleUncaughtException","url","lineno","colno","context","stackInfo","makeUnhandledStackInfo","isError","_unhandledStackInfo","level","uncaughtErrorLevel","_isUncaught","handleUnhandledRejection","reason","promise","reasonResult","stringify","value","_rollbarContext","_originalArgs","push","wrap","f","_before","ctxFn","_isWrap","_rollbar_wrapped","exc","e","_rollbarWrappedError","isType","String","_wrappedSource","toString","hasOwnProperty","prop","captureEvent","event","createTelemetryEvent","type","metadata","captureDomContentLoaded","ts","captureLoad","createItem","version","scrubFields","logLevel","reportLevel","endpoint","verbose","enabled","sendConfig","includeItemsInTelemetry","captureIp","platform","merge","rateLimiter","configureGlobal","setPlatformOptions","Queue","Notifier","Telemeter","lastErrorHash","generateItemHash","stack","err","RateLimiter","maxItems","itemsPerMinute","_defaultLogLevel","_log","wait","callback","defaultLevel","_sameAsLastError","_captureRollbarItem","telemetryEvents","copyEvents","itemHash","startTime","now","counter","perMinCounter","platformOptions","checkRate","limit","ignoreRateLimit","shouldSendValue","shouldSend","globalRateLimit","limitPerMin","perMinute","rateLimitPayload","msg","environment","body","extra","language","framework","name","globalSettings","undefined","elapsedTime","globalRateLimitPerMin","setupJSON","__initRollbarJSON","isDefined","JSON","isNativeFunction","RollbarJSON","parse","setupCustomJSON","x","t","typeName","match","toLowerCase","reRegExpChar","funcMatchString","Function","Object","replace","reIsNative","RegExp","isObject","test","u","isIterable","traverse","obj","func","seen","k","v","isObj","isArray","keys","indexOf","result","same","redact","uuid4","d","r","Math","random","floor","sanitizeUrl","baseUrlParts","parseUri","anchor","source","query","str","o","parseUriOptions","parser","strictMode","exec","uri","l","key","q","$0","$1","$2","addParamsAndAccessTokenToPath","accessToken","params","access_token","paramsArray","join","sort","path","qs","h","substring","formatUrl","protocol","port","hostname","backup","jsonError","backupError","jsonParse","s","mode","backupMessage","location","line","column","guessFunctionName","gatherContext","href","useragent","navigator","userAgent","wrapCallback","resp","requestKeys","lambdaContext","custom","request","arg","extraArgs","typ","DOMException","j","timestamp","arrayIncludes","arr","val","TELEMETRY_TYPES","TELEMETRY_LEVELS","get","split","set","temp","replacement","scrub","data","redactQueryParam","dummy0","paramPart","paramScrubber","queryRes","valScrubber","paramRes","scrubber","tmpV","_getScrubFieldRegexs","_getScrubQueryParamRegexs","pat","ret","formatArgsAsString","substr","filterIp","requestData","newIp","parts","pop","beginning","slice","slashIdx","terminal","concat","current","input","overwriteScrubFields","LEVELS","strict","loose","src","copy","clone","isPlainObject","hasOwn","toStr","hasOwnConstructor","hasIsPrototypeOf","constructor","n","this_value","valueOf","quote","string","rx_escapable","lastIndex","a","meta","charCodeAt","holder","partial","mind","gap","toJSON","rep","isFinite","indent","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","Boolean","Number","\b","\t","\n","\f","\r","\"","\\","replacer","space","","debackslashify","text","ignore","b","fromCharCode","parseInt","escapes","state","container","/","go","firstokey","okey","ovalue","firstavalue","avalue","number","action","{","}","ocomma","[","]","acomma",":","colon","SyntaxError",",","true","false","null","reviver","tx","walk","pendingItems","pendingRequests","retryQueue","retryHandle","waitCallback","waitIntervalID","predicate","addPendingItem","removePendingItem","idx","splice","addItem","originalError","originalItem","predicateResult","_applyPredicates","stop","_maybeLog","_makeApiRequest","_dequeuePendingRequest","bind","_maybeCallWait","clearInterval","setInterval","rateLimitResponse","postItem","_maybeRetry","RETRIABLE_ERRORS","shouldRetry","retryInterval","code","_retryApiRequest","retryObject","shift","transform","_applyTransforms","transformIndex","transformsLength","cb","maxTelemetryEvents","MAX_EVENTS","maxQueueSize","max","min","getLevel","manual","newMaxEvents","deleteCount","events","Array","filterTelemetry","capture","rollbarUUID","timestamp_ms","captureError","captureLog","captureNetwork","subtype","levelFromStatus","status_code","statusCode","captureDom","element","checked","captureNavigation","from","to","captureConnectivityChange","change","Api","jsonBackup","transportOptions","_getTransport","helpers","getTransportFromOptions","search","buildPayload","post","contextResult","defaults","proxy","opts","pathname","method","host","appendPathToPath","base","baseTrailingSlash","pathBeginningSlash","unshift","detection","ieVersion","console","con","dummy","properties","methods","getIEVersion","undef","div","createElement","all","getElementsByTagName","innerHTML","Detection","handler","shim","oldOnError","_rollbarOldOnError","onerror","fn","_rollbarWindowOnError","old","_rollbarURH","belongsToShim","removeEventListener","rejectionHandler","evt","detail","addEventListener","_extendListenerPrototype","oldAddEventListener","_rollbarOldAdd","addFn","bubble","oldRemoveEventListener","_rollbarOldRemove","removeFn","requestFactory","_makeZoneRequest","stringifyResult","truncation","truncate","writeData","currentZone","Zone","_name","rootZone","_parent","run","_makeRequest","_createXMLHTTPObject","onreadystatechange","readyState","parseResponse","responseText","_isSuccess","_isNormalFailure","status","_newRetriableError","ex","open","setRequestHeader","send","e1","XDomainRequest","xdomainrequest","onprogress","ontimeout","onload","e2","xmlhttp","factories","XMLHttpRequest","ActiveXObject","numFactories","raw","selectFrames","frames","range","truncateFrames","trace_chain","chain","trace","maybeTruncateValue","truncateStrings","truncator","truncateTraceData","traceData","exception","description","minBody","needsTruncation","maxSize","strategy","results","strategies","last","auth","hash","pathParts","_savedStackTrace","server","remoteString","query_string","user_ip","nav","scr","screen","runtime_ms","round","javascript","browser","cookie_enabled","cookieEnabled","width","height","cur","plugins","navPlugins","addBodyTrace","addBodyMessage","messageResult","guess","guessErrorClass","className","class","rawStack","rawException","stackFrame","frame","pre","contextLength","mid","filename","sendFrameUrl","endsWith","reverse","UNKNOWN_FUNCTION","Frame","_stackFrame","fileName","lineNumber","functionName","columnNumber","Stack","getStack","parserStack","ErrorStackParser","errMsg","errClassMatch","ERR_CLASS_REGEXP","errClass","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","StackFrame","_map","array","thisArg","map","output","_filter","filter","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","SAFARI_NATIVE_CODE_REGEXP","stacktrace","parseOpera","parseV8OrIE","parseFFOrSafari","extractLocation","urlLike","locationParts","lastNumber","possibleNumber","isNaN","parseFloat","filtered","tokens","parseOpera9","parseOpera11","parseOpera10","lineRE","lines","argsRaw","functionCall","_isNumber","setFunctionName","setArgs","setFileName","setLineNumber","setColumnNumber","setSource","getFunctionName","getArgs","TypeError","getFileName","getLineNumber","getColumnNumber","getSource","payloadOptions","tracePath","newExtra","newItem","configKey","settings","levelVal","reportLevelVal","isUncaught","onSendCallback","urlIsOnAList","whiteOrBlack","black","list","frameLength","listLength","urlRegex","hostBlackList","hostWhiteList","listName","exceptionMessage","ignoredMessages","rIgnoredMessage","traceMessage","bodyMessage","replacements","orig","restore","nameFromDescription","attributes","attrs","defaultValueScrubber","patterns","_window","_document","autoInstrument","scrubTelemetryInputs","telemetryScrubber","network","navigation","connectivity","eventRemovers","dom","_location","_lastHref","urlparser","domUtil","networkResponseHeaders","networkResponseBody","networkRequestBody","oldSettings","deinstrumentNetwork","instrumentNetwork","deinstrumentConsole","instrumentConsole","deinstrumentDom","instrumentDom","deinstrumentNavigation","instrumentNavigation","deinstrumentConnectivity","instrumentConnectivity","wrapProp","xhr","xhrp","__rollbar_xhr","start_time_ms","end_time_ms","onreadystatechangeHandler","__rollbar_event","headers","headersConfig","header","allHeaders","getAllResponseHeaders","trim","getResponseHeader","response","then","wrapConsole","origConsole","removeListeners","clickHandler","handleClick","blurHandler","handleBlur","addListener","getElementFromEvent","hasTag","tagName","anchorOrButton","isDescribedElement","captureDomEvent","handleSelectInputChanged","elem","multiple","selected","selectedIndex","isChecked","getElementType","describeElement","elementString","elementArrayToString","treeToArray","chrome","chromePackagedApp","app","runtime","hasPushState","history","pushState","handleUrlChange","parsedHref","parsedTo","parsedFrom","section","altType","attachEvent","detachEvent","getAttribute","subtypes","doc","target","elementFromPoint","clientX","clientY","nextDescription","MAX_HEIGHT","out","parentNode","nextStr","totalLength","MAX_LENGTH","separator","separatorLength","descriptionToString","desc","classes","attr"],"mappings":"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","file":"rollbar.noconflict.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rollbar\"] = factory();\n\telse\n\t\troot[\"rollbar\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rollbar\"] = factory();\n\telse\n\t\troot[\"rollbar\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar rollbar = __webpack_require__(2);\n\t\n\tif ((typeof window !== 'undefined') && !window._rollbarStartTime) {\n\t  window._rollbarStartTime = (new Date()).getTime();\n\t}\n\t\n\tmodule.exports = rollbar;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Client = __webpack_require__(3);\n\tvar _ = __webpack_require__(5);\n\tvar API = __webpack_require__(11);\n\tvar logger = __webpack_require__(13);\n\tvar globals = __webpack_require__(16);\n\t\n\tvar transport = __webpack_require__(17);\n\tvar urllib = __webpack_require__(19);\n\t\n\tvar transforms = __webpack_require__(20);\n\tvar sharedTransforms = __webpack_require__(24);\n\tvar predicates = __webpack_require__(25);\n\tvar sharedPredicates = __webpack_require__(26);\n\tvar errorParser = __webpack_require__(21);\n\tvar Instrumenter = __webpack_require__(27);\n\t\n\tfunction Rollbar(options, client) {\n\t  this.options = _.handleOptions(defaultOptions, options);\n\t  var api = new API(this.options, transport, urllib);\n\t  this.client = client || new Client(this.options, api, logger, 'browser');\n\t\n\t  var gWindow = ((typeof window != 'undefined') && window) || ((typeof self != 'undefined') && self);\n\t  var gDocument = (typeof document != 'undefined') && document;\n\t  addTransformsToNotifier(this.client.notifier, gWindow);\n\t  addPredicatesToQueue(this.client.queue);\n\t  if (this.options.captureUncaught || this.options.handleUncaughtExceptions) {\n\t    globals.captureUncaughtExceptions(gWindow, this);\n\t    globals.wrapGlobals(gWindow, this);\n\t  }\n\t  if (this.options.captureUnhandledRejections || this.options.handleUnhandledRejections) {\n\t    globals.captureUnhandledRejections(gWindow, this);\n\t  }\n\t\n\t  this.instrumenter = new Instrumenter(this.options, this.client.telemeter, this, gWindow, gDocument);\n\t  this.instrumenter.instrument();\n\t}\n\t\n\tvar _instance = null;\n\tRollbar.init = function(options, client) {\n\t  if (_instance) {\n\t    return _instance.global(options).configure(options);\n\t  }\n\t  _instance = new Rollbar(options, client);\n\t  return _instance;\n\t};\n\t\n\tfunction handleUninitialized(maybeCallback) {\n\t  var message = 'Rollbar is not initialized';\n\t  logger.error(message);\n\t  if (maybeCallback) {\n\t    maybeCallback(new Error(message));\n\t  }\n\t}\n\t\n\tRollbar.prototype.global = function(options) {\n\t  this.client.global(options);\n\t  return this;\n\t};\n\tRollbar.global = function(options) {\n\t  if (_instance) {\n\t    return _instance.global(options);\n\t  } else {\n\t    handleUninitialized();\n\t  }\n\t};\n\t\n\tRollbar.prototype.configure = function(options, payloadData) {\n\t  var oldOptions = this.options;\n\t  var payload = {};\n\t  if (payloadData) {\n\t    payload = {payload: payloadData};\n\t  }\n\t  this.options = _.handleOptions(oldOptions, options, payload);\n\t  this.client.configure(this.options, payloadData);\n\t  this.instrumenter.configure(this.options);\n\t  return this;\n\t};\n\tRollbar.configure = function(options, payloadData) {\n\t  if (_instance) {\n\t    return _instance.configure(options, payloadData);\n\t  } else {\n\t    handleUninitialized();\n\t  }\n\t};\n\t\n\tRollbar.prototype.lastError = function() {\n\t  return this.client.lastError;\n\t};\n\tRollbar.lastError = function() {\n\t  if (_instance) {\n\t    return _instance.lastError();\n\t  } else {\n\t    handleUninitialized();\n\t  }\n\t};\n\t\n\tRollbar.prototype.log = function() {\n\t  var item = this._createItem(arguments);\n\t  var uuid = item.uuid;\n\t  this.client.log(item);\n\t  return {uuid: uuid};\n\t};\n\tRollbar.log = function() {\n\t  if (_instance) {\n\t    return _instance.log.apply(_instance, arguments);\n\t  } else {\n\t    var maybeCallback = _getFirstFunction(arguments);\n\t    handleUninitialized(maybeCallback);\n\t  }\n\t};\n\t\n\tRollbar.prototype.debug = function() {\n\t  var item = this._createItem(arguments);\n\t  var uuid = item.uuid;\n\t  this.client.debug(item);\n\t  return {uuid: uuid};\n\t};\n\tRollbar.debug = function() {\n\t  if (_instance) {\n\t    return _instance.debug.apply(_instance, arguments);\n\t  } else {\n\t    var maybeCallback = _getFirstFunction(arguments);\n\t    handleUninitialized(maybeCallback);\n\t  }\n\t};\n\t\n\tRollbar.prototype.info = function() {\n\t  var item = this._createItem(arguments);\n\t  var uuid = item.uuid;\n\t  this.client.info(item);\n\t  return {uuid: uuid};\n\t};\n\tRollbar.info = function() {\n\t  if (_instance) {\n\t    return _instance.info.apply(_instance, arguments);\n\t  } else {\n\t    var maybeCallback = _getFirstFunction(arguments);\n\t    handleUninitialized(maybeCallback);\n\t  }\n\t};\n\t\n\tRollbar.prototype.warn = function() {\n\t  var item = this._createItem(arguments);\n\t  var uuid = item.uuid;\n\t  this.client.warn(item);\n\t  return {uuid: uuid};\n\t};\n\tRollbar.warn = function() {\n\t  if (_instance) {\n\t    return _instance.warn.apply(_instance, arguments);\n\t  } else {\n\t    var maybeCallback = _getFirstFunction(arguments);\n\t    handleUninitialized(maybeCallback);\n\t  }\n\t};\n\t\n\tRollbar.prototype.warning = function() {\n\t  var item = this._createItem(arguments);\n\t  var uuid = item.uuid;\n\t  this.client.warning(item);\n\t  return {uuid: uuid};\n\t};\n\tRollbar.warning = function() {\n\t  if (_instance) {\n\t    return _instance.warning.apply(_instance, arguments);\n\t  } else {\n\t    var maybeCallback = _getFirstFunction(arguments);\n\t    handleUninitialized(maybeCallback);\n\t  }\n\t};\n\t\n\tRollbar.prototype.error = function() {\n\t  var item = this._createItem(arguments);\n\t  var uuid = item.uuid;\n\t  this.client.error(item);\n\t  return {uuid: uuid};\n\t};\n\tRollbar.error = function() {\n\t  if (_instance) {\n\t    return _instance.error.apply(_instance, arguments);\n\t  } else {\n\t    var maybeCallback = _getFirstFunction(arguments);\n\t    handleUninitialized(maybeCallback);\n\t  }\n\t};\n\t\n\tRollbar.prototype.critical = function() {\n\t  var item = this._createItem(arguments);\n\t  var uuid = item.uuid;\n\t  this.client.critical(item);\n\t  return {uuid: uuid};\n\t};\n\tRollbar.critical = function() {\n\t  if (_instance) {\n\t    return _instance.critical.apply(_instance, arguments);\n\t  } else {\n\t    var maybeCallback = _getFirstFunction(arguments);\n\t    handleUninitialized(maybeCallback);\n\t  }\n\t};\n\t\n\tRollbar.prototype.handleUncaughtException = function(message, url, lineno, colno, error, context) {\n\t  var item;\n\t  var stackInfo = _.makeUnhandledStackInfo(\n\t    message,\n\t    url,\n\t    lineno,\n\t    colno,\n\t    error,\n\t    'onerror',\n\t    'uncaught exception',\n\t    errorParser\n\t  );\n\t  if (_.isError(error)) {\n\t    item = this._createItem([message, error, context]);\n\t    item._unhandledStackInfo = stackInfo;\n\t  } else if (_.isError(url)) {\n\t    item = this._createItem([message, url, context]);\n\t    item._unhandledStackInfo = stackInfo;\n\t  } else {\n\t    item = this._createItem([message, context]);\n\t    item.stackInfo = stackInfo;\n\t  }\n\t  item.level = this.options.uncaughtErrorLevel;\n\t  item._isUncaught = true;\n\t  this.client.log(item);\n\t};\n\t\n\tRollbar.prototype.handleUnhandledRejection = function(reason, promise) {\n\t  var message = 'unhandled rejection was null or undefined!';\n\t  if (reason) {\n\t    if (reason.message) {\n\t      message = reason.message;\n\t    } else {\n\t      var reasonResult = _.stringify(reason);\n\t      if (reasonResult.value) {\n\t        message = reasonResult.value;\n\t      }\n\t    }\n\t  }\n\t  var context = (reason && reason._rollbarContext) || (promise && promise._rollbarContext);\n\t\n\t  var item;\n\t  if (_.isError(reason)) {\n\t    item = this._createItem([message, reason, context]);\n\t  } else {\n\t    item = this._createItem([message, reason, context]);\n\t    item.stackInfo = _.makeUnhandledStackInfo(\n\t      message,\n\t      '',\n\t      0,\n\t      0,\n\t      null,\n\t      'unhandledrejection',\n\t      '',\n\t      errorParser\n\t    );\n\t  }\n\t  item.level = this.options.uncaughtErrorLevel;\n\t  item._isUncaught = true;\n\t  item._originalArgs = item._originalArgs || [];\n\t  item._originalArgs.push(promise);\n\t  this.client.log(item);\n\t};\n\t\n\tRollbar.prototype.wrap = function(f, context, _before) {\n\t  try {\n\t    var ctxFn;\n\t    if(_.isFunction(context)) {\n\t      ctxFn = context;\n\t    } else {\n\t      ctxFn = function() { return context || {}; };\n\t    }\n\t\n\t    if (!_.isFunction(f)) {\n\t      return f;\n\t    }\n\t\n\t    if (f._isWrap) {\n\t      return f;\n\t    }\n\t\n\t    if (!f._rollbar_wrapped) {\n\t      f._rollbar_wrapped = function () {\n\t        if (_before && _.isFunction(_before)) {\n\t          _before.apply(this, arguments);\n\t        }\n\t        try {\n\t          return f.apply(this, arguments);\n\t        } catch(exc) {\n\t          var e = exc;\n\t          if (e && window._rollbarWrappedError !== e) {\n\t            if (_.isType(e, 'string')) {\n\t              e = new String(e);\n\t            }\n\t            e._rollbarContext = ctxFn() || {};\n\t            e._rollbarContext._wrappedSource = f.toString();\n\t\n\t            window._rollbarWrappedError = e;\n\t          }\n\t          throw e;\n\t        }\n\t      };\n\t\n\t      f._rollbar_wrapped._isWrap = true;\n\t\n\t      if (f.hasOwnProperty) {\n\t        for (var prop in f) {\n\t          if (f.hasOwnProperty(prop) && prop !== '_rollbar_wrapped') {\n\t            f._rollbar_wrapped[prop] = f[prop];\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    return f._rollbar_wrapped;\n\t  } catch (e) {\n\t    // Return the original function if the wrap fails.\n\t    return f;\n\t  }\n\t};\n\tRollbar.wrap = function(f, context) {\n\t  if (_instance) {\n\t    return _instance.wrap(f, context);\n\t  } else {\n\t    handleUninitialized();\n\t  }\n\t};\n\t\n\tRollbar.prototype.captureEvent = function() {\n\t  var event = _.createTelemetryEvent(arguments);\n\t  return this.client.captureEvent(event.type, event.metadata, event.level);\n\t};\n\tRollbar.captureEvent = function() {\n\t  if (_instance) {\n\t    return _instance.captureEvent.apply(_instance, arguments);\n\t  } else {\n\t    handleUninitialized();\n\t  }\n\t};\n\t\n\t// The following two methods are used internally and are not meant for public use\n\tRollbar.prototype.captureDomContentLoaded = function(e, ts) {\n\t  if (!ts) {\n\t    ts = new Date();\n\t  }\n\t  return this.client.captureDomContentLoaded(ts);\n\t};\n\t\n\tRollbar.prototype.captureLoad = function(e, ts) {\n\t  if (!ts) {\n\t    ts = new Date();\n\t  }\n\t  return this.client.captureLoad(ts);\n\t};\n\t\n\t/* Internal */\n\t\n\tfunction addTransformsToNotifier(notifier, gWindow) {\n\t  notifier\n\t    .addTransform(transforms.handleItemWithError)\n\t    .addTransform(transforms.ensureItemHasSomethingToSay)\n\t    .addTransform(transforms.addBaseInfo)\n\t    .addTransform(transforms.addRequestInfo(gWindow))\n\t    .addTransform(transforms.addClientInfo(gWindow))\n\t    .addTransform(transforms.addPluginInfo(gWindow))\n\t    .addTransform(transforms.addBody)\n\t    .addTransform(sharedTransforms.addMessageWithError)\n\t    .addTransform(sharedTransforms.addTelemetryData)\n\t    .addTransform(sharedTransforms.addConfigToPayload)\n\t    .addTransform(transforms.scrubPayload)\n\t    .addTransform(sharedTransforms.userTransform(logger))\n\t    .addTransform(sharedTransforms.itemToPayload);\n\t}\n\t\n\tfunction addPredicatesToQueue(queue) {\n\t  queue\n\t    .addPredicate(sharedPredicates.checkLevel)\n\t    .addPredicate(predicates.checkIgnore)\n\t    .addPredicate(sharedPredicates.userCheckIgnore(logger))\n\t    .addPredicate(sharedPredicates.urlIsNotBlacklisted(logger))\n\t    .addPredicate(sharedPredicates.urlIsWhitelisted(logger))\n\t    .addPredicate(sharedPredicates.messageIsIgnored(logger));\n\t}\n\t\n\tRollbar.prototype._createItem = function(args) {\n\t  return _.createItem(args, logger, this);\n\t};\n\t\n\tfunction _getFirstFunction(args) {\n\t  for (var i = 0, len = args.length; i < len; ++i) {\n\t    if (_.isFunction(args[i])) {\n\t      return args[i];\n\t    }\n\t  }\n\t  return undefined;\n\t}\n\t\n\t/* global __NOTIFIER_VERSION__:false */\n\t/* global __DEFAULT_BROWSER_SCRUB_FIELDS__:false */\n\t/* global __DEFAULT_LOG_LEVEL__:false */\n\t/* global __DEFAULT_REPORT_LEVEL__:false */\n\t/* global __DEFAULT_UNCAUGHT_ERROR_LEVEL:false */\n\t/* global __DEFAULT_ENDPOINT__:false */\n\t\n\tvar defaultOptions = {\n\t  version: (\"2.5.5\"),\n\t  scrubFields: ([\"pw\",\"pass\",\"passwd\",\"password\",\"secret\",\"confirm_password\",\"confirmPassword\",\"password_confirmation\",\"passwordConfirmation\",\"access_token\",\"accessToken\",\"secret_key\",\"secretKey\",\"secretToken\",\"cc-number\",\"card number\",\"cardnumber\",\"cardnum\",\"ccnum\",\"ccnumber\",\"cc num\",\"creditcardnumber\",\"credit card number\",\"newcreditcardnumber\",\"new credit card\",\"creditcardno\",\"credit card no\",\"card#\",\"card #\",\"cc-csc\",\"cvc2\",\"cvv2\",\"ccv2\",\"security code\",\"card verification\",\"name on credit card\",\"name on card\",\"nameoncard\",\"cardholder\",\"card holder\",\"name des karteninhabers\",\"card type\",\"cardtype\",\"cc type\",\"cctype\",\"payment type\",\"expiration date\",\"expirationdate\",\"expdate\",\"cc-exp\"]),\n\t  logLevel: (\"debug\"),\n\t  reportLevel: (\"debug\"),\n\t  uncaughtErrorLevel: (\"error\"),\n\t  endpoint: (\"api.rollbar.com/api/1/item/\"),\n\t  verbose: false,\n\t  enabled: true,\n\t  sendConfig: false,\n\t  includeItemsInTelemetry: true,\n\t  captureIp: true\n\t};\n\t\n\tmodule.exports = Rollbar;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar RateLimiter = __webpack_require__(4);\n\tvar Queue = __webpack_require__(8);\n\tvar Notifier = __webpack_require__(9);\n\tvar Telemeter = __webpack_require__(10);\n\tvar _ = __webpack_require__(5);\n\t\n\t/*\n\t * Rollbar - the interface to Rollbar\n\t *\n\t * @param options\n\t * @param api\n\t * @param logger\n\t */\n\tfunction Rollbar(options, api, logger, platform) {\n\t  this.options = _.merge(options);\n\t  this.logger = logger;\n\t  Rollbar.rateLimiter.configureGlobal(this.options);\n\t  Rollbar.rateLimiter.setPlatformOptions(platform, this.options);\n\t  this.queue = new Queue(Rollbar.rateLimiter, api, logger, this.options);\n\t  this.notifier = new Notifier(this.queue, this.options);\n\t  this.telemeter = new Telemeter(this.options);\n\t  this.lastError = null;\n\t  this.lastErrorHash = 'none';\n\t}\n\t\n\tvar defaultOptions = {\n\t  maxItems: 0,\n\t  itemsPerMinute: 60\n\t};\n\t\n\tRollbar.rateLimiter = new RateLimiter(defaultOptions);\n\t\n\tRollbar.prototype.global = function(options) {\n\t  Rollbar.rateLimiter.configureGlobal(options);\n\t  return this;\n\t};\n\t\n\tRollbar.prototype.configure = function(options, payloadData) {\n\t  var oldOptions = this.options;\n\t  var payload = {};\n\t  if (payloadData) {\n\t    payload = {payload: payloadData};\n\t  }\n\t  this.options = _.merge(oldOptions, options, payload);\n\t  this.notifier && this.notifier.configure(this.options);\n\t  this.telemeter && this.telemeter.configure(this.options);\n\t  this.global(this.options);\n\t  return this;\n\t};\n\t\n\tRollbar.prototype.log = function(item) {\n\t  var level = this._defaultLogLevel();\n\t  return this._log(level, item);\n\t};\n\t\n\tRollbar.prototype.debug = function(item) {\n\t  this._log('debug', item);\n\t};\n\t\n\tRollbar.prototype.info = function(item) {\n\t  this._log('info', item);\n\t};\n\t\n\tRollbar.prototype.warn = function(item) {\n\t  this._log('warning', item);\n\t};\n\t\n\tRollbar.prototype.warning = function(item) {\n\t  this._log('warning', item);\n\t};\n\t\n\tRollbar.prototype.error = function(item) {\n\t  this._log('error', item);\n\t};\n\t\n\tRollbar.prototype.critical = function(item) {\n\t  this._log('critical', item);\n\t};\n\t\n\tRollbar.prototype.wait = function(callback) {\n\t  this.queue.wait(callback);\n\t};\n\t\n\tRollbar.prototype.captureEvent = function(type, metadata, level) {\n\t  return this.telemeter.captureEvent(type, metadata, level);\n\t};\n\t\n\tRollbar.prototype.captureDomContentLoaded = function(ts) {\n\t  return this.telemeter.captureDomContentLoaded(ts);\n\t};\n\t\n\tRollbar.prototype.captureLoad = function(ts) {\n\t  return this.telemeter.captureLoad(ts);\n\t};\n\t\n\t/* Internal */\n\t\n\tRollbar.prototype._log = function(defaultLevel, item) {\n\t  var callback;\n\t  if (item.callback) {\n\t    callback = item.callback;\n\t    delete item.callback;\n\t  }\n\t  if (this._sameAsLastError(item)) {\n\t    if (callback) {\n\t      var error = new Error('ignored identical item');\n\t      error.item = item;\n\t      callback(error);\n\t    }\n\t    return;\n\t  }\n\t  try {\n\t    item.level = item.level || defaultLevel;\n\t    this.telemeter._captureRollbarItem(item);\n\t    item.telemetryEvents = this.telemeter.copyEvents();\n\t    this.notifier.log(item, callback);\n\t  } catch (e) {\n\t    this.logger.error(e);\n\t  }\n\t};\n\t\n\tRollbar.prototype._defaultLogLevel = function() {\n\t  return this.options.logLevel || 'debug';\n\t};\n\t\n\tRollbar.prototype._sameAsLastError = function(item) {\n\t  if (!item._isUncaught) {\n\t    return false;\n\t  }\n\t  var itemHash = generateItemHash(item);\n\t  if (this.lastErrorHash === itemHash) {\n\t    return true;\n\t  }\n\t  this.lastError = item.err;\n\t  this.lastErrorHash = itemHash;\n\t  return false;\n\t};\n\t\n\tfunction generateItemHash(item) {\n\t  var message = item.message || '';\n\t  var stack = (item.err || {}).stack || String(item.err);\n\t  return message + '::' + stack;\n\t}\n\t\n\tmodule.exports = Rollbar;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(5);\n\t\n\t/*\n\t * RateLimiter - an object that encapsulates the logic for counting items sent to Rollbar\n\t *\n\t * @param options - the same options that are accepted by configureGlobal offered as a convenience\n\t */\n\tfunction RateLimiter(options) {\n\t  this.startTime = _.now();\n\t  this.counter = 0;\n\t  this.perMinCounter = 0;\n\t  this.platform = null;\n\t  this.platformOptions = {};\n\t  this.configureGlobal(options);\n\t}\n\t\n\tRateLimiter.globalSettings = {\n\t  startTime: _.now(),\n\t  maxItems: undefined,\n\t  itemsPerMinute: undefined\n\t};\n\t\n\t/*\n\t * configureGlobal - set the global rate limiter options\n\t *\n\t * @param options - Only the following values are recognized:\n\t *    startTime: a timestamp of the form returned by (new Date()).getTime()\n\t *    maxItems: the maximum items\n\t *    itemsPerMinute: the max number of items to send in a given minute\n\t */\n\tRateLimiter.prototype.configureGlobal = function(options) {\n\t  if (options.startTime !== undefined) {\n\t    RateLimiter.globalSettings.startTime = options.startTime;\n\t  }\n\t  if (options.maxItems !== undefined) {\n\t    RateLimiter.globalSettings.maxItems = options.maxItems;\n\t  }\n\t  if (options.itemsPerMinute !== undefined) {\n\t    RateLimiter.globalSettings.itemsPerMinute = options.itemsPerMinute;\n\t  }\n\t};\n\t\n\t/*\n\t * shouldSend - determine if we should send a given item based on rate limit settings\n\t *\n\t * @param item - the item we are about to send\n\t * @returns An object with the following structure:\n\t *  error: (Error|null)\n\t *  shouldSend: bool\n\t *  payload: (Object|null)\n\t *  If shouldSend is false, the item passed as a parameter should not be sent to Rollbar, and\n\t *  exactly one of error or payload will be non-null. If error is non-null, the returned Error will\n\t *  describe the situation, but it means that we were already over a rate limit (either globally or\n\t *  per minute) when this item was checked. If error is null, and therefore payload is non-null, it\n\t *  means this item put us over the global rate limit and the payload should be sent to Rollbar in\n\t *  place of the passed in item.\n\t */\n\tRateLimiter.prototype.shouldSend = function(item, now) {\n\t  now = now || _.now();\n\t  var elapsedTime = now - this.startTime;\n\t  if (elapsedTime < 0 || elapsedTime >= 60000) {\n\t    this.startTime = now;\n\t    this.perMinCounter = 0;\n\t  }\n\t\n\t  var globalRateLimit = RateLimiter.globalSettings.maxItems;\n\t  var globalRateLimitPerMin = RateLimiter.globalSettings.itemsPerMinute;\n\t\n\t  if (checkRate(item, globalRateLimit, this.counter)) {\n\t    return shouldSendValue(this.platform, this.platformOptions, globalRateLimit + ' max items reached', false);\n\t  } else if (checkRate(item, globalRateLimitPerMin, this.perMinCounter)) {\n\t    return shouldSendValue(this.platform, this.platformOptions, globalRateLimitPerMin + ' items per minute reached', false);\n\t  }\n\t  this.counter++;\n\t  this.perMinCounter++;\n\t\n\t  var shouldSend = !checkRate(item, globalRateLimit, this.counter);\n\t  var perMinute = shouldSend;\n\t  shouldSend = shouldSend && !checkRate(item, globalRateLimitPerMin, this.perMinCounter);\n\t  return shouldSendValue(this.platform, this.platformOptions, null, shouldSend, globalRateLimit, globalRateLimitPerMin, perMinute);\n\t};\n\t\n\tRateLimiter.prototype.setPlatformOptions = function(platform, options) {\n\t  this.platform = platform;\n\t  this.platformOptions = options;\n\t};\n\t\n\t/* Helpers */\n\t\n\tfunction checkRate(item, limit, counter) {\n\t  return !item.ignoreRateLimit && limit >= 1 && counter > limit;\n\t}\n\t\n\tfunction shouldSendValue(platform, options, error, shouldSend, globalRateLimit, limitPerMin, perMinute) {\n\t  var payload = null;\n\t  if (error) {\n\t    error = new Error(error);\n\t  }\n\t  if (!error && !shouldSend) {\n\t    payload = rateLimitPayload(platform, options, globalRateLimit, limitPerMin, perMinute);\n\t  }\n\t  return {error: error, shouldSend: shouldSend, payload: payload};\n\t}\n\t\n\tfunction rateLimitPayload(platform, options, globalRateLimit, limitPerMin, perMinute) {\n\t  var environment = options.environment || (options.payload && options.payload.environment);\n\t  var msg;\n\t  if (perMinute) {\n\t    msg = 'item per minute limit reached, ignoring errors until timeout';\n\t  } else {\n\t    msg = 'maxItems has been hit, ignoring errors until reset.';\n\t  }\n\t  var item = {\n\t    body: {\n\t      message: {\n\t        body: msg,\n\t        extra: {\n\t          maxItems: globalRateLimit,\n\t          itemsPerMinute: limitPerMin\n\t        }\n\t      }\n\t    },\n\t    language: 'javascript',\n\t    environment: environment,\n\t    notifier: {\n\t      version: (options.notifier && options.notifier.version) || options.version\n\t    }\n\t  };\n\t  if (platform === 'browser') {\n\t    item.platform = 'browser';\n\t    item.framework = 'browser-js';\n\t    item.notifier.name = 'rollbar-browser-js';\n\t  } else if (platform === 'server') {\n\t    item.framework = options.framework || 'node-js';\n\t    item.notifier.name = options.notifier.name;\n\t  } else if (platform === 'react-native') {\n\t    item.framework = options.framework || 'react-native';\n\t    item.notifier.name = options.notifier.name;\n\t  }\n\t  return item;\n\t}\n\t\n\tmodule.exports = RateLimiter;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar merge = __webpack_require__(6);\n\t\n\tvar RollbarJSON = {};\n\tvar __initRollbarJSON = false;\n\tfunction setupJSON() {\n\t  if (__initRollbarJSON) {\n\t    return;\n\t  }\n\t  __initRollbarJSON = true;\n\t\n\t  if (isDefined(JSON)) {\n\t    if (isNativeFunction(JSON.stringify)) {\n\t      RollbarJSON.stringify = JSON.stringify;\n\t    }\n\t    if (isNativeFunction(JSON.parse)) {\n\t      RollbarJSON.parse = JSON.parse;\n\t    }\n\t  }\n\t  if (!isFunction(RollbarJSON.stringify) || !isFunction(RollbarJSON.parse)) {\n\t    var setupCustomJSON = __webpack_require__(7);\n\t    setupCustomJSON(RollbarJSON);\n\t  }\n\t}\n\tsetupJSON();\n\t\n\t/*\n\t * isType - Given a Javascript value and a string, returns true if the type of the value matches the\n\t * given string.\n\t *\n\t * @param x - any value\n\t * @param t - a lowercase string containing one of the following type names:\n\t *    - undefined\n\t *    - null\n\t *    - error\n\t *    - number\n\t *    - boolean\n\t *    - string\n\t *    - symbol\n\t *    - function\n\t *    - object\n\t *    - array\n\t * @returns true if x is of type t, otherwise false\n\t */\n\tfunction isType(x, t) {\n\t  return t === typeName(x);\n\t}\n\t\n\t/*\n\t * typeName - Given a Javascript value, returns the type of the object as a string\n\t */\n\tfunction typeName(x) {\n\t  var name = typeof x;\n\t  if (name !== 'object') {\n\t    return name;\n\t  }\n\t  if (!x) {\n\t    return 'null';\n\t  }\n\t  if (x instanceof Error) {\n\t    return 'error';\n\t  }\n\t  return ({}).toString.call(x).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n\t}\n\t\n\t/* isFunction - a convenience function for checking if a value is a function\n\t *\n\t * @param f - any value\n\t * @returns true if f is a function, otherwise false\n\t */\n\tfunction isFunction(f) {\n\t  return isType(f, 'function');\n\t}\n\t\n\t/* isNativeFunction - a convenience function for checking if a value is a native JS function\n\t *\n\t * @param f - any value\n\t * @returns true if f is a native JS function, otherwise false\n\t */\n\tfunction isNativeFunction(f) {\n\t  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\t  var funcMatchString = Function.prototype.toString.call(Object.prototype.hasOwnProperty)\n\t    .replace(reRegExpChar, '\\\\$&')\n\t    .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?');\n\t  var reIsNative = RegExp('^' + funcMatchString + '$');\n\t  return isObject(f) && reIsNative.test(f);\n\t}\n\t\n\t/* isObject - Checks if the argument is an object\n\t *\n\t * @param value - any value\n\t * @returns true is value is an object function is an object)\n\t*/\n\tfunction isObject(value) {\n\t  var type = typeof value;\n\t  return value != null && (type == 'object' || type == 'function');\n\t}\n\t\n\t/*\n\t * isDefined - a convenience function for checking if a value is not equal to undefined\n\t *\n\t * @param u - any value\n\t * @returns true if u is anything other than undefined\n\t */\n\tfunction isDefined(u) {\n\t  return !isType(u, 'undefined');\n\t}\n\t\n\t/*\n\t * isIterable - convenience function for checking if a value can be iterated, essentially\n\t * whether it is an object or an array.\n\t *\n\t * @param i - any value\n\t * @returns true if i is an object or an array as determined by `typeName`\n\t */\n\tfunction isIterable(i) {\n\t  var type = typeName(i);\n\t  return (type === 'object' || type === 'array');\n\t}\n\t\n\t/*\n\t * isError - convenience function for checking if a value is of an error type\n\t *\n\t * @param e - any value\n\t * @returns true if e is an error\n\t */\n\tfunction isError(e) {\n\t  // Detect both Error and Firefox Exception type\n\t  return isType(e, 'error') || isType(e, 'exception');\n\t}\n\t\n\tfunction traverse(obj, func, seen) {\n\t  var k, v, i;\n\t  var isObj = isType(obj, 'object');\n\t  var isArray = isType(obj, 'array');\n\t  var keys = [];\n\t\n\t  if (isObj && seen.indexOf(obj) !== -1) {\n\t    return obj;\n\t  }\n\t  seen.push(obj);\n\t\n\t  if (isObj) {\n\t    for (k in obj) {\n\t      if (Object.prototype.hasOwnProperty.call(obj, k)) {\n\t        keys.push(k);\n\t      }\n\t    }\n\t  } else if (isArray) {\n\t    for (i = 0; i < obj.length; ++i) {\n\t      keys.push(i);\n\t    }\n\t  }\n\t\n\t  var result = isObj ? {} : [];\n\t  var same = true;\n\t  for (i = 0; i < keys.length; ++i) {\n\t    k = keys[i];\n\t    v = obj[k];\n\t    result[k] = func(k, v, seen);\n\t    same = same && result[k] === obj[k];\n\t  }\n\t\n\t  return (keys.length != 0 && !same) ? result : obj;\n\t}\n\t\n\tfunction redact() {\n\t  return '********';\n\t}\n\t\n\t// from http://stackoverflow.com/a/8809472/1138191\n\tfunction uuid4() {\n\t  var d = now();\n\t  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n\t    var r = (d + Math.random() * 16) % 16 | 0;\n\t    d = Math.floor(d / 16);\n\t    return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n\t  });\n\t  return uuid;\n\t}\n\t\n\tvar LEVELS = {\n\t  debug: 0,\n\t  info: 1,\n\t  warning: 2,\n\t  error: 3,\n\t  critical: 4\n\t};\n\t\n\tfunction sanitizeUrl(url) {\n\t  var baseUrlParts = parseUri(url);\n\t  if (!baseUrlParts) {\n\t    return '(unknown)';\n\t  }\n\t\n\t  // remove a trailing # if there is no anchor\n\t  if (baseUrlParts.anchor === '') {\n\t    baseUrlParts.source = baseUrlParts.source.replace('#', '');\n\t  }\n\t\n\t  url = baseUrlParts.source.replace('?' + baseUrlParts.query, '');\n\t  return url;\n\t}\n\t\n\tvar parseUriOptions = {\n\t  strictMode: false,\n\t  key: [\n\t    'source',\n\t    'protocol',\n\t    'authority',\n\t    'userInfo',\n\t    'user',\n\t    'password',\n\t    'host',\n\t    'port',\n\t    'relative',\n\t    'path',\n\t    'directory',\n\t    'file',\n\t    'query',\n\t    'anchor'\n\t  ],\n\t  q: {\n\t    name: 'queryKey',\n\t    parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n\t  },\n\t  parser: {\n\t    strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n\t    loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n\t  }\n\t};\n\t\n\tfunction parseUri(str) {\n\t  if (!isType(str, 'string')) {\n\t    return undefined;\n\t  }\n\t\n\t  var o = parseUriOptions;\n\t  var m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str);\n\t  var uri = {};\n\t\n\t  for (var i = 0, l = o.key.length; i < l; ++i) {\n\t    uri[o.key[i]] = m[i] || '';\n\t  }\n\t\n\t  uri[o.q.name] = {};\n\t  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n\t    if ($1) {\n\t      uri[o.q.name][$1] = $2;\n\t    }\n\t  });\n\t\n\t  return uri;\n\t}\n\t\n\tfunction addParamsAndAccessTokenToPath(accessToken, options, params) {\n\t  params = params || {};\n\t  params.access_token = accessToken;\n\t  var paramsArray = [];\n\t  var k;\n\t  for (k in params) {\n\t    if (Object.prototype.hasOwnProperty.call(params, k)) {\n\t      paramsArray.push([k, params[k]].join('='));\n\t    }\n\t  }\n\t  var query = '?' + paramsArray.sort().join('&');\n\t\n\t  options = options || {};\n\t  options.path = options.path || '';\n\t  var qs = options.path.indexOf('?');\n\t  var h = options.path.indexOf('#');\n\t  var p;\n\t  if (qs !== -1 && (h === -1 || h > qs)) {\n\t    p = options.path;\n\t    options.path = p.substring(0,qs) + query + '&' + p.substring(qs+1);\n\t  } else {\n\t    if (h !== -1) {\n\t      p = options.path;\n\t      options.path = p.substring(0,h) + query + p.substring(h);\n\t    } else {\n\t      options.path = options.path + query;\n\t    }\n\t  }\n\t}\n\t\n\tfunction formatUrl(u, protocol) {\n\t  protocol = protocol || u.protocol;\n\t  if (!protocol && u.port) {\n\t    if (u.port === 80) {\n\t      protocol = 'http:';\n\t    } else if (u.port === 443) {\n\t      protocol = 'https:';\n\t    }\n\t  }\n\t  protocol = protocol || 'https:';\n\t\n\t  if (!u.hostname) {\n\t    return null;\n\t  }\n\t  var result = protocol + '//' + u.hostname;\n\t  if (u.port) {\n\t    result = result + ':' + u.port;\n\t  }\n\t  if (u.path) {\n\t    result = result + u.path;\n\t  }\n\t  return result;\n\t}\n\t\n\tfunction stringify(obj, backup) {\n\t  var value, error;\n\t  try {\n\t    value = RollbarJSON.stringify(obj);\n\t  } catch (jsonError) {\n\t    if (backup && isFunction(backup)) {\n\t      try {\n\t        value = backup(obj);\n\t      } catch (backupError) {\n\t        error = backupError;\n\t      }\n\t    } else {\n\t      error = jsonError;\n\t    }\n\t  }\n\t  return {error: error, value: value};\n\t}\n\t\n\tfunction jsonParse(s) {\n\t  var value, error;\n\t  try {\n\t    value = RollbarJSON.parse(s);\n\t  } catch (e) {\n\t    error = e;\n\t  }\n\t  return {error: error, value: value};\n\t}\n\t\n\tfunction makeUnhandledStackInfo(\n\t  message,\n\t  url,\n\t  lineno,\n\t  colno,\n\t  error,\n\t  mode,\n\t  backupMessage,\n\t  errorParser\n\t) {\n\t  var location = {\n\t    url: url || '',\n\t    line: lineno,\n\t    column: colno\n\t  };\n\t  location.func = errorParser.guessFunctionName(location.url, location.line);\n\t  location.context = errorParser.gatherContext(location.url, location.line);\n\t  var href = document && document.location && document.location.href;\n\t  var useragent = window && window.navigator && window.navigator.userAgent;\n\t  return {\n\t    'mode': mode,\n\t    'message': error ? String(error) : (message || backupMessage),\n\t    'url': href,\n\t    'stack': [location],\n\t    'useragent': useragent\n\t  };\n\t}\n\t\n\tfunction wrapCallback(logger, f) {\n\t  return function(err, resp) {\n\t    try {\n\t      f(err, resp);\n\t    } catch (e) {\n\t      logger.error(e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction createItem(args, logger, notifier, requestKeys, lambdaContext) {\n\t  var message, err, custom, callback, request;\n\t  var arg;\n\t  var extraArgs = [];\n\t\n\t  for (var i = 0, l = args.length; i < l; ++i) {\n\t    arg = args[i];\n\t\n\t    var typ = typeName(arg);\n\t    switch (typ) {\n\t      case 'undefined':\n\t        break;\n\t      case 'string':\n\t        message ? extraArgs.push(arg) : message = arg;\n\t        break;\n\t      case 'function':\n\t        callback = wrapCallback(logger, arg);\n\t        break;\n\t      case 'date':\n\t        extraArgs.push(arg);\n\t        break;\n\t      case 'error':\n\t      case 'domexception':\n\t      case 'exception': // Firefox Exception type\n\t        err ? extraArgs.push(arg) : err = arg;\n\t        break;\n\t      case 'object':\n\t      case 'array':\n\t        if (arg instanceof Error || (typeof DOMException !== 'undefined' && arg instanceof DOMException)) {\n\t          err ? extraArgs.push(arg) : err = arg;\n\t          break;\n\t        }\n\t        if (requestKeys && typ === 'object' && !request) {\n\t          for (var j = 0, len = requestKeys.length; j < len; ++j) {\n\t            if (arg[requestKeys[j]] !== undefined) {\n\t              request = arg;\n\t              break;\n\t            }\n\t          }\n\t          if (request) {\n\t            break;\n\t          }\n\t        }\n\t        custom ? extraArgs.push(arg) : custom = arg;\n\t        break;\n\t      default:\n\t        if (arg instanceof Error || (typeof DOMException !== 'undefined' && arg instanceof DOMException)) {\n\t          err ? extraArgs.push(arg) : err = arg;\n\t          break;\n\t        }\n\t        extraArgs.push(arg);\n\t    }\n\t  }\n\t\n\t  if (extraArgs.length > 0) {\n\t    // if custom is an array this turns it into an object with integer keys\n\t    custom = merge(custom);\n\t    custom.extraArgs = extraArgs;\n\t  }\n\t\n\t  var item = {\n\t    message: message,\n\t    err: err,\n\t    custom: custom,\n\t    timestamp: now(),\n\t    callback: callback,\n\t    uuid: uuid4()\n\t  };\n\t  if (custom && custom.level !== undefined) {\n\t    item.level = custom.level;\n\t    delete custom.level;\n\t  }\n\t  if (requestKeys && request) {\n\t    item.request = request;\n\t  }\n\t  if (lambdaContext) {\n\t    item.lambdaContext = lambdaContext;\n\t  }\n\t  item._originalArgs = args;\n\t  return item;\n\t}\n\t\n\tvar TELEMETRY_TYPES = ['log', 'network', 'dom', 'navigation', 'error', 'manual'];\n\tvar TELEMETRY_LEVELS = ['critical', 'error', 'warning', 'info', 'debug'];\n\t\n\tfunction arrayIncludes(arr, val) {\n\t  for (var k = 0; k < arr.length; ++k) {\n\t    if (arr[k] === val) {\n\t      return true;\n\t    }\n\t  }\n\t\n\t  return false;\n\t}\n\t\n\tfunction createTelemetryEvent(args) {\n\t  var type, metadata, level;\n\t  var arg;\n\t\n\t  for (var i = 0, l = args.length; i < l; ++i) {\n\t    arg = args[i];\n\t\n\t    var typ = typeName(arg);\n\t    switch (typ) {\n\t      case 'string':\n\t        if (arrayIncludes(TELEMETRY_TYPES, arg)) {\n\t          type = arg;\n\t        } else if (arrayIncludes(TELEMETRY_LEVELS, arg)) {\n\t          level = arg;\n\t        }\n\t        break;\n\t      case 'object':\n\t        metadata = arg;\n\t        break;\n\t      default:\n\t        break;\n\t    }\n\t  }\n\t  var event = {\n\t    type: type || 'manual',\n\t    metadata: metadata || {},\n\t    level: level\n\t  };\n\t\n\t  return event;\n\t}\n\t\n\t/*\n\t * get - given an obj/array and a keypath, return the value at that keypath or\n\t *       undefined if not possible.\n\t *\n\t * @param obj - an object or array\n\t * @param path - a string of keys separated by '.' such as 'plugin.jquery.0.message'\n\t *    which would correspond to 42 in `{plugin: {jquery: [{message: 42}]}}`\n\t */\n\tfunction get(obj, path) {\n\t  if (!obj) {\n\t    return undefined;\n\t  }\n\t  var keys = path.split('.');\n\t  var result = obj;\n\t  try {\n\t    for (var i = 0, len = keys.length; i < len; ++i) {\n\t      result = result[keys[i]];\n\t    }\n\t  } catch (e) {\n\t    result = undefined;\n\t  }\n\t  return result;\n\t}\n\t\n\tfunction set(obj, path, value) {\n\t  if (!obj) {\n\t    return;\n\t  }\n\t  var keys = path.split('.');\n\t  var len = keys.length;\n\t  if (len < 1) {\n\t    return;\n\t  }\n\t  if (len === 1) {\n\t    obj[keys[0]] = value;\n\t    return;\n\t  }\n\t  try {\n\t    var temp = obj[keys[0]] || {};\n\t    var replacement = temp;\n\t    for (var i = 1; i < len - 1; ++i) {\n\t      temp[keys[i]] = temp[keys[i]] || {};\n\t      temp = temp[keys[i]];\n\t    }\n\t    temp[keys[len-1]] = value;\n\t    obj[keys[0]] = replacement;\n\t  } catch (e) {\n\t    return;\n\t  }\n\t}\n\t\n\tfunction scrub(data, scrubFields) {\n\t  scrubFields = scrubFields || [];\n\t  var paramRes = _getScrubFieldRegexs(scrubFields);\n\t  var queryRes = _getScrubQueryParamRegexs(scrubFields);\n\t\n\t  function redactQueryParam(dummy0, paramPart) {\n\t    return paramPart + redact();\n\t  }\n\t\n\t  function paramScrubber(v) {\n\t    var i;\n\t    if (isType(v, 'string')) {\n\t      for (i = 0; i < queryRes.length; ++i) {\n\t        v = v.replace(queryRes[i], redactQueryParam);\n\t      }\n\t    }\n\t    return v;\n\t  }\n\t\n\t  function valScrubber(k, v) {\n\t    var i;\n\t    for (i = 0; i < paramRes.length; ++i) {\n\t      if (paramRes[i].test(k)) {\n\t        v = redact();\n\t        break;\n\t      }\n\t    }\n\t    return v;\n\t  }\n\t\n\t  function scrubber(k, v, seen) {\n\t    var tmpV = valScrubber(k, v);\n\t    if (tmpV === v) {\n\t      if (isType(v, 'object') || isType(v, 'array')) {\n\t        return traverse(v, scrubber, seen);\n\t      }\n\t      return paramScrubber(tmpV);\n\t    } else {\n\t      return tmpV;\n\t    }\n\t  }\n\t\n\t  return traverse(data, scrubber, []);\n\t}\n\t\n\tfunction _getScrubFieldRegexs(scrubFields) {\n\t  var ret = [];\n\t  var pat;\n\t  for (var i = 0; i < scrubFields.length; ++i) {\n\t    pat = '^\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?$';\n\t    ret.push(new RegExp(pat, 'i'));\n\t  }\n\t  return ret;\n\t}\n\t\n\t\n\tfunction _getScrubQueryParamRegexs(scrubFields) {\n\t  var ret = [];\n\t  var pat;\n\t  for (var i = 0; i < scrubFields.length; ++i) {\n\t    pat = '\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?';\n\t    ret.push(new RegExp('(' + pat + '=)([^&\\\\n]+)', 'igm'));\n\t  }\n\t  return ret;\n\t}\n\t\n\tfunction formatArgsAsString(args) {\n\t  var i, len, arg;\n\t  var result = [];\n\t  for (i = 0, len = args.length; i < len; ++i) {\n\t    arg = args[i];\n\t    switch (typeName(arg)) {\n\t      case 'object':\n\t        arg = stringify(arg);\n\t        arg = arg.error || arg.value;\n\t        if (arg.length > 500) {\n\t          arg = arg.substr(0, 497) + '...';\n\t        }\n\t        break;\n\t      case 'null':\n\t        arg = 'null';\n\t        break;\n\t      case 'undefined':\n\t        arg = 'undefined';\n\t        break;\n\t      case 'symbol':\n\t        arg = arg.toString();\n\t        break;\n\t    }\n\t    result.push(arg);\n\t  }\n\t  return result.join(' ');\n\t}\n\t\n\tfunction now() {\n\t  if (Date.now) {\n\t    return +Date.now();\n\t  }\n\t  return +new Date();\n\t}\n\t\n\tfunction filterIp(requestData, captureIp) {\n\t  if (!requestData || !requestData['user_ip'] || captureIp === true) {\n\t    return;\n\t  }\n\t  var newIp = requestData['user_ip'];\n\t  if (!captureIp) {\n\t    newIp = null;\n\t  } else {\n\t    try {\n\t      var parts;\n\t      if (newIp.indexOf('.') !== -1) {\n\t        parts = newIp.split('.');\n\t        parts.pop();\n\t        parts.push('0');\n\t        newIp = parts.join('.');\n\t      } else if (newIp.indexOf(':') !== -1) {\n\t        parts = newIp.split(':');\n\t        if (parts.length > 2) {\n\t          var beginning = parts.slice(0, 3);\n\t          var slashIdx = beginning[2].indexOf('/');\n\t          if (slashIdx !== -1) {\n\t            beginning[2] = beginning[2].substring(0, slashIdx);\n\t          }\n\t          var terminal = '0000:0000:0000:0000:0000';\n\t          newIp = beginning.concat(terminal).join(':');\n\t        }\n\t      } else {\n\t        newIp = null;\n\t      }\n\t    } catch (e) {\n\t      newIp = null;\n\t    }\n\t  }\n\t  requestData['user_ip'] = newIp;\n\t}\n\t\n\tfunction handleOptions(current, input, payload) {\n\t  var result = merge(current, input, payload);\n\t  if (!input || input.overwriteScrubFields) {\n\t    return result;\n\t  }\n\t  if (input.scrubFields) {\n\t    result.scrubFields = (current.scrubFields || []).concat(input.scrubFields);\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = {\n\t  addParamsAndAccessTokenToPath: addParamsAndAccessTokenToPath,\n\t  createItem: createItem,\n\t  createTelemetryEvent: createTelemetryEvent,\n\t  filterIp: filterIp,\n\t  formatArgsAsString: formatArgsAsString,\n\t  formatUrl: formatUrl,\n\t  get: get,\n\t  handleOptions: handleOptions,\n\t  isError: isError,\n\t  isFunction: isFunction,\n\t  isIterable: isIterable,\n\t  isNativeFunction: isNativeFunction,\n\t  isType: isType,\n\t  jsonParse: jsonParse,\n\t  LEVELS: LEVELS,\n\t  makeUnhandledStackInfo: makeUnhandledStackInfo,\n\t  merge: merge,\n\t  now: now,\n\t  redact: redact,\n\t  sanitizeUrl: sanitizeUrl,\n\t  scrub: scrub,\n\t  set: set,\n\t  stringify: stringify,\n\t  traverse: traverse,\n\t  typeName: typeName,\n\t  uuid4: uuid4\n\t};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t'use strict';\n\t\n\tvar hasOwn = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\t\n\tvar isPlainObject = function isPlainObject(obj) {\n\t\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\t\treturn false;\n\t\t}\n\t\n\t\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\t\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t\t// Not own constructor property must be Object\n\t\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\t// Own properties are enumerated firstly, so to speed up,\n\t\t// if last one is own, then all properties are own.\n\t\tvar key;\n\t\tfor (key in obj) {/**/}\n\t\n\t\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n\t};\n\t\n\tfunction merge() {\n\t  var i, src, copy, clone, name,\n\t      result = {},\n\t     current = null,\n\t      length = arguments.length;\n\t\n\t  for (i=0; i < length; i++) {\n\t    current = arguments[i];\n\t    if (current == null) {\n\t      continue;\n\t    }\n\t\n\t    for (name in current) {\n\t      src = result[name];\n\t      copy = current[name];\n\t      if (result !== copy) {\n\t        if (copy && isPlainObject(copy)) {\n\t          clone = src && isPlainObject(src) ? src : {};\n\t          result[name] = merge(clone, copy);\n\t        } else if (typeof copy !== 'undefined') {\n\t          result[name] = copy;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = merge;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\t//  json3.js\n\t//  2017-02-21\n\t//  Public Domain.\n\t//  NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n\t//  See http://www.JSON.org/js.html\n\t//  This code should be minified before deployment.\n\t//  See http://javascript.crockford.com/jsmin.html\n\t\n\t//  USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\n\t//  NOT CONTROL.\n\t\n\t//  This file creates a global JSON object containing two methods: stringify\n\t//  and parse. This file provides the ES5 JSON capability to ES3 systems.\n\t//  If a project might run on IE8 or earlier, then this file should be included.\n\t//  This file does nothing on ES5 systems.\n\t\n\t//      JSON.stringify(value, replacer, space)\n\t//          value       any JavaScript value, usually an object or array.\n\t//          replacer    an optional parameter that determines how object\n\t//                      values are stringified for objects. It can be a\n\t//                      function or an array of strings.\n\t//          space       an optional parameter that specifies the indentation\n\t//                      of nested structures. If it is omitted, the text will\n\t//                      be packed without extra whitespace. If it is a number,\n\t//                      it will specify the number of spaces to indent at each\n\t//                      level. If it is a string (such as \"\\t\" or \"&nbsp;\"),\n\t//                      it contains the characters used to indent at each level.\n\t//          This method produces a JSON text from a JavaScript value.\n\t//          When an object value is found, if the object contains a toJSON\n\t//          method, its toJSON method will be called and the result will be\n\t//          stringified. A toJSON method does not serialize: it returns the\n\t//          value represented by the name/value pair that should be serialized,\n\t//          or undefined if nothing should be serialized. The toJSON method\n\t//          will be passed the key associated with the value, and this will be\n\t//          bound to the value.\n\t\n\t//          For example, this would serialize Dates as ISO strings.\n\t\n\t//              Date.prototype.toJSON = function (key) {\n\t//                  function f(n) {\n\t//                      // Format integers to have at least two digits.\n\t//                      return (n < 10)\n\t//                          ? \"0\" + n\n\t//                          : n;\n\t//                  }\n\t//                  return this.getUTCFullYear()   + \"-\" +\n\t//                       f(this.getUTCMonth() + 1) + \"-\" +\n\t//                       f(this.getUTCDate())      + \"T\" +\n\t//                       f(this.getUTCHours())     + \":\" +\n\t//                       f(this.getUTCMinutes())   + \":\" +\n\t//                       f(this.getUTCSeconds())   + \"Z\";\n\t//              };\n\t\n\t//          You can provide an optional replacer method. It will be passed the\n\t//          key and value of each member, with this bound to the containing\n\t//          object. The value that is returned from your method will be\n\t//          serialized. If your method returns undefined, then the member will\n\t//          be excluded from the serialization.\n\t\n\t//          If the replacer parameter is an array of strings, then it will be\n\t//          used to select the members to be serialized. It filters the results\n\t//          such that only members with keys listed in the replacer array are\n\t//          stringified.\n\t\n\t//          Values that do not have JSON representations, such as undefined or\n\t//          functions, will not be serialized. Such values in objects will be\n\t//          dropped; in arrays they will be replaced with null. You can use\n\t//          a replacer function to replace those with JSON values.\n\t\n\t//          JSON.stringify(undefined) returns undefined.\n\t\n\t//          The optional space parameter produces a stringification of the\n\t//          value that is filled with line breaks and indentation to make it\n\t//          easier to read.\n\t\n\t//          If the space parameter is a non-empty string, then that string will\n\t//          be used for indentation. If the space parameter is a number, then\n\t//          the indentation will be that many spaces.\n\t\n\t//          Example:\n\t\n\t//          text = JSON.stringify([\"e\", {pluribus: \"unum\"}]);\n\t//          // text is '[\"e\",{\"pluribus\":\"unum\"}]'\n\t\n\t//          text = JSON.stringify([\"e\", {pluribus: \"unum\"}], null, \"\\t\");\n\t//          // text is '[\\n\\t\"e\",\\n\\t{\\n\\t\\t\"pluribus\": \"unum\"\\n\\t}\\n]'\n\t\n\t//          text = JSON.stringify([new Date()], function (key, value) {\n\t//              return this[key] instanceof Date\n\t//                  ? \"Date(\" + this[key] + \")\"\n\t//                  : value;\n\t//          });\n\t//          // text is '[\"Date(---current time---)\"]'\n\t\n\t//      JSON.parse(text, reviver)\n\t//          This method parses a JSON text to produce an object or array.\n\t//          It can throw a SyntaxError exception.\n\t//          This has been modified to use JSON-js/json_parse_state.js as the\n\t//          parser instead of the one built around eval found in JSON-js/json2.js\n\t\n\t//          The optional reviver parameter is a function that can filter and\n\t//          transform the results. It receives each of the keys and values,\n\t//          and its return value is used instead of the original value.\n\t//          If it returns what it received, then the structure is not modified.\n\t//          If it returns undefined then the member is deleted.\n\t\n\t//          Example:\n\t\n\t//          // Parse the text. Values that look like ISO date strings will\n\t//          // be converted to Date objects.\n\t\n\t//          myData = JSON.parse(text, function (key, value) {\n\t//              var a;\n\t//              if (typeof value === \"string\") {\n\t//                  a =\n\t//   /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\n\t//                  if (a) {\n\t//                      return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\n\t//                          +a[5], +a[6]));\n\t//                  }\n\t//              }\n\t//              return value;\n\t//          });\n\t\n\t//          myData = JSON.parse('[\"Date(09/09/2001)\"]', function (key, value) {\n\t//              var d;\n\t//              if (typeof value === \"string\" &&\n\t//                      value.slice(0, 5) === \"Date(\" &&\n\t//                      value.slice(-1) === \")\") {\n\t//                  d = new Date(value.slice(5, -1));\n\t//                  if (d) {\n\t//                      return d;\n\t//                  }\n\t//              }\n\t//              return value;\n\t//          });\n\t\n\t//  This is a reference implementation. You are free to copy, modify, or\n\t//  redistribute.\n\t\n\t/*jslint\n\t  for, this\n\t  */\n\t\n\t/*property\n\t  JSON, apply, call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,\n\t  getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,\n\t  lastIndex, length, parse, prototype, push, replace, slice, stringify,\n\t  test, toJSON, toString, valueOf\n\t  */\n\t\n\tvar setupCustomJSON = function(JSON) {\n\t\n\t  var rx_one = /^[\\],:{}\\s]*$/;\n\t  var rx_two = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\n\t  var rx_three = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\n\t  var rx_four = /(?:^|:|,)(?:\\s*\\[)+/g;\n\t  var rx_escapable = /[\\\\\"\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n\t  var rx_dangerous = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n\t\n\t  function f(n) {\n\t    // Format integers to have at least two digits.\n\t    return n < 10\n\t      ? \"0\" + n\n\t      : n;\n\t  }\n\t\n\t  function this_value() {\n\t    return this.valueOf();\n\t  }\n\t\n\t  if (typeof Date.prototype.toJSON !== \"function\") {\n\t\n\t    Date.prototype.toJSON = function () {\n\t\n\t      return isFinite(this.valueOf())\n\t        ? this.getUTCFullYear() + \"-\" +\n\t        f(this.getUTCMonth() + 1) + \"-\" +\n\t        f(this.getUTCDate()) + \"T\" +\n\t        f(this.getUTCHours()) + \":\" +\n\t        f(this.getUTCMinutes()) + \":\" +\n\t        f(this.getUTCSeconds()) + \"Z\"\n\t        : null;\n\t    };\n\t\n\t    Boolean.prototype.toJSON = this_value;\n\t    Number.prototype.toJSON = this_value;\n\t    String.prototype.toJSON = this_value;\n\t  }\n\t\n\t  var gap;\n\t  var indent;\n\t  var meta;\n\t  var rep;\n\t\n\t\n\t  function quote(string) {\n\t\n\t    // If the string contains no control characters, no quote characters, and no\n\t    // backslash characters, then we can safely slap some quotes around it.\n\t    // Otherwise we must also replace the offending characters with safe escape\n\t    // sequences.\n\t\n\t    rx_escapable.lastIndex = 0;\n\t    return rx_escapable.test(string)\n\t      ? \"\\\"\" + string.replace(rx_escapable, function (a) {\n\t        var c = meta[a];\n\t        return typeof c === \"string\"\n\t          ? c\n\t          : \"\\\\u\" + (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);\n\t      }) + \"\\\"\"\n\t    : \"\\\"\" + string + \"\\\"\";\n\t  }\n\t\n\t\n\t  function str(key, holder) {\n\t\n\t    // Produce a string from holder[key].\n\t\n\t    var i;          // The loop counter.\n\t    var k;          // The member key.\n\t    var v;          // The member value.\n\t    var length;\n\t    var mind = gap;\n\t    var partial;\n\t    var value = holder[key];\n\t\n\t    // If the value has a toJSON method, call it to obtain a replacement value.\n\t\n\t    if (value && typeof value === \"object\" &&\n\t        typeof value.toJSON === \"function\") {\n\t      value = value.toJSON(key);\n\t    }\n\t\n\t    // If we were called with a replacer function, then call the replacer to\n\t    // obtain a replacement value.\n\t\n\t    if (typeof rep === \"function\") {\n\t      value = rep.call(holder, key, value);\n\t    }\n\t\n\t    // What happens next depends on the value's type.\n\t\n\t    switch (typeof value) {\n\t      case \"string\":\n\t        return quote(value);\n\t\n\t      case \"number\":\n\t\n\t        // JSON numbers must be finite. Encode non-finite numbers as null.\n\t\n\t        return isFinite(value)\n\t          ? String(value)\n\t          : \"null\";\n\t\n\t      case \"boolean\":\n\t      case \"null\":\n\t\n\t        // If the value is a boolean or null, convert it to a string. Note:\n\t        // typeof null does not produce \"null\". The case is included here in\n\t        // the remote chance that this gets fixed someday.\n\t\n\t        return String(value);\n\t\n\t        // If the type is \"object\", we might be dealing with an object or an array or\n\t        // null.\n\t\n\t      case \"object\":\n\t\n\t        // Due to a specification blunder in ECMAScript, typeof null is \"object\",\n\t        // so watch out for that case.\n\t\n\t        if (!value) {\n\t          return \"null\";\n\t        }\n\t\n\t        // Make an array to hold the partial results of stringifying this object value.\n\t\n\t        gap += indent;\n\t        partial = [];\n\t\n\t        // Is the value an array?\n\t\n\t        if (Object.prototype.toString.apply(value) === \"[object Array]\") {\n\t\n\t          // The value is an array. Stringify every element. Use null as a placeholder\n\t          // for non-JSON values.\n\t\n\t          length = value.length;\n\t          for (i = 0; i < length; i += 1) {\n\t            partial[i] = str(i, value) || \"null\";\n\t          }\n\t\n\t          // Join all of the elements together, separated with commas, and wrap them in\n\t          // brackets.\n\t\n\t          v = partial.length === 0\n\t            ? \"[]\"\n\t            : gap\n\t            ? \"[\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"]\"\n\t            : \"[\" + partial.join(\",\") + \"]\";\n\t          gap = mind;\n\t          return v;\n\t        }\n\t\n\t        // If the replacer is an array, use it to select the members to be stringified.\n\t\n\t        if (rep && typeof rep === \"object\") {\n\t          length = rep.length;\n\t          for (i = 0; i < length; i += 1) {\n\t            if (typeof rep[i] === \"string\") {\n\t              k = rep[i];\n\t              v = str(k, value);\n\t              if (v) {\n\t                partial.push(quote(k) + (\n\t                      gap\n\t                      ? \": \"\n\t                      : \":\"\n\t                      ) + v);\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t\n\t          // Otherwise, iterate through all of the keys in the object.\n\t\n\t          for (k in value) {\n\t            if (Object.prototype.hasOwnProperty.call(value, k)) {\n\t              v = str(k, value);\n\t              if (v) {\n\t                partial.push(quote(k) + (\n\t                      gap\n\t                      ? \": \"\n\t                      : \":\"\n\t                      ) + v);\n\t              }\n\t            }\n\t          }\n\t        }\n\t\n\t        // Join all of the member texts together, separated with commas,\n\t        // and wrap them in braces.\n\t\n\t        v = partial.length === 0\n\t          ? \"{}\"\n\t          : gap\n\t          ? \"{\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"}\"\n\t          : \"{\" + partial.join(\",\") + \"}\";\n\t        gap = mind;\n\t        return v;\n\t    }\n\t  }\n\t\n\t  // If the JSON object does not yet have a stringify method, give it one.\n\t\n\t  if (typeof JSON.stringify !== \"function\") {\n\t    meta = {    // table of character substitutions\n\t      \"\\b\": \"\\\\b\",\n\t      \"\\t\": \"\\\\t\",\n\t      \"\\n\": \"\\\\n\",\n\t      \"\\f\": \"\\\\f\",\n\t      \"\\r\": \"\\\\r\",\n\t      \"\\\"\": \"\\\\\\\"\",\n\t      \"\\\\\": \"\\\\\\\\\"\n\t    };\n\t    JSON.stringify = function (value, replacer, space) {\n\t\n\t      // The stringify method takes a value and an optional replacer, and an optional\n\t      // space parameter, and returns a JSON text. The replacer can be a function\n\t      // that can replace values, or an array of strings that will select the keys.\n\t      // A default replacer method can be provided. Use of the space parameter can\n\t      // produce text that is more easily readable.\n\t\n\t      var i;\n\t      gap = \"\";\n\t      indent = \"\";\n\t\n\t      // If the space parameter is a number, make an indent string containing that\n\t      // many spaces.\n\t\n\t      if (typeof space === \"number\") {\n\t        for (i = 0; i < space; i += 1) {\n\t          indent += \" \";\n\t        }\n\t\n\t        // If the space parameter is a string, it will be used as the indent string.\n\t\n\t      } else if (typeof space === \"string\") {\n\t        indent = space;\n\t      }\n\t\n\t      // If there is a replacer, it must be a function or an array.\n\t      // Otherwise, throw an error.\n\t\n\t      rep = replacer;\n\t      if (replacer && typeof replacer !== \"function\" &&\n\t          (typeof replacer !== \"object\" ||\n\t           typeof replacer.length !== \"number\")) {\n\t        throw new Error(\"JSON.stringify\");\n\t      }\n\t\n\t      // Make a fake root object containing our value under the key of \"\".\n\t      // Return the result of stringifying the value.\n\t\n\t      return str(\"\", {\"\": value});\n\t    };\n\t  }\n\t\n\t\n\t  // If the JSON object does not yet have a parse method, give it one.\n\t\n\t  if (typeof JSON.parse !== \"function\") {\n\t    JSON.parse = (function () {\n\t\n\t      // This function creates a JSON parse function that uses a state machine rather\n\t      // than the dangerous eval function to parse a JSON text.\n\t\n\t      var state;      // The state of the parser, one of\n\t      // 'go'         The starting state\n\t      // 'ok'         The final, accepting state\n\t      // 'firstokey'  Ready for the first key of the object or\n\t      //              the closing of an empty object\n\t      // 'okey'       Ready for the next key of the object\n\t      // 'colon'      Ready for the colon\n\t      // 'ovalue'     Ready for the value half of a key/value pair\n\t      // 'ocomma'     Ready for a comma or closing }\n\t      // 'firstavalue' Ready for the first value of an array or\n\t      //              an empty array\n\t      // 'avalue'     Ready for the next value of an array\n\t      // 'acomma'     Ready for a comma or closing ]\n\t      var stack;      // The stack, for controlling nesting.\n\t      var container;  // The current container object or array\n\t      var key;        // The current key\n\t      var value;      // The current value\n\t      var escapes = { // Escapement translation table\n\t        \"\\\\\": \"\\\\\",\n\t        \"\\\"\": \"\\\"\",\n\t        \"/\": \"/\",\n\t        \"t\": \"\\t\",\n\t        \"n\": \"\\n\",\n\t        \"r\": \"\\r\",\n\t        \"f\": \"\\f\",\n\t        \"b\": \"\\b\"\n\t      };\n\t      var string = {   // The actions for string tokens\n\t        go: function () {\n\t          state = \"ok\";\n\t        },\n\t        firstokey: function () {\n\t          key = value;\n\t          state = \"colon\";\n\t        },\n\t        okey: function () {\n\t          key = value;\n\t          state = \"colon\";\n\t        },\n\t        ovalue: function () {\n\t          state = \"ocomma\";\n\t        },\n\t        firstavalue: function () {\n\t          state = \"acomma\";\n\t        },\n\t        avalue: function () {\n\t          state = \"acomma\";\n\t        }\n\t      };\n\t      var number = {   // The actions for number tokens\n\t        go: function () {\n\t          state = \"ok\";\n\t        },\n\t        ovalue: function () {\n\t          state = \"ocomma\";\n\t        },\n\t        firstavalue: function () {\n\t          state = \"acomma\";\n\t        },\n\t        avalue: function () {\n\t          state = \"acomma\";\n\t        }\n\t      };\n\t      var action = {\n\t\n\t        // The action table describes the behavior of the machine. It contains an\n\t        // object for each token. Each object contains a method that is called when\n\t        // a token is matched in a state. An object will lack a method for illegal\n\t        // states.\n\t\n\t        \"{\": {\n\t          go: function () {\n\t            stack.push({state: \"ok\"});\n\t            container = {};\n\t            state = \"firstokey\";\n\t          },\n\t          ovalue: function () {\n\t            stack.push({container: container, state: \"ocomma\", key: key});\n\t            container = {};\n\t            state = \"firstokey\";\n\t          },\n\t          firstavalue: function () {\n\t            stack.push({container: container, state: \"acomma\"});\n\t            container = {};\n\t            state = \"firstokey\";\n\t          },\n\t          avalue: function () {\n\t            stack.push({container: container, state: \"acomma\"});\n\t            container = {};\n\t            state = \"firstokey\";\n\t          }\n\t        },\n\t        \"}\": {\n\t          firstokey: function () {\n\t            var pop = stack.pop();\n\t            value = container;\n\t            container = pop.container;\n\t            key = pop.key;\n\t            state = pop.state;\n\t          },\n\t          ocomma: function () {\n\t            var pop = stack.pop();\n\t            container[key] = value;\n\t            value = container;\n\t            container = pop.container;\n\t            key = pop.key;\n\t            state = pop.state;\n\t          }\n\t        },\n\t        \"[\": {\n\t          go: function () {\n\t            stack.push({state: \"ok\"});\n\t            container = [];\n\t            state = \"firstavalue\";\n\t          },\n\t          ovalue: function () {\n\t            stack.push({container: container, state: \"ocomma\", key: key});\n\t            container = [];\n\t            state = \"firstavalue\";\n\t          },\n\t          firstavalue: function () {\n\t            stack.push({container: container, state: \"acomma\"});\n\t            container = [];\n\t            state = \"firstavalue\";\n\t          },\n\t          avalue: function () {\n\t            stack.push({container: container, state: \"acomma\"});\n\t            container = [];\n\t            state = \"firstavalue\";\n\t          }\n\t        },\n\t        \"]\": {\n\t          firstavalue: function () {\n\t            var pop = stack.pop();\n\t            value = container;\n\t            container = pop.container;\n\t            key = pop.key;\n\t            state = pop.state;\n\t          },\n\t          acomma: function () {\n\t            var pop = stack.pop();\n\t            container.push(value);\n\t            value = container;\n\t            container = pop.container;\n\t            key = pop.key;\n\t            state = pop.state;\n\t          }\n\t        },\n\t        \":\": {\n\t          colon: function () {\n\t            if (Object.hasOwnProperty.call(container, key)) {\n\t              throw new SyntaxError(\"Duplicate key '\" + key + \"\\\"\");\n\t            }\n\t            state = \"ovalue\";\n\t          }\n\t        },\n\t        \",\": {\n\t          ocomma: function () {\n\t            container[key] = value;\n\t            state = \"okey\";\n\t          },\n\t          acomma: function () {\n\t            container.push(value);\n\t            state = \"avalue\";\n\t          }\n\t        },\n\t        \"true\": {\n\t          go: function () {\n\t            value = true;\n\t            state = \"ok\";\n\t          },\n\t          ovalue: function () {\n\t            value = true;\n\t            state = \"ocomma\";\n\t          },\n\t          firstavalue: function () {\n\t            value = true;\n\t            state = \"acomma\";\n\t          },\n\t          avalue: function () {\n\t            value = true;\n\t            state = \"acomma\";\n\t          }\n\t        },\n\t        \"false\": {\n\t          go: function () {\n\t            value = false;\n\t            state = \"ok\";\n\t          },\n\t          ovalue: function () {\n\t            value = false;\n\t            state = \"ocomma\";\n\t          },\n\t          firstavalue: function () {\n\t            value = false;\n\t            state = \"acomma\";\n\t          },\n\t          avalue: function () {\n\t            value = false;\n\t            state = \"acomma\";\n\t          }\n\t        },\n\t        \"null\": {\n\t          go: function () {\n\t            value = null;\n\t            state = \"ok\";\n\t          },\n\t          ovalue: function () {\n\t            value = null;\n\t            state = \"ocomma\";\n\t          },\n\t          firstavalue: function () {\n\t            value = null;\n\t            state = \"acomma\";\n\t          },\n\t          avalue: function () {\n\t            value = null;\n\t            state = \"acomma\";\n\t          }\n\t        }\n\t      };\n\t\n\t      function debackslashify(text) {\n\t\n\t        // Remove and replace any backslash escapement.\n\t\n\t        return text.replace(/\\\\(?:u(.{4})|([^u]))/g, function (ignore, b, c) {\n\t          return b\n\t            ? String.fromCharCode(parseInt(b, 16))\n\t            : escapes[c];\n\t        });\n\t      }\n\t\n\t      return function (source, reviver) {\n\t\n\t        // A regular expression is used to extract tokens from the JSON text.\n\t        // The extraction process is cautious.\n\t\n\t        var result;\n\t        var tx = /^[\\u0020\\t\\n\\r]*(?:([,:\\[\\]{}]|true|false|null)|(-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)|\"((?:[^\\r\\n\\t\\\\\\\"]|\\\\(?:[\"\\\\\\/trnfb]|u[0-9a-fA-F]{4}))*)\")/;\n\t\n\t        // Set the starting state.\n\t\n\t        state = \"go\";\n\t\n\t        // The stack records the container, key, and state for each object or array\n\t        // that contains another object or array while processing nested structures.\n\t\n\t        stack = [];\n\t\n\t        // If any error occurs, we will catch it and ultimately throw a syntax error.\n\t\n\t        try {\n\t\n\t          // For each token...\n\t\n\t          while (true) {\n\t            result = tx.exec(source);\n\t            if (!result) {\n\t              break;\n\t            }\n\t\n\t            // result is the result array from matching the tokenizing regular expression.\n\t            //  result[0] contains everything that matched, including any initial whitespace.\n\t            //  result[1] contains any punctuation that was matched, or true, false, or null.\n\t            //  result[2] contains a matched number, still in string form.\n\t            //  result[3] contains a matched string, without quotes but with escapement.\n\t\n\t            if (result[1]) {\n\t\n\t              // Token: Execute the action for this state and token.\n\t\n\t              action[result[1]][state]();\n\t\n\t            } else if (result[2]) {\n\t\n\t              // Number token: Convert the number string into a number value and execute\n\t              // the action for this state and number.\n\t\n\t              value = +result[2];\n\t              number[state]();\n\t            } else {\n\t\n\t              // String token: Replace the escapement sequences and execute the action for\n\t              // this state and string.\n\t\n\t              value = debackslashify(result[3]);\n\t              string[state]();\n\t            }\n\t\n\t            // Remove the token from the string. The loop will continue as long as there\n\t            // are tokens. This is a slow process, but it allows the use of ^ matching,\n\t            // which assures that no illegal tokens slip through.\n\t\n\t            source = source.slice(result[0].length);\n\t          }\n\t\n\t          // If we find a state/token combination that is illegal, then the action will\n\t          // cause an error. We handle the error by simply changing the state.\n\t\n\t        } catch (e) {\n\t          state = e;\n\t        }\n\t\n\t        // The parsing is finished. If we are not in the final \"ok\" state, or if the\n\t        // remaining source contains anything except whitespace, then we did not have\n\t        //a well-formed JSON text.\n\t\n\t        if (state !== \"ok\" || (/[^\\u0020\\t\\n\\r]/.test(source))) {\n\t          throw (state instanceof SyntaxError)\n\t            ? state\n\t            : new SyntaxError(\"JSON\");\n\t        }\n\t\n\t        // If there is a reviver function, we recursively walk the new structure,\n\t        // passing each name/value pair to the reviver function for possible\n\t        // transformation, starting with a temporary root object that holds the current\n\t        // value in an empty key. If there is not a reviver function, we simply return\n\t        // that value.\n\t\n\t        return (typeof reviver === \"function\")\n\t          ? (function walk(holder, key) {\n\t            var k;\n\t            var v;\n\t            var val = holder[key];\n\t            if (val && typeof val === \"object\") {\n\t              for (k in value) {\n\t                if (Object.prototype.hasOwnProperty.call(val, k)) {\n\t                  v = walk(val, k);\n\t                  if (v !== undefined) {\n\t                    val[k] = v;\n\t                  } else {\n\t                    delete val[k];\n\t                  }\n\t                }\n\t              }\n\t            }\n\t            return reviver.call(holder, key, val);\n\t          }({\"\": value}, \"\"))\n\t        : value;\n\t      };\n\t    }());\n\t  }\n\t}\n\t\n\tmodule.exports = setupCustomJSON;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(5);\n\t\n\t/*\n\t * Queue - an object which handles which handles a queue of items to be sent to Rollbar.\n\t *   This object handles rate limiting via a passed in rate limiter, retries based on connection\n\t *   errors, and filtering of items based on a set of configurable predicates. The communication to\n\t *   the backend is performed via a given API object.\n\t *\n\t * @param rateLimiter - An object which conforms to the interface\n\t *    rateLimiter.shouldSend(item) -> bool\n\t * @param api - An object which conforms to the interface\n\t *    api.postItem(payload, function(err, response))\n\t * @param logger - An object used to log verbose messages if desired\n\t * @param options - see Queue.prototype.configure\n\t */\n\tfunction Queue(rateLimiter, api, logger, options) {\n\t  this.rateLimiter = rateLimiter;\n\t  this.api = api;\n\t  this.logger = logger;\n\t  this.options = options;\n\t  this.predicates = [];\n\t  this.pendingItems = [];\n\t  this.pendingRequests = [];\n\t  this.retryQueue = [];\n\t  this.retryHandle = null;\n\t  this.waitCallback = null;\n\t  this.waitIntervalID = null;\n\t}\n\t\n\t/*\n\t * configure - updates the options this queue uses\n\t *\n\t * @param options\n\t */\n\tQueue.prototype.configure = function(options) {\n\t  this.api && this.api.configure(options);\n\t  var oldOptions = this.options;\n\t  this.options = _.merge(oldOptions, options);\n\t  return this;\n\t};\n\t\n\t/*\n\t * addPredicate - adds a predicate to the end of the list of predicates for this queue\n\t *\n\t * @param predicate - function(item, options) -> (bool|{err: Error})\n\t *  Returning true means that this predicate passes and the item is okay to go on the queue\n\t *  Returning false means do not add the item to the queue, but it is not an error\n\t *  Returning {err: Error} means do not add the item to the queue, and the given error explains why\n\t *  Returning {err: undefined} is equivalent to returning true but don't do that\n\t */\n\tQueue.prototype.addPredicate = function(predicate) {\n\t  if (_.isFunction(predicate)) {\n\t    this.predicates.push(predicate);\n\t  }\n\t  return this;\n\t};\n\t\n\tQueue.prototype.addPendingItem = function(item) {\n\t  this.pendingItems.push(item);\n\t};\n\t\n\tQueue.prototype.removePendingItem = function(item) {\n\t  var idx = this.pendingItems.indexOf(item);\n\t  if (idx !== -1) {\n\t    this.pendingItems.splice(idx, 1);\n\t  }\n\t};\n\t\n\t/*\n\t * addItem - Send an item to the Rollbar API if all of the predicates are satisfied\n\t *\n\t * @param item - The payload to send to the backend\n\t * @param callback - function(error, repsonse) which will be called with the response from the API\n\t *  in the case of a success, otherwise response will be null and error will have a value. If both\n\t *  error and response are null then the item was stopped by a predicate which did not consider this\n\t *  to be an error condition, but nonetheless did not send the item to the API.\n\t *  @param originalError - The original error before any transformations that is to be logged if any\n\t */\n\tQueue.prototype.addItem = function(item, callback, originalError, originalItem) {\n\t  if (!callback || !_.isFunction(callback)) {\n\t    callback = function() { return; };\n\t  }\n\t  var predicateResult = this._applyPredicates(item);\n\t  if (predicateResult.stop) {\n\t    this.removePendingItem(originalItem);\n\t    callback(predicateResult.err);\n\t    return;\n\t  }\n\t  this._maybeLog(item, originalError);\n\t  this.removePendingItem(originalItem);\n\t  this.pendingRequests.push(item);\n\t  try {\n\t    this._makeApiRequest(item, function(err, resp) {\n\t      this._dequeuePendingRequest(item);\n\t      callback(err, resp);\n\t    }.bind(this));\n\t  } catch (e) {\n\t    this._dequeuePendingRequest(item);\n\t    callback(e);\n\t  }\n\t};\n\t\n\t/*\n\t * wait - Stop any further errors from being added to the queue, and get called back when all items\n\t *   currently processing have finished sending to the backend.\n\t *\n\t * @param callback - function() called when all pending items have been sent\n\t */\n\tQueue.prototype.wait = function(callback) {\n\t  if (!_.isFunction(callback)) {\n\t    return;\n\t  }\n\t  this.waitCallback = callback;\n\t  if (this._maybeCallWait()) {\n\t    return;\n\t  }\n\t  if (this.waitIntervalID) {\n\t    this.waitIntervalID = clearInterval(this.waitIntervalID);\n\t  }\n\t  this.waitIntervalID = setInterval(function() {\n\t    this._maybeCallWait();\n\t  }.bind(this), 500);\n\t};\n\t\n\t/* _applyPredicates - Sequentially applies the predicates that have been added to the queue to the\n\t *   given item with the currently configured options.\n\t *\n\t * @param item - An item in the queue\n\t * @returns {stop: bool, err: (Error|null)} - stop being true means do not add item to the queue,\n\t *   the error value should be passed up to a callbak if we are stopping.\n\t */\n\tQueue.prototype._applyPredicates = function(item) {\n\t  var p = null;\n\t  for (var i = 0, len = this.predicates.length; i < len; i++) {\n\t    p = this.predicates[i](item, this.options);\n\t    if (!p || p.err !== undefined) {\n\t      return {stop: true, err: p.err};\n\t    }\n\t  }\n\t  return {stop: false, err: null};\n\t};\n\t\n\t/*\n\t * _makeApiRequest - Send an item to Rollbar, callback when done, if there is an error make an\n\t *   effort to retry if we are configured to do so.\n\t *\n\t * @param item - an item ready to send to the backend\n\t * @param callback - function(err, response)\n\t */\n\tQueue.prototype._makeApiRequest = function(item, callback) {\n\t  var rateLimitResponse = this.rateLimiter.shouldSend(item);\n\t  if (rateLimitResponse.shouldSend) {\n\t    this.api.postItem(item, function(err, resp) {\n\t      if (err) {\n\t        this._maybeRetry(err, item, callback);\n\t      } else {\n\t        callback(err, resp);\n\t      }\n\t    }.bind(this));\n\t  } else if (rateLimitResponse.error) {\n\t    callback(rateLimitResponse.error);\n\t  } else {\n\t    this.api.postItem(rateLimitResponse.payload, callback);\n\t  }\n\t};\n\t\n\t// These are errors basically mean there is no internet connection\n\tvar RETRIABLE_ERRORS = ['ECONNRESET', 'ENOTFOUND', 'ESOCKETTIMEDOUT', 'ETIMEDOUT', 'ECONNREFUSED', 'EHOSTUNREACH', 'EPIPE', 'EAI_AGAIN'];\n\t\n\t/*\n\t * _maybeRetry - Given the error returned by the API, decide if we should retry or just callback\n\t *   with the error.\n\t *\n\t * @param err - an error returned by the API transport\n\t * @param item - the item that was trying to be sent when this error occured\n\t * @param callback - function(err, response)\n\t */\n\tQueue.prototype._maybeRetry = function(err, item, callback) {\n\t  var shouldRetry = false;\n\t  if (this.options.retryInterval) {\n\t    for (var i = 0, len = RETRIABLE_ERRORS.length; i < len; i++) {\n\t      if (err.code === RETRIABLE_ERRORS[i]) {\n\t        shouldRetry = true;\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  if (shouldRetry) {\n\t    this._retryApiRequest(item, callback);\n\t  } else {\n\t    callback(err);\n\t  }\n\t};\n\t\n\t/*\n\t * _retryApiRequest - Add an item and a callback to a queue and possibly start a timer to process\n\t *   that queue based on the retryInterval in the options for this queue.\n\t *\n\t * @param item - an item that failed to send due to an error we deem retriable\n\t * @param callback - function(err, response)\n\t */\n\tQueue.prototype._retryApiRequest = function(item, callback) {\n\t  this.retryQueue.push({item: item, callback: callback});\n\t\n\t  if (!this.retryHandle) {\n\t    this.retryHandle = setInterval(function() {\n\t      while (this.retryQueue.length) {\n\t        var retryObject = this.retryQueue.shift();\n\t        this._makeApiRequest(retryObject.item, retryObject.callback);\n\t      }\n\t    }.bind(this), this.options.retryInterval);\n\t  }\n\t};\n\t\n\t/*\n\t * _dequeuePendingRequest - Removes the item from the pending request queue, this queue is used to\n\t *   enable to functionality of providing a callback that clients can pass to `wait` to be notified\n\t *   when the pending request queue has been emptied. This must be called when the API finishes\n\t *   processing this item. If a `wait` callback is configured, it is called by this function.\n\t *\n\t * @param item - the item previously added to the pending request queue\n\t */\n\tQueue.prototype._dequeuePendingRequest = function(item) {\n\t  var idx = this.pendingRequests.indexOf(item);\n\t  if (idx !== -1) {\n\t    this.pendingRequests.splice(idx, 1);\n\t    this._maybeCallWait();\n\t  }\n\t};\n\t\n\tQueue.prototype._maybeLog = function(data, originalError) {\n\t  if (this.logger && this.options.verbose) {\n\t    var message = originalError;\n\t    message = message || _.get(data, 'body.trace.exception.message');\n\t    message = message || _.get(data, 'body.trace_chain.0.exception.message');\n\t    if (message) {\n\t      this.logger.error(message);\n\t      return;\n\t    }\n\t    message = _.get(data, 'body.message.body');\n\t    if (message) {\n\t      this.logger.log(message);\n\t    }\n\t  }\n\t};\n\t\n\tQueue.prototype._maybeCallWait = function() {\n\t  if (_.isFunction(this.waitCallback) && this.pendingItems.length === 0 && this.pendingRequests.length === 0) {\n\t    if (this.waitIntervalID) {\n\t      this.waitIntervalID = clearInterval(this.waitIntervalID);\n\t    }\n\t    this.waitCallback();\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\tmodule.exports = Queue;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(5);\n\t\n\t/*\n\t * Notifier - the internal object responsible for delegating between the client exposed API, the\n\t * chain of transforms necessary to turn an item into something that can be sent to Rollbar, and the\n\t * queue which handles the communcation with the Rollbar API servers.\n\t *\n\t * @param queue - an object that conforms to the interface: addItem(item, callback)\n\t * @param options - an object representing the options to be set for this notifier, this should have\n\t * any defaults already set by the caller\n\t */\n\tfunction Notifier(queue, options) {\n\t  this.queue = queue;\n\t  this.options = options;\n\t  this.transforms = [];\n\t}\n\t\n\t/*\n\t * configure - updates the options for this notifier with the passed in object\n\t *\n\t * @param options - an object which gets merged with the current options set on this notifier\n\t * @returns this\n\t */\n\tNotifier.prototype.configure = function(options) {\n\t  this.queue && this.queue.configure(options);\n\t  var oldOptions = this.options;\n\t  this.options = _.merge(oldOptions, options);\n\t  return this;\n\t};\n\t\n\t/*\n\t * addTransform - adds a transform onto the end of the queue of transforms for this notifier\n\t *\n\t * @param transform - a function which takes three arguments:\n\t *    * item: An Object representing the data to eventually be sent to Rollbar\n\t *    * options: The current value of the options for this notifier\n\t *    * callback: function(err: (Null|Error), item: (Null|Object)) the transform must call this\n\t *    callback with a null value for error if it wants the processing chain to continue, otherwise\n\t *    with an error to terminate the processing. The item should be the updated item after this\n\t *    transform is finished modifying it.\n\t */\n\tNotifier.prototype.addTransform = function(transform) {\n\t  if (_.isFunction(transform)) {\n\t    this.transforms.push(transform);\n\t  }\n\t  return this;\n\t};\n\t\n\t/*\n\t * log - the internal log function which applies the configured transforms and then pushes onto the\n\t * queue to be sent to the backend.\n\t *\n\t * @param item - An object with the following structure:\n\t *    message [String] - An optional string to be sent to rollbar\n\t *    error [Error] - An optional error\n\t *\n\t * @param callback - A function of type function(err, resp) which will be called with exactly one\n\t * null argument and one non-null argument. The callback will be called once, either during the\n\t * transform stage if an error occurs inside a transform, or in response to the communication with\n\t * the backend. The second argument will be the response from the backend in case of success.\n\t */\n\tNotifier.prototype.log = function(item, callback) {\n\t  if (!callback || !_.isFunction(callback)) {\n\t    callback = function() {};\n\t  }\n\t\n\t  if (!this.options.enabled) {\n\t    return callback(new Error('Rollbar is not enabled'));\n\t  }\n\t\n\t  this.queue.addPendingItem(item);\n\t  var originalError = item.err;\n\t  this._applyTransforms(item, function(err, i) {\n\t    if (err) {\n\t      this.queue.removePendingItem(item);\n\t      return callback(err, null);\n\t    }\n\t    this.queue.addItem(i, callback, originalError, item);\n\t  }.bind(this));\n\t};\n\t\n\t/* Internal */\n\t\n\t/*\n\t * _applyTransforms - Applies the transforms that have been added to this notifier sequentially. See\n\t * `addTransform` for more information.\n\t *\n\t * @param item - An item to be transformed\n\t * @param callback - A function of type function(err, item) which will be called with a non-null\n\t * error and a null item in the case of a transform failure, or a null error and non-null item after\n\t * all transforms have been applied.\n\t */\n\tNotifier.prototype._applyTransforms = function(item, callback) {\n\t  var transformIndex = -1;\n\t  var transformsLength = this.transforms.length;\n\t  var transforms = this.transforms;\n\t  var options = this.options;\n\t\n\t  var cb = function(err, i) {\n\t    if (err) {\n\t      callback(err, null);\n\t      return;\n\t    }\n\t\n\t    transformIndex++;\n\t\n\t    if (transformIndex === transformsLength) {\n\t      callback(null, i);\n\t      return;\n\t    }\n\t\n\t    transforms[transformIndex](i, options, cb);\n\t  };\n\t\n\t  cb(null, item);\n\t};\n\t\n\tmodule.exports = Notifier;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(5);\n\t\n\tvar MAX_EVENTS = 100;\n\t\n\tfunction Telemeter(options) {\n\t  this.queue = [];\n\t  this.options = _.merge(options);\n\t  var maxTelemetryEvents = this.options.maxTelemetryEvents || MAX_EVENTS;\n\t  this.maxQueueSize = Math.max(0, Math.min(maxTelemetryEvents, MAX_EVENTS));\n\t}\n\t\n\tTelemeter.prototype.configure = function(options) {\n\t  var oldOptions = this.options;\n\t  this.options = _.merge(oldOptions, options);\n\t  var maxTelemetryEvents = this.options.maxTelemetryEvents || MAX_EVENTS;\n\t  var newMaxEvents = Math.max(0, Math.min(maxTelemetryEvents, MAX_EVENTS));\n\t  var deleteCount = 0;\n\t  if (this.maxQueueSize > newMaxEvents) {\n\t    deleteCount = this.maxQueueSize - newMaxEvents;\n\t  }\n\t  this.maxQueueSize = newMaxEvents;\n\t  this.queue.splice(0, deleteCount);\n\t};\n\t\n\tTelemeter.prototype.copyEvents = function() {\n\t  var events = Array.prototype.slice.call(this.queue, 0);\n\t  if (_.isFunction(this.options.filterTelemetry)) {\n\t    try {\n\t      var i = events.length;\n\t      while (i--) {\n\t        if (this.options.filterTelemetry(events[i])) {\n\t          events.splice(i, 1);\n\t        }\n\t      }\n\t    } catch (e) {\n\t      this.options.filterTelemetry = null;\n\t    }\n\t  }\n\t  return events;\n\t};\n\t\n\tTelemeter.prototype.capture = function(type, metadata, level, rollbarUUID, timestamp) {\n\t  var e = {\n\t    level: getLevel(type, level),\n\t    type: type,\n\t    timestamp_ms: timestamp || _.now(),\n\t    body: metadata,\n\t    source: 'client'\n\t  };\n\t  if (rollbarUUID) {\n\t    e.uuid = rollbarUUID;\n\t  }\n\t\n\t  try {\n\t    if (_.isFunction(this.options.filterTelemetry) && this.options.filterTelemetry(e)) {\n\t      return false;\n\t    }\n\t  } catch (exc) {\n\t    this.options.filterTelemetry = null;\n\t  }\n\t\n\t  this.push(e);\n\t  return e;\n\t};\n\t\n\tTelemeter.prototype.captureEvent = function(type, metadata, level, rollbarUUID) {\n\t  return this.capture(type, metadata, level, rollbarUUID);\n\t};\n\t\n\tTelemeter.prototype.captureError = function(err, level, rollbarUUID, timestamp) {\n\t  var metadata = {\n\t    message: err.message || String(err)\n\t  };\n\t  if (err.stack) {\n\t    metadata.stack = err.stack;\n\t  }\n\t  return this.capture('error', metadata, level, rollbarUUID, timestamp);\n\t};\n\t\n\tTelemeter.prototype.captureLog = function(message, level, rollbarUUID, timestamp) {\n\t  return this.capture('log', {\n\t    message: message\n\t  }, level, rollbarUUID, timestamp);\n\t};\n\t\n\tTelemeter.prototype.captureNetwork = function(metadata, subtype, rollbarUUID, requestData) {\n\t  subtype = subtype || 'xhr';\n\t  metadata.subtype = metadata.subtype || subtype;\n\t  if (requestData) {\n\t    metadata.request = requestData;\n\t  }\n\t  var level = this.levelFromStatus(metadata.status_code);\n\t  return this.capture('network', metadata, level, rollbarUUID);\n\t};\n\t\n\tTelemeter.prototype.levelFromStatus = function(statusCode) {\n\t  if (statusCode >= 200 && statusCode < 400) {\n\t    return 'info';\n\t  }\n\t  if (statusCode === 0 || statusCode >= 400) {\n\t    return 'error';\n\t  }\n\t  return 'info';\n\t};\n\t\n\tTelemeter.prototype.captureDom = function(subtype, element, value, checked, rollbarUUID) {\n\t  var metadata = {\n\t    subtype: subtype,\n\t    element: element\n\t  };\n\t  if (value !== undefined) {\n\t    metadata.value = value;\n\t  }\n\t  if (checked !== undefined) {\n\t    metadata.checked = checked;\n\t  }\n\t  return this.capture('dom', metadata, 'info', rollbarUUID);\n\t};\n\t\n\tTelemeter.prototype.captureNavigation = function(from, to, rollbarUUID) {\n\t  return this.capture('navigation', {from: from, to: to}, 'info', rollbarUUID);\n\t};\n\t\n\tTelemeter.prototype.captureDomContentLoaded = function(ts) {\n\t  return this.capture('navigation', {subtype: 'DOMContentLoaded'}, 'info', undefined, ts && ts.getTime());\n\t  /**\n\t   * If we decide to make this a dom event instead, then use the line below:\n\t  return this.capture('dom', {subtype: 'DOMContentLoaded'}, 'info', undefined, ts && ts.getTime());\n\t  */\n\t};\n\tTelemeter.prototype.captureLoad = function(ts) {\n\t  return this.capture('navigation', {subtype: 'load'}, 'info', undefined, ts && ts.getTime());\n\t  /**\n\t   * If we decide to make this a dom event instead, then use the line below:\n\t  return this.capture('dom', {subtype: 'load'}, 'info', undefined, ts && ts.getTime());\n\t  */\n\t};\n\t\n\tTelemeter.prototype.captureConnectivityChange = function(type, rollbarUUID) {\n\t  return this.captureNetwork({change: type}, 'connectivity', rollbarUUID);\n\t};\n\t\n\t// Only intended to be used internally by the notifier\n\tTelemeter.prototype._captureRollbarItem = function(item) {\n\t  if (!this.options.includeItemsInTelemetry) {\n\t    return;\n\t  }\n\t  if (item.err) {\n\t    return this.captureError(item.err, item.level, item.uuid, item.timestamp);\n\t  }\n\t  if (item.message) {\n\t    return this.captureLog(item.message, item.level, item.uuid, item.timestamp);\n\t  }\n\t  if (item.custom) {\n\t    return this.capture('log', item.custom, item.level, item.uuid, item.timestamp);\n\t  }\n\t};\n\t\n\tTelemeter.prototype.push = function(e) {\n\t  this.queue.push(e);\n\t  if (this.queue.length > this.maxQueueSize) {\n\t    this.queue.shift();\n\t  }\n\t};\n\t\n\tfunction getLevel(type, level) {\n\t  if (level) {\n\t    return level;\n\t  }\n\t  var defaultLevel = {\n\t    error: 'error',\n\t    manual: 'info'\n\t  };\n\t  return defaultLevel[type] || 'info';\n\t}\n\t\n\tmodule.exports = Telemeter;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(5);\n\tvar helpers = __webpack_require__(12);\n\t\n\tvar defaultOptions = {\n\t  hostname: 'api.rollbar.com',\n\t  path: '/api/1/item/',\n\t  search: null,\n\t  version: '1',\n\t  protocol: 'https:',\n\t  port: 443\n\t};\n\t\n\t/**\n\t * Api is an object that encapsulates methods of communicating with\n\t * the Rollbar API.  It is a standard interface with some parts implemented\n\t * differently for server or browser contexts.  It is an object that should\n\t * be instantiated when used so it can contain non-global options that may\n\t * be different for another instance of RollbarApi.\n\t *\n\t * @param options {\n\t *    accessToken: the accessToken to use for posting items to rollbar\n\t *    endpoint: an alternative endpoint to send errors to\n\t *        must be a valid, fully qualified URL.\n\t *        The default is: https://api.rollbar.com/api/1/item\n\t *    proxy: if you wish to proxy requests provide an object\n\t *        with the following keys:\n\t *          host or hostname (required): foo.example.com\n\t *          port (optional): 123\n\t *          protocol (optional): https\n\t * }\n\t */\n\tfunction Api(options, t, u, j) {\n\t  this.options = options;\n\t  this.transport = t;\n\t  this.url = u;\n\t  this.jsonBackup = j;\n\t  this.accessToken = options.accessToken;\n\t  this.transportOptions = _getTransport(options, u);\n\t}\n\t\n\t/**\n\t *\n\t * @param data\n\t * @param callback\n\t */\n\tApi.prototype.postItem = function(data, callback) {\n\t  var transportOptions = helpers.transportOptions(this.transportOptions, 'POST');\n\t  var payload = helpers.buildPayload(this.accessToken, data, this.jsonBackup);\n\t  this.transport.post(this.accessToken, transportOptions, payload, callback);\n\t};\n\t\n\tApi.prototype.configure = function(options) {\n\t  var oldOptions = this.oldOptions;\n\t  this.options = _.merge(oldOptions, options);\n\t  this.transportOptions = _getTransport(this.options, this.url);\n\t  if (this.options.accessToken !== undefined) {\n\t    this.accessToken = this.options.accessToken;\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction _getTransport(options, url) {\n\t  return helpers.getTransportFromOptions(options, defaultOptions, url);\n\t}\n\t\n\tmodule.exports = Api;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(5);\n\t\n\tfunction buildPayload(accessToken, data, jsonBackup) {\n\t  if (!_.isType(data.context, 'string')) {\n\t    var contextResult = _.stringify(data.context, jsonBackup);\n\t    if (contextResult.error) {\n\t      data.context = 'Error: could not serialize \\'context\\'';\n\t    } else {\n\t      data.context = contextResult.value || '';\n\t    }\n\t    if (data.context.length > 255) {\n\t      data.context = data.context.substr(0, 255);\n\t    }\n\t  }\n\t  return {\n\t    access_token: accessToken,\n\t    data: data\n\t  };\n\t}\n\t\n\tfunction getTransportFromOptions(options, defaults, url) {\n\t  var hostname = defaults.hostname;\n\t  var protocol = defaults.protocol;\n\t  var port = defaults.port;\n\t  var path = defaults.path;\n\t  var search = defaults.search;\n\t\n\t  var proxy = options.proxy;\n\t  if (options.endpoint) {\n\t    var opts = url.parse(options.endpoint);\n\t    hostname = opts.hostname;\n\t    protocol = opts.protocol;\n\t    port = opts.port;\n\t    path = opts.pathname;\n\t    search = opts.search;\n\t  }\n\t  return {\n\t    hostname: hostname,\n\t    protocol: protocol,\n\t    port: port,\n\t    path: path,\n\t    search: search,\n\t    proxy: proxy\n\t  };\n\t}\n\t\n\tfunction transportOptions(transport, method) {\n\t  var protocol = transport.protocol || 'https:';\n\t  var port = transport.port || (protocol === 'http:' ? 80 : protocol === 'https:' ? 443 : undefined);\n\t  var hostname = transport.hostname;\n\t  var path = transport.path;\n\t  if (transport.search) {\n\t    path = path + transport.search;\n\t  }\n\t  if (transport.proxy) {\n\t    path = protocol + '//' + hostname + path;\n\t    hostname = transport.proxy.host || transport.proxy.hostname;\n\t    port = transport.proxy.port;\n\t    protocol = transport.proxy.protocol || protocol;\n\t  }\n\t  return {\n\t    protocol: protocol,\n\t    hostname: hostname,\n\t    path: path,\n\t    port: port,\n\t    method: method\n\t  };\n\t}\n\t\n\tfunction appendPathToPath(base, path) {\n\t  var baseTrailingSlash = /\\/$/.test(base);\n\t  var pathBeginningSlash = /^\\//.test(path);\n\t\n\t  if (baseTrailingSlash && pathBeginningSlash) {\n\t    path = path.substring(1);\n\t  } else if (!baseTrailingSlash && !pathBeginningSlash) {\n\t    path = '/' + path;\n\t  }\n\t\n\t  return base + path;\n\t}\n\t\n\tmodule.exports = {\n\t  buildPayload: buildPayload,\n\t  getTransportFromOptions: getTransportFromOptions,\n\t  transportOptions: transportOptions,\n\t  appendPathToPath: appendPathToPath\n\t};\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/* eslint-disable no-console */\n\t__webpack_require__(14);\n\tvar detection = __webpack_require__(15);\n\tvar _ = __webpack_require__(5);\n\t\n\tfunction error() {\n\t  var args = Array.prototype.slice.call(arguments, 0);\n\t  args.unshift('Rollbar:');\n\t  if (detection.ieVersion() <= 8) {\n\t    console.error(_.formatArgsAsString(args));\n\t  } else {\n\t    console.error.apply(console, args);\n\t  }\n\t}\n\t\n\tfunction info() {\n\t  var args = Array.prototype.slice.call(arguments, 0);\n\t  args.unshift('Rollbar:');\n\t  if (detection.ieVersion() <= 8) {\n\t    console.info(_.formatArgsAsString(args));\n\t  } else {\n\t    console.info.apply(console, args);\n\t  }\n\t}\n\t\n\tfunction log() {\n\t  var args = Array.prototype.slice.call(arguments, 0);\n\t  args.unshift('Rollbar:');\n\t  if (detection.ieVersion() <= 8) {\n\t    console.log(_.formatArgsAsString(args));\n\t  } else {\n\t    console.log.apply(console, args);\n\t  }\n\t}\n\t\n\t/* eslint-enable no-console */\n\t\n\tmodule.exports = {\n\t  error: error,\n\t  info: info,\n\t  log: log\n\t};\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n\t// Console-polyfill. MIT license.\n\t// https://github.com/paulmillr/console-polyfill\n\t// Make it safe to do console.log() always.\n\t(function(global) {\n\t  'use strict';\n\t  if (!global.console) {\n\t    global.console = {};\n\t  }\n\t  var con = global.console;\n\t  var prop, method;\n\t  var dummy = function() {};\n\t  var properties = ['memory'];\n\t  var methods = ('assert,clear,count,debug,dir,dirxml,error,exception,group,' +\n\t     'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' +\n\t     'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(',');\n\t  while (prop = properties.pop()) if (!con[prop]) con[prop] = {};\n\t  while (method = methods.pop()) if (!con[method]) con[method] = dummy;\n\t  // Using `this` for web workers & supports Browserify / Webpack.\n\t})(typeof window === 'undefined' ? this : window);\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t// This detection.js module is used to encapsulate any ugly browser/feature\n\t// detection we may need to do.\n\t\n\t// Figure out which version of IE we're using, if any.\n\t// This is gleaned from http://stackoverflow.com/questions/5574842/best-way-to-check-for-ie-less-than-9-in-javascript-without-library\n\t// Will return an integer on IE (i.e. 8)\n\t// Will return undefined otherwise\n\tfunction getIEVersion() {\n\t\tvar undef;\n\t\tif (!document) {\n\t\t\treturn undef;\n\t\t}\n\t\n\t  var v = 3,\n\t    div = document.createElement('div'),\n\t    all = div.getElementsByTagName('i');\n\t\n\t  while (\n\t    div.innerHTML = '<!--[if gt IE ' + (++v) + ']><i></i><![endif]-->',\n\t      all[0]\n\t    );\n\t\n\t  return v > 4 ? v : undef;\n\t}\n\t\n\tvar Detection = {\n\t  ieVersion: getIEVersion\n\t};\n\t\n\tmodule.exports = Detection;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tfunction captureUncaughtExceptions(window, handler, shim) {\n\t  if (!window) { return; }\n\t  var oldOnError;\n\t\n\t  if (typeof handler._rollbarOldOnError === 'function') {\n\t    oldOnError = handler._rollbarOldOnError;\n\t  } else if (window.onerror) {\n\t    oldOnError = window.onerror;\n\t    while (oldOnError._rollbarOldOnError) {\n\t      oldOnError = oldOnError._rollbarOldOnError;\n\t    }\n\t    handler._rollbarOldOnError = oldOnError;\n\t  }\n\t\n\t  var fn = function() {\n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t    _rollbarWindowOnError(window, handler, oldOnError, args);\n\t  };\n\t  if (shim) {\n\t    fn._rollbarOldOnError = oldOnError;\n\t  }\n\t  window.onerror = fn;\n\t}\n\t\n\tfunction _rollbarWindowOnError(window, r, old, args) {\n\t  if (window._rollbarWrappedError) {\n\t    if (!args[4]) {\n\t      args[4] = window._rollbarWrappedError;\n\t    }\n\t    if (!args[5]) {\n\t      args[5] = window._rollbarWrappedError._rollbarContext;\n\t    }\n\t    window._rollbarWrappedError = null;\n\t  }\n\t\n\t  r.handleUncaughtException.apply(r, args);\n\t  if (old) {\n\t    old.apply(window, args);\n\t  }\n\t}\n\t\n\tfunction captureUnhandledRejections(window, handler, shim) {\n\t  if (!window) { return; }\n\t\n\t  if (typeof window._rollbarURH === 'function' && window._rollbarURH.belongsToShim) {\n\t    window.removeEventListener('unhandledrejection', window._rollbarURH);\n\t  }\n\t\n\t  var rejectionHandler = function (evt) {\n\t    var reason, promise, detail;\n\t    try {\n\t      reason = evt.reason;\n\t    } catch (e) {\n\t      reason = undefined;\n\t    }\n\t    try {\n\t      promise = evt.promise;\n\t    } catch (e) {\n\t      promise = '[unhandledrejection] error getting `promise` from event';\n\t    }\n\t    try {\n\t      detail = evt.detail;\n\t      if (!reason && detail) {\n\t        reason = detail.reason;\n\t        promise = detail.promise;\n\t      }\n\t    } catch (e) {\n\t      // Ignore\n\t    }\n\t    if (!reason) {\n\t      reason = '[unhandledrejection] error getting `reason` from event';\n\t    }\n\t\n\t    if (handler && handler.handleUnhandledRejection) {\n\t      handler.handleUnhandledRejection(reason, promise);\n\t    }\n\t  };\n\t  rejectionHandler.belongsToShim = shim;\n\t  window._rollbarURH = rejectionHandler;\n\t  window.addEventListener('unhandledrejection', rejectionHandler);\n\t}\n\t\n\tfunction wrapGlobals(window, handler, shim) {\n\t  if (!window) { return; }\n\t  // Adapted from https://github.com/bugsnag/bugsnag-js\n\t  var globals = 'EventTarget,Window,Node,ApplicationCache,AudioTrackList,ChannelMergerNode,CryptoOperation,EventSource,FileReader,HTMLUnknownElement,IDBDatabase,IDBRequest,IDBTransaction,KeyOperation,MediaController,MessagePort,ModalWindow,Notification,SVGElementInstance,Screen,TextTrack,TextTrackCue,TextTrackList,WebSocket,WebSocketWorker,Worker,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload'.split(',');\n\t  var i, global;\n\t  for (i = 0; i < globals.length; ++i) {\n\t    global = globals[i];\n\t\n\t    if (window[global] && window[global].prototype) {\n\t      _extendListenerPrototype(handler, window[global].prototype, shim);\n\t    }\n\t  }\n\t}\n\t\n\tfunction _extendListenerPrototype(handler, prototype, shim) {\n\t  if (prototype.hasOwnProperty && prototype.hasOwnProperty('addEventListener')) {\n\t    var oldAddEventListener = prototype.addEventListener;\n\t    while (oldAddEventListener._rollbarOldAdd && oldAddEventListener.belongsToShim) {\n\t      oldAddEventListener = oldAddEventListener._rollbarOldAdd;\n\t    }\n\t    var addFn = function(event, callback, bubble) {\n\t      oldAddEventListener.call(this, event, handler.wrap(callback), bubble);\n\t    };\n\t    addFn._rollbarOldAdd = oldAddEventListener;\n\t    addFn.belongsToShim = shim;\n\t    prototype.addEventListener = addFn;\n\t\n\t    var oldRemoveEventListener = prototype.removeEventListener;\n\t    while (oldRemoveEventListener._rollbarOldRemove && oldRemoveEventListener.belongsToShim) {\n\t      oldRemoveEventListener = oldRemoveEventListener._rollbarOldRemove;\n\t    }\n\t    var removeFn = function(event, callback, bubble) {\n\t      oldRemoveEventListener.call(this, event, callback && callback._rollbar_wrapped || callback, bubble);\n\t    };\n\t    removeFn._rollbarOldRemove = oldRemoveEventListener;\n\t    removeFn.belongsToShim = shim;\n\t    prototype.removeEventListener = removeFn;\n\t  }\n\t}\n\t\n\tmodule.exports = {\n\t  captureUncaughtExceptions: captureUncaughtExceptions,\n\t  captureUnhandledRejections: captureUnhandledRejections,\n\t  wrapGlobals: wrapGlobals\n\t};\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*global XDomainRequest*/\n\t\n\tvar _ = __webpack_require__(5);\n\tvar truncation = __webpack_require__(18);\n\tvar logger = __webpack_require__(13);\n\t\n\t/*\n\t * accessToken may be embedded in payload but that should not\n\t *   be assumed\n\t *\n\t * options: {\n\t *   hostname\n\t *   protocol\n\t *   path\n\t *   port\n\t *   method\n\t * }\n\t *\n\t *  params is an object containing key/value pairs. These\n\t *    will be appended to the path as 'key=value&key=value'\n\t *\n\t * payload is an unserialized object\n\t */\n\t\n\tfunction get(accessToken, options, params, callback, requestFactory) {\n\t  if (!callback || !_.isFunction(callback)) {\n\t    callback = function() {};\n\t  }\n\t  _.addParamsAndAccessTokenToPath(accessToken, options, params);\n\t\n\t  var method = 'GET';\n\t  var url = _.formatUrl(options);\n\t  _makeZoneRequest(accessToken, url, method, null, callback, requestFactory);\n\t}\n\t\n\tfunction post(accessToken, options, payload, callback, requestFactory) {\n\t  if (!callback || !_.isFunction(callback)) {\n\t    callback = function() {};\n\t  }\n\t\n\t  if (!payload) {\n\t    return callback(new Error('Cannot send empty request'));\n\t  }\n\t\n\t  var stringifyResult = truncation.truncate(payload);\n\t  if (stringifyResult.error) {\n\t    return callback(stringifyResult.error);\n\t  }\n\t\n\t  var writeData = stringifyResult.value;\n\t  var method = 'POST';\n\t  var url = _.formatUrl(options);\n\t  _makeZoneRequest(accessToken, url, method, writeData, callback, requestFactory);\n\t}\n\t\n\t// Wraps _makeRequest and if Angular 2+ Zone.js is detected, changes scope\n\t// so Angular change detection isn't triggered on each API call.\n\t// This is the equivalent of runOutsideAngular().\n\t//\n\tfunction _makeZoneRequest(accessToken, url, method, data, callback, requestFactory) {\n\t  var gWindow = ((typeof window != 'undefined') && window) || ((typeof self != 'undefined') && self);\n\t  var currentZone = gWindow && gWindow.Zone && gWindow.Zone.current;\n\t\n\t  if (currentZone && currentZone._name === 'angular') {\n\t    var rootZone = currentZone._parent;\n\t    rootZone.run(function () {\n\t      _makeRequest(accessToken, url, method, data, callback, requestFactory);\n\t    });\n\t  } else {\n\t    _makeRequest(accessToken, url, method, data, callback, requestFactory);\n\t  }\n\t}\n\t\n\tfunction _makeRequest(accessToken, url, method, data, callback, requestFactory) {\n\t  var request;\n\t  if (requestFactory) {\n\t    request = requestFactory();\n\t  } else {\n\t    request = _createXMLHTTPObject();\n\t  }\n\t  if (!request) {\n\t    // Give up, no way to send requests\n\t    return callback(new Error('No way to send a request'));\n\t  }\n\t  try {\n\t    try {\n\t      var onreadystatechange = function() {\n\t        try {\n\t          if (onreadystatechange && request.readyState === 4) {\n\t            onreadystatechange = undefined;\n\t\n\t            var parseResponse = _.jsonParse(request.responseText);\n\t            if (_isSuccess(request)) {\n\t              callback(parseResponse.error, parseResponse.value);\n\t              return;\n\t            } else if (_isNormalFailure(request)) {\n\t              if (request.status === 403) {\n\t                // likely caused by using a server access token\n\t                var message = parseResponse.value && parseResponse.value.message;\n\t                logger.error(message);\n\t              }\n\t              // return valid http status codes\n\t              callback(new Error(String(request.status)));\n\t            } else {\n\t              // IE will return a status 12000+ on some sort of connection failure,\n\t              // so we return a blank error\n\t              // http://msdn.microsoft.com/en-us/library/aa383770%28VS.85%29.aspx\n\t              var msg = 'XHR response had no status code (likely connection failure)';\n\t              callback(_newRetriableError(msg));\n\t            }\n\t          }\n\t        } catch (ex) {\n\t          //jquery source mentions firefox may error out while accessing the\n\t          //request members if there is a network error\n\t          //https://github.com/jquery/jquery/blob/a938d7b1282fc0e5c52502c225ae8f0cef219f0a/src/ajax/xhr.js#L111\n\t          var exc;\n\t          if (ex && ex.stack) {\n\t            exc = ex;\n\t          } else {\n\t            exc = new Error(ex);\n\t          }\n\t          callback(exc);\n\t        }\n\t      };\n\t\n\t      request.open(method, url, true);\n\t      if (request.setRequestHeader) {\n\t        request.setRequestHeader('Content-Type', 'application/json');\n\t        request.setRequestHeader('X-Rollbar-Access-Token', accessToken);\n\t      }\n\t      request.onreadystatechange = onreadystatechange;\n\t      request.send(data);\n\t    } catch (e1) {\n\t      // Sending using the normal xmlhttprequest object didn't work, try XDomainRequest\n\t      if (typeof XDomainRequest !== 'undefined') {\n\t\n\t        // Assume we are in a really old browser which has a bunch of limitations:\n\t        // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\t\n\t        // Extreme paranoia: if we have XDomainRequest then we have a window, but just in case\n\t        if (!window || !window.location) {\n\t          return callback(new Error('No window available during request, unknown environment'));\n\t        }\n\t\n\t        // If the current page is http, try and send over http\n\t        if (window.location.href.substring(0, 5) === 'http:' && url.substring(0, 5) === 'https') {\n\t          url = 'http' + url.substring(5);\n\t        }\n\t\n\t        var xdomainrequest = new XDomainRequest();\n\t        xdomainrequest.onprogress = function() {};\n\t        xdomainrequest.ontimeout = function() {\n\t          var msg = 'Request timed out';\n\t          var code = 'ETIMEDOUT';\n\t          callback(_newRetriableError(msg, code));\n\t        };\n\t        xdomainrequest.onerror = function() {\n\t          callback(new Error('Error during request'));\n\t        };\n\t        xdomainrequest.onload = function() {\n\t          var parseResponse = _.jsonParse(xdomainrequest.responseText);\n\t          callback(parseResponse.error, parseResponse.value);\n\t        };\n\t        xdomainrequest.open(method, url, true);\n\t        xdomainrequest.send(data);\n\t      } else {\n\t        callback(new Error('Cannot find a method to transport a request'));\n\t      }\n\t    }\n\t  } catch (e2) {\n\t    callback(e2);\n\t  }\n\t}\n\t\n\tfunction _createXMLHTTPObject() {\n\t  /* global ActiveXObject:false */\n\t\n\t  var factories = [\n\t    function () {\n\t      return new XMLHttpRequest();\n\t    },\n\t    function () {\n\t      return new ActiveXObject('Msxml2.XMLHTTP');\n\t    },\n\t    function () {\n\t      return new ActiveXObject('Msxml3.XMLHTTP');\n\t    },\n\t    function () {\n\t      return new ActiveXObject('Microsoft.XMLHTTP');\n\t    }\n\t  ];\n\t  var xmlhttp;\n\t  var i;\n\t  var numFactories = factories.length;\n\t  for (i = 0; i < numFactories; i++) {\n\t    /* eslint-disable no-empty */\n\t    try {\n\t      xmlhttp = factories[i]();\n\t      break;\n\t    } catch (e) {\n\t      // pass\n\t    }\n\t    /* eslint-enable no-empty */\n\t  }\n\t  return xmlhttp;\n\t}\n\t\n\tfunction _isSuccess(r) {\n\t  return r && r.status && r.status === 200;\n\t}\n\t\n\tfunction _isNormalFailure(r) {\n\t  return r && _.isType(r.status, 'number') && r.status >= 400 && r.status < 600;\n\t}\n\t\n\tfunction _newRetriableError(message, code) {\n\t  var err = new Error(message);\n\t  err.code = code || 'ENOTFOUND';\n\t  return err;\n\t}\n\t\n\tmodule.exports = {\n\t  get: get,\n\t  post: post\n\t};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(5);\n\t\n\tfunction raw(payload, jsonBackup) {\n\t  return [payload, _.stringify(payload, jsonBackup)];\n\t}\n\t\n\tfunction selectFrames(frames, range) {\n\t  var len = frames.length;\n\t  if (len > range * 2) {\n\t    return frames.slice(0, range).concat(frames.slice(len - range));\n\t  }\n\t  return frames;\n\t}\n\t\n\tfunction truncateFrames(payload, jsonBackup, range) {\n\t  range = (typeof range === 'undefined') ? 30 : range;\n\t  var body = payload.data.body;\n\t  var frames;\n\t  if (body.trace_chain) {\n\t    var chain = body.trace_chain;\n\t    for (var i = 0; i < chain.length; i++) {\n\t      frames = chain[i].frames;\n\t      frames = selectFrames(frames, range);\n\t      chain[i].frames = frames;\n\t    }\n\t  } else if (body.trace) {\n\t    frames = body.trace.frames;\n\t    frames = selectFrames(frames, range);\n\t    body.trace.frames = frames;\n\t  }\n\t  return [payload, _.stringify(payload, jsonBackup)];\n\t}\n\t\n\tfunction maybeTruncateValue(len, val) {\n\t  if (!val) {\n\t    return val;\n\t  }\n\t  if (val.length > len) {\n\t    return val.slice(0, len - 3).concat('...');\n\t  }\n\t  return val;\n\t}\n\t\n\tfunction truncateStrings(len, payload, jsonBackup) {\n\t  function truncator(k, v, seen) {\n\t    switch (_.typeName(v)) {\n\t      case 'string':\n\t        return maybeTruncateValue(len, v);\n\t      case 'object':\n\t      case 'array':\n\t        return _.traverse(v, truncator, seen);\n\t      default:\n\t        return v;\n\t    }\n\t  }\n\t  payload = _.traverse(payload, truncator, []);\n\t  return [payload, _.stringify(payload, jsonBackup)];\n\t}\n\t\n\tfunction truncateTraceData(traceData) {\n\t  if (traceData.exception) {\n\t    delete traceData.exception.description;\n\t    traceData.exception.message = maybeTruncateValue(255, traceData.exception.message);\n\t  }\n\t  traceData.frames = selectFrames(traceData.frames, 1);\n\t  return traceData;\n\t}\n\t\n\tfunction minBody(payload, jsonBackup) {\n\t  var body = payload.data.body;\n\t  if (body.trace_chain) {\n\t    var chain = body.trace_chain;\n\t    for (var i = 0; i < chain.length; i++) {\n\t      chain[i] = truncateTraceData(chain[i]);\n\t    }\n\t  } else if (body.trace) {\n\t    body.trace = truncateTraceData(body.trace);\n\t  }\n\t  return [payload, _.stringify(payload, jsonBackup)];\n\t}\n\t\n\tfunction needsTruncation(payload, maxSize) {\n\t  return payload.length > maxSize;\n\t}\n\t\n\tfunction truncate(payload, jsonBackup, maxSize) {\n\t  maxSize = (typeof maxSize === 'undefined') ? (512 * 1024) : maxSize;\n\t  var strategies = [\n\t    raw,\n\t    truncateFrames,\n\t    truncateStrings.bind(null, 1024),\n\t    truncateStrings.bind(null, 512),\n\t    truncateStrings.bind(null, 256),\n\t    minBody\n\t  ];\n\t  var strategy, results, result;\n\t\n\t  while ((strategy = strategies.shift())) {\n\t    results = strategy(payload, jsonBackup);\n\t    payload = results[0];\n\t    result = results[1];\n\t    if (result.error || !needsTruncation(result.value, maxSize)) {\n\t      return result;\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = {\n\t  truncate: truncate,\n\t\n\t  /* for testing */\n\t  raw: raw,\n\t  truncateFrames: truncateFrames,\n\t  truncateStrings: truncateStrings,\n\t  maybeTruncateValue: maybeTruncateValue\n\t};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t// See https://nodejs.org/docs/latest/api/url.html\n\tfunction parse(url) {\n\t  var result = {\n\t    protocol: null, auth: null, host: null, path: null,\n\t    hash: null, href: url, hostname: null, port: null,\n\t    pathname: null, search: null, query: null\n\t  };\n\t\n\t  var i, last;\n\t  i = url.indexOf('//');\n\t  if (i !== -1) {\n\t    result.protocol = url.substring(0,i);\n\t    last = i+2;\n\t  } else {\n\t    last = 0;\n\t  }\n\t  \n\t  i = url.indexOf('@', last);\n\t  if (i !== -1) {\n\t    result.auth = url.substring(last, i);\n\t    last = i+1;\n\t  }\n\t\n\t  i = url.indexOf('/', last);\n\t  if (i === -1) {\n\t    i = url.indexOf('?', last);\n\t    if (i === -1) {\n\t      i = url.indexOf('#', last);\n\t      if (i === -1) {\n\t        result.host = url.substring(last);\n\t      } else {\n\t        result.host = url.substring(last, i);\n\t        result.hash = url.substring(i);\n\t      }\n\t      result.hostname = result.host.split(':')[0];\n\t      result.port = result.host.split(':')[1];\n\t      if (result.port) {\n\t        result.port = parseInt(result.port, 10);\n\t      }\n\t      return result;\n\t    } else {\n\t      result.host = url.substring(last, i);\n\t      result.hostname = result.host.split(':')[0];\n\t      result.port = result.host.split(':')[1];\n\t      if (result.port) {\n\t        result.port = parseInt(result.port, 10);\n\t      }\n\t      last = i;\n\t    }\n\t  } else {\n\t    result.host = url.substring(last, i);\n\t    result.hostname = result.host.split(':')[0];\n\t    result.port = result.host.split(':')[1];\n\t    if (result.port) {\n\t      result.port = parseInt(result.port, 10);\n\t    }\n\t    last = i;\n\t  }\n\t\n\t  i = url.indexOf('#', last);\n\t  if (i === -1) {\n\t    result.path = url.substring(last);\n\t  } else {\n\t    result.path = url.substring(last, i);\n\t    result.hash = url.substring(i);\n\t  }\n\t\n\t  if (result.path) {\n\t    var pathParts = result.path.split('?');\n\t    result.pathname = pathParts[0];\n\t    result.query = pathParts[1];\n\t    result.search = result.query ? '?' + result.query : null;\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = {\n\t  parse: parse\n\t};\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(5);\n\tvar errorParser = __webpack_require__(21);\n\tvar logger = __webpack_require__(13);\n\t\n\tfunction handleItemWithError(item, options, callback) {\n\t  item.data = item.data || {};\n\t  if (item.err) {\n\t    try {\n\t      item.stackInfo = item.err._savedStackTrace || errorParser.parse(item.err);\n\t    } catch (e) {\n\t      logger.error('Error while parsing the error object.', e);\n\t      try {\n\t        item.message = item.err.message || item.err.description || item.message || String(item.err);\n\t      } catch (e2) {\n\t        item.message = String(item.err) || String(e2);\n\t      }\n\t      delete item.err;\n\t    }\n\t  }\n\t  callback(null, item);\n\t}\n\t\n\tfunction ensureItemHasSomethingToSay(item, options, callback) {\n\t  if (!item.message && !item.stackInfo && !item.custom) {\n\t    callback(new Error('No message, stack info, or custom data'), null);\n\t  }\n\t  callback(null, item);\n\t}\n\t\n\tfunction addBaseInfo(item, options, callback) {\n\t  var environment = (options.payload && options.payload.environment) || options.environment;\n\t  item.data = _.merge(item.data, {\n\t    environment: environment,\n\t    level: item.level,\n\t    endpoint: options.endpoint,\n\t    platform: 'browser',\n\t    framework: 'browser-js',\n\t    language: 'javascript',\n\t    server: {},\n\t    uuid: item.uuid,\n\t    notifier: {\n\t      name: 'rollbar-browser-js',\n\t      version: options.version\n\t    }\n\t  });\n\t  callback(null, item);\n\t}\n\t\n\tfunction addRequestInfo(window) {\n\t  return function(item, options, callback) {\n\t    if (!window || !window.location) {\n\t      return callback(null, item);\n\t    }\n\t    var remoteString = '$remote_ip';\n\t    if (!options.captureIp) {\n\t      remoteString = null;\n\t    } else if (options.captureIp !== true) {\n\t      remoteString += '_anonymize';\n\t    }\n\t    _.set(item, 'data.request', {\n\t      url: window.location.href,\n\t      query_string: window.location.search,\n\t      user_ip: remoteString\n\t    });\n\t    callback(null, item);\n\t  };\n\t}\n\t\n\tfunction addClientInfo(window) {\n\t  return function(item, options, callback) {\n\t    if (!window) {\n\t      return callback(null, item);\n\t    }\n\t    var nav = window.navigator || {};\n\t    var scr = window.screen || {};\n\t    _.set(item, 'data.client', {\n\t      runtime_ms: item.timestamp - window._rollbarStartTime,\n\t      timestamp: Math.round(item.timestamp / 1000),\n\t      javascript: {\n\t        browser: nav.userAgent,\n\t        language: nav.language,\n\t        cookie_enabled: nav.cookieEnabled,\n\t        screen: {\n\t          width: scr.width,\n\t          height: scr.height\n\t        }\n\t      }\n\t    });\n\t    callback(null, item);\n\t  };\n\t}\n\t\n\tfunction addPluginInfo(window) {\n\t  return function(item, options, callback) {\n\t    if (!window || !window.navigator) {\n\t      return callback(null, item);\n\t    }\n\t    var plugins = [];\n\t    var navPlugins = window.navigator.plugins || [];\n\t    var cur;\n\t    for (var i=0, l=navPlugins.length; i < l; ++i) {\n\t      cur = navPlugins[i];\n\t      plugins.push({name: cur.name, description: cur.description});\n\t    }\n\t    _.set(item, 'data.client.javascript.plugins', plugins);\n\t    callback(null, item);\n\t  };\n\t}\n\t\n\tfunction addBody(item, options, callback) {\n\t  if (item.stackInfo) {\n\t    addBodyTrace(item, options, callback);\n\t  } else {\n\t    addBodyMessage(item, options, callback);\n\t  }\n\t}\n\t\n\tfunction addBodyMessage(item, options, callback) {\n\t  var message = item.message;\n\t  var custom = item.custom;\n\t\n\t  if (!message) {\n\t    if (custom) {\n\t      var scrubFields = options.scrubFields;\n\t      var messageResult = _.stringify(_.scrub(custom, scrubFields));\n\t      message = messageResult.error || messageResult.value || '';\n\t    } else {\n\t      message = '';\n\t    }\n\t  }\n\t  var result = {\n\t    body: message\n\t  };\n\t\n\t  if (custom) {\n\t    result.extra = _.merge(custom);\n\t  }\n\t\n\t  _.set(item, 'data.body', {message: result});\n\t  callback(null, item);\n\t}\n\t\n\t\n\tfunction addBodyTrace(item, options, callback) {\n\t  var description = item.data.description;\n\t  var stackInfo = item.stackInfo;\n\t  var custom = item.custom;\n\t\n\t  var guess = errorParser.guessErrorClass(stackInfo.message);\n\t  var className = stackInfo.name || guess[0];\n\t  var message = guess[1];\n\t  var trace = {\n\t    exception: {\n\t      'class': className,\n\t      message: message\n\t    }\n\t  };\n\t\n\t  if (description) {\n\t    trace.exception.description = description;\n\t  }\n\t\n\t  // Transform a TraceKit stackInfo object into a Rollbar trace\n\t  var stack = stackInfo.stack;\n\t  if (stack && stack.length === 0 && item._unhandledStackInfo && item._unhandledStackInfo.stack) {\n\t    stack = item._unhandledStackInfo.stack;\n\t  }\n\t  if (stack) {\n\t    if (stack.length === 0) {\n\t      trace.exception.stack = stackInfo.rawStack;\n\t      trace.exception.raw = String(stackInfo.rawException);\n\t    }\n\t    var stackFrame;\n\t    var frame;\n\t    var code;\n\t    var pre;\n\t    var post;\n\t    var contextLength;\n\t    var i, mid;\n\t\n\t    trace.frames = [];\n\t    for (i = 0; i < stack.length; ++i) {\n\t      stackFrame = stack[i];\n\t      frame = {\n\t        filename: stackFrame.url ? _.sanitizeUrl(stackFrame.url) : '(unknown)',\n\t        lineno: stackFrame.line || null,\n\t        method: (!stackFrame.func || stackFrame.func === '?') ? '[anonymous]' : stackFrame.func,\n\t        colno: stackFrame.column\n\t      };\n\t      if (options.sendFrameUrl) {\n\t        frame.url = stackFrame.url;\n\t      }\n\t      if (frame.method && frame.method.endsWith && frame.method.endsWith('_rollbar_wrapped')) {\n\t        continue;\n\t      }\n\t\n\t      code = pre = post = null;\n\t      contextLength = stackFrame.context ? stackFrame.context.length : 0;\n\t      if (contextLength) {\n\t        mid = Math.floor(contextLength / 2);\n\t        pre = stackFrame.context.slice(0, mid);\n\t        code = stackFrame.context[mid];\n\t        post = stackFrame.context.slice(mid);\n\t      }\n\t\n\t      if (code) {\n\t        frame.code = code;\n\t      }\n\t\n\t      if (pre || post) {\n\t        frame.context = {};\n\t        if (pre && pre.length) {\n\t          frame.context.pre = pre;\n\t        }\n\t        if (post && post.length) {\n\t          frame.context.post = post;\n\t        }\n\t      }\n\t\n\t      if (stackFrame.args) {\n\t        frame.args = stackFrame.args;\n\t      }\n\t\n\t      trace.frames.push(frame);\n\t    }\n\t\n\t    // NOTE(cory): reverse the frames since rollbar.com expects the most recent call last\n\t    trace.frames.reverse();\n\t\n\t    if (custom) {\n\t      trace.extra = _.merge(custom);\n\t    }\n\t    _.set(item, 'data.body', {trace: trace});\n\t    callback(null, item);\n\t  } else {\n\t    item.message = className + ': ' + message;\n\t    addBodyMessage(item, options, callback);\n\t  }\n\t}\n\t\n\tfunction scrubPayload(item, options, callback) {\n\t  var scrubFields = options.scrubFields;\n\t  item.data = _.scrub(item.data, scrubFields);\n\t  callback(null, item);\n\t}\n\t\n\tmodule.exports = {\n\t  handleItemWithError: handleItemWithError,\n\t  ensureItemHasSomethingToSay: ensureItemHasSomethingToSay,\n\t  addBaseInfo: addBaseInfo,\n\t  addRequestInfo: addRequestInfo,\n\t  addClientInfo: addClientInfo,\n\t  addPluginInfo: addPluginInfo,\n\t  addBody: addBody,\n\t  scrubPayload: scrubPayload\n\t};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar ErrorStackParser = __webpack_require__(22);\n\t\n\tvar UNKNOWN_FUNCTION = '?';\n\tvar ERR_CLASS_REGEXP = new RegExp('^(([a-zA-Z0-9-_$ ]*): *)?(Uncaught )?([a-zA-Z0-9-_$ ]*): ');\n\t\n\tfunction guessFunctionName() {\n\t  return UNKNOWN_FUNCTION;\n\t}\n\t\n\t\n\tfunction gatherContext() {\n\t  return null;\n\t}\n\t\n\t\n\tfunction Frame(stackFrame) {\n\t  var data = {};\n\t\n\t  data._stackFrame = stackFrame;\n\t\n\t  data.url = stackFrame.fileName;\n\t  data.line = stackFrame.lineNumber;\n\t  data.func = stackFrame.functionName;\n\t  data.column = stackFrame.columnNumber;\n\t  data.args = stackFrame.args;\n\t\n\t  data.context = gatherContext();\n\t\n\t  return data;\n\t}\n\t\n\t\n\tfunction Stack(exception) {\n\t  function getStack() {\n\t    var parserStack = [];\n\t    var exc;\n\t\n\t    if (!exception.stack) {\n\t      try {\n\t        throw exception;\n\t      } catch (e) {\n\t        exc = e;\n\t      }\n\t    } else {\n\t      exc = exception;\n\t    }\n\t\n\t    try {\n\t      parserStack = ErrorStackParser.parse(exc);\n\t    } catch(e) {\n\t      parserStack = [];\n\t    }\n\t\n\t    var stack = [];\n\t\n\t    for (var i = 0; i < parserStack.length; i++) {\n\t      stack.push(new Frame(parserStack[i]));\n\t    }\n\t\n\t    return stack;\n\t  }\n\t\n\t  var name = exception.constructor && exception.constructor.name;\n\t  if (!name || !name.length || name.length < 3) {\n\t    name = exception.name;\n\t  }\n\t\n\t  return {\n\t    stack: getStack(),\n\t    message: exception.message,\n\t    name: name,\n\t    rawStack: exception.stack,\n\t    rawException: exception\n\t  };\n\t}\n\t\n\t\n\tfunction parse(e) {\n\t  return new Stack(e);\n\t}\n\t\n\t\n\tfunction guessErrorClass(errMsg) {\n\t  if (!errMsg || !errMsg.match) {\n\t    return ['Unknown error. There was no error message to display.', ''];\n\t  }\n\t  var errClassMatch = errMsg.match(ERR_CLASS_REGEXP);\n\t  var errClass = '(unknown)';\n\t\n\t  if (errClassMatch) {\n\t    errClass = errClassMatch[errClassMatch.length - 1];\n\t    errMsg = errMsg.replace((errClassMatch[errClassMatch.length - 2] || '') + errClass + ':', '');\n\t    errMsg = errMsg.replace(/(^[\\s]+|[\\s]+$)/g, '');\n\t  }\n\t  return [errClass, errMsg];\n\t}\n\t\n\t\n\tmodule.exports = {\n\t  guessFunctionName: guessFunctionName,\n\t  guessErrorClass: guessErrorClass,\n\t  gatherContext: gatherContext,\n\t  parse: parse,\n\t  Stack: Stack,\n\t  Frame: Frame\n\t};\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n\t    'use strict';\n\t    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\t\n\t    /* istanbul ignore next */\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(23)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports === 'object') {\n\t        module.exports = factory(require('stackframe'));\n\t    } else {\n\t        root.ErrorStackParser = factory(root.StackFrame);\n\t    }\n\t}(this, function ErrorStackParser(StackFrame) {\n\t    'use strict';\n\t\n\t    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n\t    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n\t    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n\t\n\t    function _map(array, fn, thisArg) {\n\t        if (typeof Array.prototype.map === 'function') {\n\t            return array.map(fn, thisArg);\n\t        } else {\n\t            var output = new Array(array.length);\n\t            for (var i = 0; i < array.length; i++) {\n\t                output[i] = fn.call(thisArg, array[i]);\n\t            }\n\t            return output;\n\t        }\n\t    }\n\t\n\t    function _filter(array, fn, thisArg) {\n\t        if (typeof Array.prototype.filter === 'function') {\n\t            return array.filter(fn, thisArg);\n\t        } else {\n\t            var output = [];\n\t            for (var i = 0; i < array.length; i++) {\n\t                if (fn.call(thisArg, array[i])) {\n\t                    output.push(array[i]);\n\t                }\n\t            }\n\t            return output;\n\t        }\n\t    }\n\t\n\t    return {\n\t        /**\n\t         * Given an Error object, extract the most information from it.\n\t         * @param error {Error}\n\t         * @return Array[StackFrame]\n\t         */\n\t        parse: function ErrorStackParser$$parse(error) {\n\t            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n\t                return this.parseOpera(error);\n\t            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n\t                return this.parseV8OrIE(error);\n\t            } else if (error.stack) {\n\t                return this.parseFFOrSafari(error);\n\t            } else {\n\t                throw new Error('Cannot parse given Error object');\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Separate line and column numbers from a URL-like string.\n\t         * @param urlLike String\n\t         * @return Array[String]\n\t         */\n\t        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n\t            // Fail-fast but return locations like \"(native)\"\n\t            if (urlLike.indexOf(':') === -1) {\n\t                return [urlLike];\n\t            }\n\t\n\t            var locationParts = urlLike.replace(/[\\(\\)\\s]/g, '').split(':');\n\t            var lastNumber = locationParts.pop();\n\t            var possibleNumber = locationParts[locationParts.length - 1];\n\t            if (!isNaN(parseFloat(possibleNumber)) && isFinite(possibleNumber)) {\n\t                var lineNumber = locationParts.pop();\n\t                return [locationParts.join(':'), lineNumber, lastNumber];\n\t            } else {\n\t                return [locationParts.join(':'), lastNumber, undefined];\n\t            }\n\t        },\n\t\n\t        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n\t            var filtered = _filter(error.stack.split('\\n'), function (line) {\n\t                return !!line.match(CHROME_IE_STACK_REGEXP);\n\t            }, this);\n\t\n\t            return _map(filtered, function (line) {\n\t                if (line.indexOf('(eval ') > -1) {\n\t                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n\t                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, '');\n\t                }\n\t                var tokens = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').split(/\\s+/).slice(1);\n\t                var locationParts = this.extractLocation(tokens.pop());\n\t                var functionName = tokens.join(' ') || undefined;\n\t                var fileName = locationParts[0] === 'eval' ? undefined : locationParts[0];\n\t\n\t                return new StackFrame(functionName, undefined, fileName, locationParts[1], locationParts[2], line);\n\t            }, this);\n\t        },\n\t\n\t        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n\t            var filtered = _filter(error.stack.split('\\n'), function (line) {\n\t                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n\t            }, this);\n\t\n\t            return _map(filtered, function (line) {\n\t                // Throw away eval information until we implement stacktrace.js/stackframe#8\n\t                if (line.indexOf(' > eval') > -1) {\n\t                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ':$1');\n\t                }\n\t\n\t                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n\t                    // Safari eval frames only have function names and nothing else\n\t                    return new StackFrame(line);\n\t                } else {\n\t                    var tokens = line.split('@');\n\t                    var locationParts = this.extractLocation(tokens.pop());\n\t                    var functionName = tokens.shift() || undefined;\n\t                    return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2], line);\n\t                }\n\t            }, this);\n\t        },\n\t\n\t        parseOpera: function ErrorStackParser$$parseOpera(e) {\n\t            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n\t                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n\t                return this.parseOpera9(e);\n\t            } else if (!e.stack) {\n\t                return this.parseOpera10(e);\n\t            } else {\n\t                return this.parseOpera11(e);\n\t            }\n\t        },\n\t\n\t        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n\t            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n\t            var lines = e.message.split('\\n');\n\t            var result = [];\n\t\n\t            for (var i = 2, len = lines.length; i < len; i += 2) {\n\t                var match = lineRE.exec(lines[i]);\n\t                if (match) {\n\t                    result.push(new StackFrame(undefined, undefined, match[2], match[1], undefined, lines[i]));\n\t                }\n\t            }\n\t\n\t            return result;\n\t        },\n\t\n\t        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n\t            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n\t            var lines = e.stacktrace.split('\\n');\n\t            var result = [];\n\t\n\t            for (var i = 0, len = lines.length; i < len; i += 2) {\n\t                var match = lineRE.exec(lines[i]);\n\t                if (match) {\n\t                    result.push(new StackFrame(match[3] || undefined, undefined, match[2], match[1], undefined, lines[i]));\n\t                }\n\t            }\n\t\n\t            return result;\n\t        },\n\t\n\t        // Opera 10.65+ Error.stack very similar to FF/Safari\n\t        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n\t            var filtered = _filter(error.stack.split('\\n'), function (line) {\n\t                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) &&\n\t                    !line.match(/^Error created at/);\n\t            }, this);\n\t\n\t            return _map(filtered, function (line) {\n\t                var tokens = line.split('@');\n\t                var locationParts = this.extractLocation(tokens.pop());\n\t                var functionCall = (tokens.shift() || '');\n\t                var functionName = functionCall\n\t                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n\t                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n\t                var argsRaw;\n\t                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n\t                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n\t                }\n\t                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ? undefined : argsRaw.split(',');\n\t                return new StackFrame(functionName, args, locationParts[0], locationParts[1], locationParts[2], line);\n\t            }, this);\n\t        }\n\t    };\n\t}));\n\t\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n\t    'use strict';\n\t    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\t\n\t    /* istanbul ignore next */\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports === 'object') {\n\t        module.exports = factory();\n\t    } else {\n\t        root.StackFrame = factory();\n\t    }\n\t}(this, function () {\n\t    'use strict';\n\t    function _isNumber(n) {\n\t        return !isNaN(parseFloat(n)) && isFinite(n);\n\t    }\n\t\n\t    function StackFrame(functionName, args, fileName, lineNumber, columnNumber, source) {\n\t        if (functionName !== undefined) {\n\t            this.setFunctionName(functionName);\n\t        }\n\t        if (args !== undefined) {\n\t            this.setArgs(args);\n\t        }\n\t        if (fileName !== undefined) {\n\t            this.setFileName(fileName);\n\t        }\n\t        if (lineNumber !== undefined) {\n\t            this.setLineNumber(lineNumber);\n\t        }\n\t        if (columnNumber !== undefined) {\n\t            this.setColumnNumber(columnNumber);\n\t        }\n\t        if (source !== undefined) {\n\t            this.setSource(source);\n\t        }\n\t    }\n\t\n\t    StackFrame.prototype = {\n\t        getFunctionName: function () {\n\t            return this.functionName;\n\t        },\n\t        setFunctionName: function (v) {\n\t            this.functionName = String(v);\n\t        },\n\t\n\t        getArgs: function () {\n\t            return this.args;\n\t        },\n\t        setArgs: function (v) {\n\t            if (Object.prototype.toString.call(v) !== '[object Array]') {\n\t                throw new TypeError('Args must be an Array');\n\t            }\n\t            this.args = v;\n\t        },\n\t\n\t        // NOTE: Property name may be misleading as it includes the path,\n\t        // but it somewhat mirrors V8's JavaScriptStackTraceApi\n\t        // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's\n\t        // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14\n\t        getFileName: function () {\n\t            return this.fileName;\n\t        },\n\t        setFileName: function (v) {\n\t            this.fileName = String(v);\n\t        },\n\t\n\t        getLineNumber: function () {\n\t            return this.lineNumber;\n\t        },\n\t        setLineNumber: function (v) {\n\t            if (!_isNumber(v)) {\n\t                throw new TypeError('Line Number must be a Number');\n\t            }\n\t            this.lineNumber = Number(v);\n\t        },\n\t\n\t        getColumnNumber: function () {\n\t            return this.columnNumber;\n\t        },\n\t        setColumnNumber: function (v) {\n\t            if (!_isNumber(v)) {\n\t                throw new TypeError('Column Number must be a Number');\n\t            }\n\t            this.columnNumber = Number(v);\n\t        },\n\t\n\t        getSource: function () {\n\t            return this.source;\n\t        },\n\t        setSource: function (v) {\n\t            this.source = String(v);\n\t        },\n\t\n\t        toString: function() {\n\t            var functionName = this.getFunctionName() || '{anonymous}';\n\t            var args = '(' + (this.getArgs() || []).join(',') + ')';\n\t            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n\t            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n\t            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n\t            return functionName + args + fileName + lineNumber + columnNumber;\n\t        }\n\t    };\n\t\n\t    return StackFrame;\n\t}));\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(5);\n\t\n\tfunction itemToPayload(item, options, callback) {\n\t  var payloadOptions = options.payload || {};\n\t  if (payloadOptions.body) {\n\t    delete payloadOptions.body;\n\t  }\n\t\n\t  var data = _.merge(item.data, payloadOptions);\n\t  if (item._isUncaught) {\n\t    data._isUncaught = true;\n\t  }\n\t  if (item._originalArgs) {\n\t    data._originalArgs = item._originalArgs;\n\t  }\n\t  callback(null, data);\n\t}\n\t\n\tfunction addTelemetryData(item, options, callback) {\n\t  if (item.telemetryEvents) {\n\t    _.set(item, 'data.body.telemetry', item.telemetryEvents);\n\t  }\n\t  callback(null, item);\n\t}\n\t\n\tfunction addMessageWithError(item, options, callback) {\n\t  if (!item.message) {\n\t    callback(null, item);\n\t    return;\n\t  }\n\t  var tracePath = 'data.body.trace_chain.0';\n\t  var trace = _.get(item, tracePath);\n\t  if (!trace) {\n\t    tracePath = 'data.body.trace';\n\t    trace = _.get(item, tracePath);\n\t  }\n\t  if (trace) {\n\t    if (!(trace.exception && trace.exception.description)) {\n\t      _.set(item, tracePath+'.exception.description', item.message);\n\t      callback(null, item);\n\t      return;\n\t    }\n\t    var extra = _.get(item, tracePath+'.extra') || {};\n\t    var newExtra =  _.merge(extra, {message: item.message});\n\t    _.set(item, tracePath+'.extra', newExtra);\n\t  }\n\t  callback(null, item);\n\t}\n\t\n\tfunction userTransform(logger) {\n\t  return function(item, options, callback) {\n\t    var newItem = _.merge(item);\n\t    try {\n\t      if (_.isFunction(options.transform)) {\n\t        options.transform(newItem.data, item);\n\t      }\n\t    } catch (e) {\n\t      options.transform = null;\n\t      logger.error('Error while calling custom transform() function. Removing custom transform().', e);\n\t      callback(null, item);\n\t      return;\n\t    }\n\t    callback(null, newItem);\n\t  }\n\t}\n\t\n\tfunction addConfigToPayload(item, options, callback) {\n\t  if (!options.sendConfig) {\n\t    return callback(null, item);\n\t  }\n\t  var configKey = '_rollbarConfig';\n\t  var custom = _.get(item, 'data.custom') || {};\n\t  custom[configKey] = options;\n\t  item.data.custom = custom;\n\t  callback(null, item);\n\t}\n\t\n\tmodule.exports = {\n\t  itemToPayload: itemToPayload,\n\t  addTelemetryData: addTelemetryData,\n\t  addMessageWithError: addMessageWithError,\n\t  userTransform: userTransform,\n\t  addConfigToPayload: addConfigToPayload\n\t};\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(5);\n\t\n\tfunction checkIgnore(item, settings) {\n\t  if (_.get(settings, 'plugins.jquery.ignoreAjaxErrors')) {\n\t    return !_.get(item, 'body.message.extra.isAjax');\n\t  }\n\t  return true;\n\t}\n\t\n\tmodule.exports = {\n\t  checkIgnore: checkIgnore\n\t};\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(5);\n\t\n\tfunction checkLevel(item, settings) {\n\t  var level = item.level;\n\t  var levelVal = _.LEVELS[level] || 0;\n\t  var reportLevel = settings.reportLevel;\n\t  var reportLevelVal = _.LEVELS[reportLevel] || 0;\n\t\n\t  if (levelVal < reportLevelVal) {\n\t    return false;\n\t  }\n\t  return true;\n\t}\n\t\n\tfunction userCheckIgnore(logger) {\n\t  return function(item, settings) {\n\t    var isUncaught = !!item._isUncaught;\n\t    delete item._isUncaught;\n\t    var args = item._originalArgs;\n\t    delete item._originalArgs;\n\t    try {\n\t      if (_.isFunction(settings.onSendCallback)) {\n\t        settings.onSendCallback(isUncaught, args, item);\n\t      }\n\t    } catch (e) {\n\t      settings.onSendCallback = null;\n\t      logger.error('Error while calling onSendCallback, removing', e);\n\t    }\n\t    try {\n\t      if (_.isFunction(settings.checkIgnore) && settings.checkIgnore(isUncaught, args, item)) {\n\t        return false;\n\t      }\n\t    } catch (e) {\n\t      settings.checkIgnore = null;\n\t      logger.error('Error while calling custom checkIgnore(), removing', e);\n\t    }\n\t    return true;\n\t  }\n\t}\n\t\n\tfunction urlIsNotBlacklisted(logger) {\n\t  return function(item, settings) {\n\t    return !urlIsOnAList(item, settings, 'blacklist', logger);\n\t  }\n\t}\n\t\n\tfunction urlIsWhitelisted(logger) {\n\t  return function(item, settings) {\n\t    return urlIsOnAList(item, settings, 'whitelist', logger);\n\t  }\n\t}\n\t\n\tfunction urlIsOnAList(item, settings, whiteOrBlack, logger) {\n\t  // whitelist is the default\n\t  var black = false;\n\t  if (whiteOrBlack === 'blacklist') {\n\t    black = true;\n\t  }\n\t  var list, trace, frame, filename, frameLength, url, listLength, urlRegex;\n\t  var i, j;\n\t\n\t  try {\n\t    list = black ? settings.hostBlackList : settings.hostWhiteList;\n\t    listLength = list && list.length;\n\t    trace = _.get(item, 'body.trace');\n\t\n\t    // These two checks are important to come first as they are defaults\n\t    // in case the list is missing or the trace is missing or not well-formed\n\t    if (!list || listLength === 0) {\n\t      return !black;\n\t    }\n\t    if (!trace || !trace.frames || trace.frames.length === 0) {\n\t      return !black;\n\t    }\n\t\n\t    frameLength = trace.frames.length;\n\t    for (i = 0; i < frameLength; i++) {\n\t      frame = trace.frames[i];\n\t      filename = frame.filename;\n\t\n\t      if (!_.isType(filename, 'string')) {\n\t        return !black;\n\t      }\n\t\n\t      for (j = 0; j < listLength; j++) {\n\t        url = list[j];\n\t        urlRegex = new RegExp(url);\n\t\n\t        if (urlRegex.test(filename)) {\n\t          return true;\n\t        }\n\t      }\n\t    }\n\t  } catch (e)\n\t  /* istanbul ignore next */\n\t  {\n\t    if (black) {\n\t      settings.hostBlackList = null;\n\t    } else {\n\t      settings.hostWhiteList = null;\n\t    }\n\t    var listName = black ? 'hostBlackList' : 'hostWhiteList';\n\t    logger.error('Error while reading your configuration\\'s ' + listName + ' option. Removing custom ' + listName + '.', e);\n\t    return !black;\n\t  }\n\t  return false;\n\t}\n\t\n\tfunction messageIsIgnored(logger) {\n\t  return function(item, settings) {\n\t    var exceptionMessage, i, ignoredMessages,\n\t        len, messageIsIgnored, rIgnoredMessage,\n\t        body, traceMessage, bodyMessage;\n\t\n\t    try {\n\t      messageIsIgnored = false;\n\t      ignoredMessages = settings.ignoredMessages;\n\t\n\t      if (!ignoredMessages || ignoredMessages.length === 0) {\n\t        return true;\n\t      }\n\t\n\t      body = item.body;\n\t      traceMessage = _.get(body, 'trace.exception.message');\n\t      bodyMessage = _.get(body, 'message.body');\n\t\n\t      exceptionMessage = traceMessage || bodyMessage;\n\t\n\t      if (!exceptionMessage){\n\t        return true;\n\t      }\n\t\n\t      len = ignoredMessages.length;\n\t      for (i = 0; i < len; i++) {\n\t        rIgnoredMessage = new RegExp(ignoredMessages[i], 'gi');\n\t        messageIsIgnored = rIgnoredMessage.test(exceptionMessage);\n\t\n\t        if (messageIsIgnored) {\n\t          break;\n\t        }\n\t      }\n\t    } catch(e)\n\t    /* istanbul ignore next */\n\t    {\n\t      settings.ignoredMessages = null;\n\t      logger.error('Error while reading your configuration\\'s ignoredMessages option. Removing custom ignoredMessages.');\n\t    }\n\t\n\t    return !messageIsIgnored;\n\t  }\n\t}\n\t\n\tmodule.exports = {\n\t  checkLevel: checkLevel,\n\t  userCheckIgnore: userCheckIgnore,\n\t  urlIsNotBlacklisted: urlIsNotBlacklisted,\n\t  urlIsWhitelisted: urlIsWhitelisted,\n\t  messageIsIgnored: messageIsIgnored\n\t};\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(5);\n\tvar urlparser = __webpack_require__(19);\n\tvar domUtil = __webpack_require__(28);\n\t\n\tvar defaults = {\n\t  network: true,\n\t  networkResponseHeaders: false,\n\t  networkResponseBody: false,\n\t  networkRequestBody: false,\n\t  log: true,\n\t  dom: true,\n\t  navigation: true,\n\t  connectivity: true\n\t};\n\t\n\tfunction replace(obj, name, replacement, replacements, type) {\n\t  var orig = obj[name];\n\t  obj[name] = replacement(orig);\n\t  if (replacements) {\n\t    replacements[type].push([obj, name, orig]);\n\t  }\n\t}\n\t\n\tfunction restore(replacements, type) {\n\t  var b;\n\t  while (replacements[type].length) {\n\t    b = replacements[type].shift();\n\t    b[0][b[1]] = b[2];\n\t  }\n\t}\n\t\n\tfunction nameFromDescription(description) {\n\t  if (!description || !description.attributes) { return null; }\n\t  var attrs = description.attributes;\n\t  for (var a = 0; a < attrs.length; ++a) {\n\t    if (attrs[a].key === 'name') {\n\t      return attrs[a].value;\n\t    }\n\t  }\n\t  return null;\n\t}\n\t\n\tfunction defaultValueScrubber(scrubFields) {\n\t  var patterns = [];\n\t  for (var i = 0; i < scrubFields.length; ++i) {\n\t    patterns.push(new RegExp(scrubFields[i], 'i'));\n\t  }\n\t  return function(description) {\n\t    var name = nameFromDescription(description);\n\t    if (!name) { return false; }\n\t    for (var i = 0; i < patterns.length; ++i) {\n\t      if (patterns[i].test(name)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  };\n\t}\n\t\n\tfunction Instrumenter(options, telemeter, rollbar, _window, _document) {\n\t  var autoInstrument = options.autoInstrument;\n\t  if (options.enabled === false || autoInstrument === false) {\n\t    this.autoInstrument = {};\n\t  } else {\n\t    if (!_.isType(autoInstrument, 'object')) {\n\t      autoInstrument = defaults;\n\t    }\n\t    this.autoInstrument = _.merge(defaults, autoInstrument);\n\t  }\n\t  this.scrubTelemetryInputs = !!options.scrubTelemetryInputs;\n\t  this.telemetryScrubber = options.telemetryScrubber;\n\t  this.defaultValueScrubber = defaultValueScrubber(options.scrubFields);\n\t  this.telemeter = telemeter;\n\t  this.rollbar = rollbar;\n\t  this._window = _window || {};\n\t  this._document = _document || {};\n\t  this.replacements = {\n\t    network: [],\n\t    log: [],\n\t    navigation: [],\n\t    connectivity: []\n\t  };\n\t  this.eventRemovers = {\n\t    dom: [],\n\t    connectivity: []\n\t  };\n\t\n\t  this._location = this._window.location;\n\t  this._lastHref = this._location && this._location.href;\n\t}\n\t\n\tInstrumenter.prototype.configure = function(options) {\n\t  var autoInstrument = options.autoInstrument;\n\t  var oldSettings = _.merge(this.autoInstrument);\n\t  if (options.enabled === false || autoInstrument === false) {\n\t    this.autoInstrument = {};\n\t  } else {\n\t    if (!_.isType(autoInstrument, 'object')) {\n\t      autoInstrument = defaults;\n\t    }\n\t    this.autoInstrument = _.merge(defaults, autoInstrument);\n\t  }\n\t  this.instrument(oldSettings);\n\t  if (options.scrubTelemetryInputs !== undefined) {\n\t    this.scrubTelemetryInputs = !!options.scrubTelemetryInputs;\n\t  }\n\t  if (options.telemetryScrubber !== undefined) {\n\t    this.telemetryScrubber = options.telemetryScrubber;\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.instrument = function(oldSettings) {\n\t  if (this.autoInstrument.network && !(oldSettings && oldSettings.network)) {\n\t    this.instrumentNetwork();\n\t  } else if (!this.autoInstrument.network && oldSettings && oldSettings.network) {\n\t    this.deinstrumentNetwork();\n\t  }\n\t\n\t  if (this.autoInstrument.log && !(oldSettings && oldSettings.log)) {\n\t    this.instrumentConsole();\n\t  } else if (!this.autoInstrument.log && oldSettings && oldSettings.log) {\n\t    this.deinstrumentConsole();\n\t  }\n\t\n\t  if (this.autoInstrument.dom && !(oldSettings && oldSettings.dom)) {\n\t    this.instrumentDom();\n\t  } else if (!this.autoInstrument.dom && oldSettings && oldSettings.dom) {\n\t    this.deinstrumentDom();\n\t  }\n\t\n\t  if (this.autoInstrument.navigation && !(oldSettings && oldSettings.navigation)) {\n\t    this.instrumentNavigation();\n\t  } else if (!this.autoInstrument.navigation && oldSettings && oldSettings.navigation) {\n\t    this.deinstrumentNavigation();\n\t  }\n\t\n\t  if (this.autoInstrument.connectivity && !(oldSettings && oldSettings.connectivity)) {\n\t    this.instrumentConnectivity();\n\t  } else if (!this.autoInstrument.connectivity && oldSettings && oldSettings.connectivity) {\n\t    this.deinstrumentConnectivity();\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.deinstrumentNetwork = function() {\n\t  restore(this.replacements, 'network');\n\t};\n\t\n\tInstrumenter.prototype.instrumentNetwork = function() {\n\t  var self = this;\n\t\n\t  function wrapProp(prop, xhr) {\n\t    if (prop in xhr && _.isFunction(xhr[prop])) {\n\t      replace(xhr, prop, function(orig) {\n\t        return self.rollbar.wrap(orig);\n\t      });\n\t    }\n\t  }\n\t\n\t  if ('XMLHttpRequest' in this._window) {\n\t    var xhrp = this._window.XMLHttpRequest.prototype;\n\t    replace(xhrp, 'open', function(orig) {\n\t      return function(method, url) {\n\t        if (_.isType(url, 'string')) {\n\t          this.__rollbar_xhr = {\n\t            method: method,\n\t            url: url,\n\t            status_code: null,\n\t            start_time_ms: _.now(),\n\t            end_time_ms: null\n\t          };\n\t        }\n\t        return orig.apply(this, arguments);\n\t      };\n\t    }, this.replacements, 'network');\n\t\n\t    replace(xhrp, 'send', function(orig) {\n\t      /* eslint-disable no-unused-vars */\n\t      return function(data) {\n\t      /* eslint-enable no-unused-vars */\n\t        var xhr = this;\n\t\n\t        function onreadystatechangeHandler() {\n\t          if (xhr.__rollbar_xhr) {\n\t            if (xhr.__rollbar_xhr.status_code === null) {\n\t              xhr.__rollbar_xhr.status_code = 0;\n\t              var requestData = null;\n\t              if (self.autoInstrument.networkRequestBody) {\n\t                requestData = data;\n\t              }\n\t              xhr.__rollbar_event = self.telemeter.captureNetwork(xhr.__rollbar_xhr, 'xhr', undefined, requestData);\n\t            }\n\t            if (xhr.readyState < 2) {\n\t              xhr.__rollbar_xhr.start_time_ms = _.now();\n\t            }\n\t            if (xhr.readyState > 3) {\n\t              xhr.__rollbar_xhr.end_time_ms = _.now();\n\t\n\t              var headers = null;\n\t              if (self.autoInstrument.networkResponseHeaders) {\n\t                var headersConfig = self.autoInstrument.networkResponseHeaders;\n\t                headers = {};\n\t                try {\n\t                  var header, i;\n\t                  if (headersConfig === true) {\n\t                    var allHeaders = xhr.getAllResponseHeaders();\n\t                    if (allHeaders) {\n\t                      var arr = allHeaders.trim().split(/[\\r\\n]+/);\n\t                      var parts, value;\n\t                      for (i=0; i < arr.length; i++) {\n\t                        parts = arr[i].split(': ');\n\t                        header = parts.shift();\n\t                        value = parts.join(': ');\n\t                        headers[header] = value;\n\t                      }\n\t                    }\n\t                  } else {\n\t                    for (i=0; i < headersConfig.length; i++) {\n\t                      header = headersConfig[i];\n\t                      headers[header] = xhr.getResponseHeader(header);\n\t                    }\n\t                  }\n\t                } catch (e) {\n\t                  /* we ignore the errors here that could come from different\n\t                   * browser issues with the xhr methods */\n\t                }\n\t              }\n\t              var body = null;\n\t              if (self.autoInstrument.networkResponseBody) {\n\t                try {\n\t                  body = xhr.responseText;\n\t                } catch (e) {\n\t                  /* ignore errors from reading responseText */\n\t                }\n\t              }\n\t              var response = null;\n\t              if (body || headers) {\n\t                response = {};\n\t                if (body) {\n\t                  response.body = body;\n\t                }\n\t                if (headers) {\n\t                  response.headers = headers;\n\t                }\n\t              }\n\t              if (response) {\n\t                xhr.__rollbar_xhr.response = response;\n\t              }\n\t              try {\n\t                var code = xhr.status;\n\t                code = code === 1223 ? 204 : code;\n\t                xhr.__rollbar_xhr.status_code = code;\n\t                xhr.__rollbar_event.level = self.telemeter.levelFromStatus(code);\n\t              } catch (e) {\n\t                /* ignore possible exception from xhr.status */\n\t              }\n\t            }\n\t          }\n\t        }\n\t\n\t        wrapProp('onload', xhr);\n\t        wrapProp('onerror', xhr);\n\t        wrapProp('onprogress', xhr);\n\t\n\t        if ('onreadystatechange' in xhr && _.isFunction(xhr.onreadystatechange)) {\n\t          replace(xhr, 'onreadystatechange', function(orig) {\n\t            return self.rollbar.wrap(orig, undefined, onreadystatechangeHandler);\n\t          });\n\t        } else {\n\t          xhr.onreadystatechange = onreadystatechangeHandler;\n\t        }\n\t        return orig.apply(this, arguments);\n\t      }\n\t    }, this.replacements, 'network');\n\t  }\n\t\n\t  if ('fetch' in this._window) {\n\t    replace(this._window, 'fetch', function(orig) {\n\t      /* eslint-disable no-unused-vars */\n\t      return function(fn, t) {\n\t      /* eslint-enable no-unused-vars */\n\t        var args = new Array(arguments.length);\n\t        for (var i=0, len=args.length; i < len; i++) {\n\t          args[i] = arguments[i];\n\t        }\n\t        var input = args[0];\n\t        var method = 'GET';\n\t        var url;\n\t        if (_.isType(input, 'string')) {\n\t          url = input;\n\t        } else if (input) {\n\t          url = input.url;\n\t          if (input.method) {\n\t            method = input.method;\n\t          }\n\t        }\n\t        if (args[1] && args[1].method) {\n\t          method = args[1].method;\n\t        }\n\t        var metadata = {\n\t          method: method,\n\t          url: url,\n\t          status_code: null,\n\t          start_time_ms: _.now(),\n\t          end_time_ms: null\n\t        };\n\t        var requestData = null;\n\t        if (self.autoInstrument.networkRequestBody) {\n\t          if (args[1] && args[1].body) {\n\t            requestData = args[1].body;\n\t          } else if (args[0] && !_.isType(args[0], 'string') && args[0].body) {\n\t            requestData = args[0].body;\n\t          }\n\t        }\n\t        self.telemeter.captureNetwork(metadata, 'fetch', undefined, requestData);\n\t        return orig.apply(this, args).then(function (resp) {\n\t          metadata.end_time_ms = _.now();\n\t          metadata.status_code = resp.status;\n\t          var headers = null;\n\t          if (self.autoInstrument.networkResponseHeaders) {\n\t            var headersConfig = self.autoInstrument.networkResponseHeaders;\n\t            headers = {};\n\t            try {\n\t              if (headersConfig === true) {\n\t                // This is unsupported in IE so we can't do it\n\t                /*\n\t                var allHeaders = resp.headers.entries();\n\t                for (var pair of allHeaders) {\n\t                  headers[pair[0]] = pair[1];\n\t                }\n\t                */\n\t              } else {\n\t                for (var i=0; i < headersConfig.length; i++) {\n\t                  var header = headersConfig[i];\n\t                  headers[header] = resp.headers.get(header);\n\t                }\n\t              }\n\t            } catch (e) {\n\t              /* ignore probable IE errors */\n\t            }\n\t          }\n\t          var response = null;\n\t          if (headers) {\n\t            response = {\n\t              headers: headers\n\t            };\n\t          }\n\t          if (response) {\n\t            metadata.response = response;\n\t          }\n\t          return resp;\n\t        });\n\t      };\n\t    }, this.replacements, 'network');\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.deinstrumentConsole = function() {\n\t  if (!('console' in this._window && this._window.console.log)) {\n\t    return;\n\t  }\n\t  var b;\n\t  while (this.replacements['log'].length) {\n\t    b = this.replacements['log'].shift();\n\t    this._window.console[b[0]] = b[1];\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.instrumentConsole = function() {\n\t  if (!('console' in this._window && this._window.console.log)) {\n\t    return;\n\t  }\n\t\n\t  var self = this;\n\t  var c = this._window.console;\n\t\n\t  function wrapConsole(method) {\n\t    var orig = c[method];\n\t    var origConsole = c;\n\t    var level = method === 'warn' ? 'warning' : method;\n\t    c[method] = function() {\n\t      var args = Array.prototype.slice.call(arguments);\n\t      var message = _.formatArgsAsString(args);\n\t      self.telemeter.captureLog(message, level);\n\t      if (orig) {\n\t        Function.prototype.apply.call(orig, origConsole, args);\n\t      }\n\t    };\n\t    self.replacements['log'].push([method, orig]);\n\t  }\n\t  var methods = ['debug','info','warn','error','log'];\n\t  for (var i=0, len=methods.length; i < len; i++) {\n\t    wrapConsole(methods[i]);\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.deinstrumentDom = function() {\n\t  if (!('addEventListener' in this._window || 'attachEvent' in this._window)) {\n\t    return;\n\t  }\n\t  this.removeListeners('dom');\n\t};\n\t\n\tInstrumenter.prototype.instrumentDom = function() {\n\t  if (!('addEventListener' in this._window || 'attachEvent' in this._window)) {\n\t    return;\n\t  }\n\t  var clickHandler = this.handleClick.bind(this);\n\t  var blurHandler = this.handleBlur.bind(this);\n\t  this.addListener('dom', this._window, 'click', 'onclick', clickHandler, true);\n\t  this.addListener('dom', this._window, 'blur', 'onfocusout', blurHandler, true);\n\t};\n\t\n\tInstrumenter.prototype.handleClick = function(evt) {\n\t  try {\n\t    var e = domUtil.getElementFromEvent(evt, this._document);\n\t    var hasTag = e && e.tagName;\n\t    var anchorOrButton = domUtil.isDescribedElement(e, 'a') || domUtil.isDescribedElement(e, 'button');\n\t    if (hasTag && (anchorOrButton || domUtil.isDescribedElement(e, 'input', ['button', 'submit']))) {\n\t        this.captureDomEvent('click', e);\n\t    } else if (domUtil.isDescribedElement(e, 'input', ['checkbox', 'radio'])) {\n\t      this.captureDomEvent('input', e, e.value, e.checked);\n\t    }\n\t  } catch (exc) {\n\t    // TODO: Not sure what to do here\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.handleBlur = function(evt) {\n\t  try {\n\t    var e = domUtil.getElementFromEvent(evt, this._document);\n\t    if (e && e.tagName) {\n\t      if (domUtil.isDescribedElement(e, 'textarea')) {\n\t        this.captureDomEvent('input', e, e.value);\n\t      } else if (domUtil.isDescribedElement(e, 'select') && e.options && e.options.length) {\n\t        this.handleSelectInputChanged(e);\n\t      } else if (domUtil.isDescribedElement(e, 'input') && !domUtil.isDescribedElement(e, 'input', ['button', 'submit', 'hidden', 'checkbox', 'radio'])) {\n\t        this.captureDomEvent('input', e, e.value);\n\t      }\n\t    }\n\t  } catch (exc) {\n\t    // TODO: Not sure what to do here\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.handleSelectInputChanged = function(elem) {\n\t  if (elem.multiple) {\n\t    for (var i = 0; i < elem.options.length; i++) {\n\t      if (elem.options[i].selected) {\n\t        this.captureDomEvent('input', elem, elem.options[i].value);\n\t      }\n\t    }\n\t  } else if (elem.selectedIndex >= 0 && elem.options[elem.selectedIndex]) {\n\t    this.captureDomEvent('input', elem, elem.options[elem.selectedIndex].value);\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.captureDomEvent = function(subtype, element, value, isChecked) {\n\t  if (value !== undefined) {\n\t    if (this.scrubTelemetryInputs || (domUtil.getElementType(element) === 'password')) {\n\t      value = '[scrubbed]';\n\t    } else {\n\t      var description = domUtil.describeElement(element);\n\t      if (this.telemetryScrubber) {\n\t        if (this.telemetryScrubber(description)) {\n\t          value = '[scrubbed]';\n\t        }\n\t      } else if (this.defaultValueScrubber(description)) {\n\t        value = '[scrubbed]';\n\t      }\n\t    }\n\t  }\n\t  var elementString = domUtil.elementArrayToString(domUtil.treeToArray(element));\n\t  this.telemeter.captureDom(subtype, elementString, value, isChecked);\n\t};\n\t\n\tInstrumenter.prototype.deinstrumentNavigation = function() {\n\t  var chrome = this._window.chrome;\n\t  var chromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n\t  // See https://github.com/angular/angular.js/pull/13945/files\n\t  var hasPushState = !chromePackagedApp && this._window.history && this._window.history.pushState;\n\t  if (!hasPushState) {\n\t    return;\n\t  }\n\t  restore(this.replacements, 'navigation');\n\t};\n\t\n\tInstrumenter.prototype.instrumentNavigation = function() {\n\t  var chrome = this._window.chrome;\n\t  var chromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n\t  // See https://github.com/angular/angular.js/pull/13945/files\n\t  var hasPushState = !chromePackagedApp && this._window.history && this._window.history.pushState;\n\t  if (!hasPushState) {\n\t    return;\n\t  }\n\t  var self = this;\n\t  replace(this._window, 'onpopstate', function(orig) {\n\t    return function() {\n\t      var current = self._location.href;\n\t      self.handleUrlChange(self._lastHref, current);\n\t      if (orig) {\n\t        orig.apply(this, arguments);\n\t      }\n\t    };\n\t  }, this.replacements, 'navigation');\n\t\n\t  replace(this._window.history, 'pushState', function(orig) {\n\t    return function() {\n\t      var url = arguments.length > 2 ? arguments[2] : undefined;\n\t      if (url) {\n\t        self.handleUrlChange(self._lastHref, url + '');\n\t      }\n\t      return orig.apply(this, arguments);\n\t    };\n\t  }, this.replacements, 'navigation');\n\t};\n\t\n\tInstrumenter.prototype.handleUrlChange = function(from, to) {\n\t  var parsedHref = urlparser.parse(this._location.href);\n\t  var parsedTo = urlparser.parse(to);\n\t  var parsedFrom = urlparser.parse(from);\n\t  this._lastHref = to;\n\t  if (parsedHref.protocol === parsedTo.protocol && parsedHref.host === parsedTo.host) {\n\t    to = parsedTo.path + (parsedTo.hash || '');\n\t  }\n\t  if (parsedHref.protocol === parsedFrom.protocol && parsedHref.host === parsedFrom.host) {\n\t    from = parsedFrom.path + (parsedFrom.hash || '');\n\t  }\n\t  this.telemeter.captureNavigation(from, to);\n\t};\n\t\n\tInstrumenter.prototype.deinstrumentConnectivity = function() {\n\t  if (!('addEventListener' in this._window || 'body' in this._document)) {\n\t    return;\n\t  }\n\t  if (this._window.addEventListener) {\n\t    this.removeListeners('connectivity');\n\t  } else {\n\t    restore(this.replacements, 'connectivity');\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.instrumentConnectivity = function() {\n\t  if (!('addEventListener' in this._window || 'body' in this._document)) {\n\t    return;\n\t  }\n\t  if (this._window.addEventListener) {\n\t    this.addListener('connectivity', this._window, 'online', undefined, function() {\n\t      this.telemeter.captureConnectivityChange('online');\n\t    }.bind(this), true);\n\t    this.addListener('connectivity', this._window, 'offline', undefined, function() {\n\t      this.telemeter.captureConnectivityChange('offline');\n\t    }.bind(this), true);\n\t  } else {\n\t    var self = this;\n\t    replace(this._document.body, 'ononline', function(orig) {\n\t      return function() {\n\t        self.telemeter.captureConnectivityChange('online');\n\t        if (orig) {\n\t          orig.apply(this, arguments);\n\t        }\n\t      }\n\t    }, this.replacements, 'connectivity');\n\t    replace(this._document.body, 'onoffline', function(orig) {\n\t      return function() {\n\t        self.telemeter.captureConnectivityChange('offline');\n\t        if (orig) {\n\t          orig.apply(this, arguments);\n\t        }\n\t      }\n\t    }, this.replacements, 'connectivity');\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.addListener = function(section, obj, type, altType, handler, capture) {\n\t  if (obj.addEventListener) {\n\t    obj.addEventListener(type, handler, capture);\n\t    this.eventRemovers[section].push(function() {\n\t      obj.removeEventListener(type, handler, capture);\n\t    });\n\t  } else if (altType) {\n\t    obj.attachEvent(altType, handler);\n\t    this.eventRemovers[section].push(function() {\n\t      obj.detachEvent(altType, handler);\n\t    });\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.removeListeners = function(section) {\n\t  var r;\n\t  while (this.eventRemovers[section].length) {\n\t    r = this.eventRemovers[section].shift();\n\t    r();\n\t  }\n\t};\n\t\n\tmodule.exports = Instrumenter;\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tfunction getElementType(e) {\n\t  return (e.getAttribute('type') || '').toLowerCase();\n\t}\n\t\n\tfunction isDescribedElement(element, type, subtypes) {\n\t  if (element.tagName.toLowerCase() !== type.toLowerCase()) {\n\t    return false;\n\t  }\n\t  if (!subtypes) {\n\t    return true;\n\t  }\n\t  element = getElementType(element);\n\t  for (var i = 0; i < subtypes.length; i++) {\n\t    if (subtypes[i] === element) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\tfunction getElementFromEvent(evt, doc) {\n\t  if (evt.target) {\n\t    return evt.target;\n\t  }\n\t  if (doc && doc.elementFromPoint) {\n\t    return doc.elementFromPoint(evt.clientX, evt.clientY);\n\t  }\n\t  return undefined;\n\t}\n\t\n\tfunction treeToArray(elem) {\n\t  var MAX_HEIGHT = 5;\n\t  var out = [];\n\t  var nextDescription;\n\t  for (var height = 0; elem && height < MAX_HEIGHT; height++) {\n\t    nextDescription = describeElement(elem);\n\t    if (nextDescription.tagName === 'html') {\n\t      break;\n\t    }\n\t    out.unshift(nextDescription);\n\t    elem = elem.parentNode;\n\t  }\n\t  return out;\n\t}\n\t\n\tfunction elementArrayToString(a) {\n\t  var MAX_LENGTH = 80;\n\t  var separator = ' > ', separatorLength = separator.length;\n\t  var out = [], len = 0, nextStr, totalLength;\n\t\n\t  for (var i = a.length - 1; i >= 0; i--) {\n\t    nextStr = descriptionToString(a[i]);\n\t    totalLength = len + (out.length * separatorLength) + nextStr.length;\n\t    if (i < a.length - 1 && totalLength >= MAX_LENGTH + 3) {\n\t      out.unshift('...');\n\t      break;\n\t    }\n\t    out.unshift(nextStr);\n\t    len += nextStr.length;\n\t  }\n\t  return out.join(separator);\n\t}\n\t\n\tfunction descriptionToString(desc) {\n\t  if (!desc || !desc.tagName) {\n\t    return '';\n\t  }\n\t  var out = [desc.tagName];\n\t  if (desc.id) {\n\t    out.push('#' + desc.id);\n\t  }\n\t  if (desc.classes) {\n\t    out.push('.' + desc.classes.join('.'));\n\t  }\n\t  for (var i = 0; i < desc.attributes.length; i++) {\n\t    out.push('[' + desc.attributes[i].key + '=\"' + desc.attributes[i].value + '\"]');\n\t  }\n\t\n\t  return out.join('');\n\t}\n\t\n\t/**\n\t * Input: a dom element\n\t * Output: null if tagName is falsey or input is falsey, else\n\t *  {\n\t *    tagName: String,\n\t *    id: String | undefined,\n\t *    classes: [String] | undefined,\n\t *    attributes: [\n\t *      {\n\t *        key: OneOf(type, name, title, alt),\n\t *        value: String\n\t *      }\n\t *    ]\n\t *  }\n\t */\n\tfunction describeElement(elem) {\n\t  if (!elem || !elem.tagName) {\n\t    return null;\n\t  }\n\t  var out = {}, className, key, attr, i;\n\t  out.tagName = elem.tagName.toLowerCase();\n\t  if (elem.id) {\n\t    out.id = elem.id;\n\t  }\n\t  className = elem.className;\n\t  if (className && (typeof className === 'string')) {\n\t    out.classes = className.split(/\\s+/);\n\t  }\n\t  var attributes = ['type', 'name', 'title', 'alt'];\n\t  out.attributes = [];\n\t  for (i = 0; i < attributes.length; i++) {\n\t    key = attributes[i];\n\t    attr = elem.getAttribute(key);\n\t    if (attr) {\n\t      out.attributes.push({key: key, value: attr});\n\t    }\n\t  }\n\t  return out;\n\t}\n\t\n\tmodule.exports = {\n\t  describeElement: describeElement,\n\t  descriptionToString: descriptionToString,\n\t  elementArrayToString: elementArrayToString,\n\t  treeToArray: treeToArray,\n\t  getElementFromEvent: getElementFromEvent,\n\t  isDescribedElement: isDescribedElement,\n\t  getElementType: getElementType\n\t};\n\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// rollbar.noconflict.umd.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 197b436c5588bcd8fab2","'use strict';\n\nvar rollbar = require('../rollbar');\n\nif ((typeof window !== 'undefined') && !window._rollbarStartTime) {\n  window._rollbarStartTime = (new Date()).getTime();\n}\n\nmodule.exports = rollbar;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/bundles/rollbar.noconflict.js\n// module id = 1\n// module chunks = 0","'use strict';\n\nvar Client = require('../rollbar');\nvar _ = require('../utility');\nvar API = require('../api');\nvar logger = require('./logger');\nvar globals = require('./globalSetup');\n\nvar transport = require('./transport');\nvar urllib = require('./url');\n\nvar transforms = require('./transforms');\nvar sharedTransforms = require('../transforms');\nvar predicates = require('./predicates');\nvar sharedPredicates = require('../predicates');\nvar errorParser = require('./errorParser');\nvar Instrumenter = require('./telemetry');\n\nfunction Rollbar(options, client) {\n  this.options = _.handleOptions(defaultOptions, options);\n  var api = new API(this.options, transport, urllib);\n  this.client = client || new Client(this.options, api, logger, 'browser');\n\n  var gWindow = ((typeof window != 'undefined') && window) || ((typeof self != 'undefined') && self);\n  var gDocument = (typeof document != 'undefined') && document;\n  addTransformsToNotifier(this.client.notifier, gWindow);\n  addPredicatesToQueue(this.client.queue);\n  if (this.options.captureUncaught || this.options.handleUncaughtExceptions) {\n    globals.captureUncaughtExceptions(gWindow, this);\n    globals.wrapGlobals(gWindow, this);\n  }\n  if (this.options.captureUnhandledRejections || this.options.handleUnhandledRejections) {\n    globals.captureUnhandledRejections(gWindow, this);\n  }\n\n  this.instrumenter = new Instrumenter(this.options, this.client.telemeter, this, gWindow, gDocument);\n  this.instrumenter.instrument();\n}\n\nvar _instance = null;\nRollbar.init = function(options, client) {\n  if (_instance) {\n    return _instance.global(options).configure(options);\n  }\n  _instance = new Rollbar(options, client);\n  return _instance;\n};\n\nfunction handleUninitialized(maybeCallback) {\n  var message = 'Rollbar is not initialized';\n  logger.error(message);\n  if (maybeCallback) {\n    maybeCallback(new Error(message));\n  }\n}\n\nRollbar.prototype.global = function(options) {\n  this.client.global(options);\n  return this;\n};\nRollbar.global = function(options) {\n  if (_instance) {\n    return _instance.global(options);\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.prototype.configure = function(options, payloadData) {\n  var oldOptions = this.options;\n  var payload = {};\n  if (payloadData) {\n    payload = {payload: payloadData};\n  }\n  this.options = _.handleOptions(oldOptions, options, payload);\n  this.client.configure(this.options, payloadData);\n  this.instrumenter.configure(this.options);\n  return this;\n};\nRollbar.configure = function(options, payloadData) {\n  if (_instance) {\n    return _instance.configure(options, payloadData);\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.prototype.lastError = function() {\n  return this.client.lastError;\n};\nRollbar.lastError = function() {\n  if (_instance) {\n    return _instance.lastError();\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.prototype.log = function() {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.log(item);\n  return {uuid: uuid};\n};\nRollbar.log = function() {\n  if (_instance) {\n    return _instance.log.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.debug = function() {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.debug(item);\n  return {uuid: uuid};\n};\nRollbar.debug = function() {\n  if (_instance) {\n    return _instance.debug.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.info = function() {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.info(item);\n  return {uuid: uuid};\n};\nRollbar.info = function() {\n  if (_instance) {\n    return _instance.info.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.warn = function() {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.warn(item);\n  return {uuid: uuid};\n};\nRollbar.warn = function() {\n  if (_instance) {\n    return _instance.warn.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.warning = function() {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.warning(item);\n  return {uuid: uuid};\n};\nRollbar.warning = function() {\n  if (_instance) {\n    return _instance.warning.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.error = function() {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.error(item);\n  return {uuid: uuid};\n};\nRollbar.error = function() {\n  if (_instance) {\n    return _instance.error.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.critical = function() {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.critical(item);\n  return {uuid: uuid};\n};\nRollbar.critical = function() {\n  if (_instance) {\n    return _instance.critical.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.handleUncaughtException = function(message, url, lineno, colno, error, context) {\n  var item;\n  var stackInfo = _.makeUnhandledStackInfo(\n    message,\n    url,\n    lineno,\n    colno,\n    error,\n    'onerror',\n    'uncaught exception',\n    errorParser\n  );\n  if (_.isError(error)) {\n    item = this._createItem([message, error, context]);\n    item._unhandledStackInfo = stackInfo;\n  } else if (_.isError(url)) {\n    item = this._createItem([message, url, context]);\n    item._unhandledStackInfo = stackInfo;\n  } else {\n    item = this._createItem([message, context]);\n    item.stackInfo = stackInfo;\n  }\n  item.level = this.options.uncaughtErrorLevel;\n  item._isUncaught = true;\n  this.client.log(item);\n};\n\nRollbar.prototype.handleUnhandledRejection = function(reason, promise) {\n  var message = 'unhandled rejection was null or undefined!';\n  if (reason) {\n    if (reason.message) {\n      message = reason.message;\n    } else {\n      var reasonResult = _.stringify(reason);\n      if (reasonResult.value) {\n        message = reasonResult.value;\n      }\n    }\n  }\n  var context = (reason && reason._rollbarContext) || (promise && promise._rollbarContext);\n\n  var item;\n  if (_.isError(reason)) {\n    item = this._createItem([message, reason, context]);\n  } else {\n    item = this._createItem([message, reason, context]);\n    item.stackInfo = _.makeUnhandledStackInfo(\n      message,\n      '',\n      0,\n      0,\n      null,\n      'unhandledrejection',\n      '',\n      errorParser\n    );\n  }\n  item.level = this.options.uncaughtErrorLevel;\n  item._isUncaught = true;\n  item._originalArgs = item._originalArgs || [];\n  item._originalArgs.push(promise);\n  this.client.log(item);\n};\n\nRollbar.prototype.wrap = function(f, context, _before) {\n  try {\n    var ctxFn;\n    if(_.isFunction(context)) {\n      ctxFn = context;\n    } else {\n      ctxFn = function() { return context || {}; };\n    }\n\n    if (!_.isFunction(f)) {\n      return f;\n    }\n\n    if (f._isWrap) {\n      return f;\n    }\n\n    if (!f._rollbar_wrapped) {\n      f._rollbar_wrapped = function () {\n        if (_before && _.isFunction(_before)) {\n          _before.apply(this, arguments);\n        }\n        try {\n          return f.apply(this, arguments);\n        } catch(exc) {\n          var e = exc;\n          if (e && window._rollbarWrappedError !== e) {\n            if (_.isType(e, 'string')) {\n              e = new String(e);\n            }\n            e._rollbarContext = ctxFn() || {};\n            e._rollbarContext._wrappedSource = f.toString();\n\n            window._rollbarWrappedError = e;\n          }\n          throw e;\n        }\n      };\n\n      f._rollbar_wrapped._isWrap = true;\n\n      if (f.hasOwnProperty) {\n        for (var prop in f) {\n          if (f.hasOwnProperty(prop) && prop !== '_rollbar_wrapped') {\n            f._rollbar_wrapped[prop] = f[prop];\n          }\n        }\n      }\n    }\n\n    return f._rollbar_wrapped;\n  } catch (e) {\n    // Return the original function if the wrap fails.\n    return f;\n  }\n};\nRollbar.wrap = function(f, context) {\n  if (_instance) {\n    return _instance.wrap(f, context);\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.prototype.captureEvent = function() {\n  var event = _.createTelemetryEvent(arguments);\n  return this.client.captureEvent(event.type, event.metadata, event.level);\n};\nRollbar.captureEvent = function() {\n  if (_instance) {\n    return _instance.captureEvent.apply(_instance, arguments);\n  } else {\n    handleUninitialized();\n  }\n};\n\n// The following two methods are used internally and are not meant for public use\nRollbar.prototype.captureDomContentLoaded = function(e, ts) {\n  if (!ts) {\n    ts = new Date();\n  }\n  return this.client.captureDomContentLoaded(ts);\n};\n\nRollbar.prototype.captureLoad = function(e, ts) {\n  if (!ts) {\n    ts = new Date();\n  }\n  return this.client.captureLoad(ts);\n};\n\n/* Internal */\n\nfunction addTransformsToNotifier(notifier, gWindow) {\n  notifier\n    .addTransform(transforms.handleItemWithError)\n    .addTransform(transforms.ensureItemHasSomethingToSay)\n    .addTransform(transforms.addBaseInfo)\n    .addTransform(transforms.addRequestInfo(gWindow))\n    .addTransform(transforms.addClientInfo(gWindow))\n    .addTransform(transforms.addPluginInfo(gWindow))\n    .addTransform(transforms.addBody)\n    .addTransform(sharedTransforms.addMessageWithError)\n    .addTransform(sharedTransforms.addTelemetryData)\n    .addTransform(sharedTransforms.addConfigToPayload)\n    .addTransform(transforms.scrubPayload)\n    .addTransform(sharedTransforms.userTransform(logger))\n    .addTransform(sharedTransforms.itemToPayload);\n}\n\nfunction addPredicatesToQueue(queue) {\n  queue\n    .addPredicate(sharedPredicates.checkLevel)\n    .addPredicate(predicates.checkIgnore)\n    .addPredicate(sharedPredicates.userCheckIgnore(logger))\n    .addPredicate(sharedPredicates.urlIsNotBlacklisted(logger))\n    .addPredicate(sharedPredicates.urlIsWhitelisted(logger))\n    .addPredicate(sharedPredicates.messageIsIgnored(logger));\n}\n\nRollbar.prototype._createItem = function(args) {\n  return _.createItem(args, logger, this);\n};\n\nfunction _getFirstFunction(args) {\n  for (var i = 0, len = args.length; i < len; ++i) {\n    if (_.isFunction(args[i])) {\n      return args[i];\n    }\n  }\n  return undefined;\n}\n\n/* global __NOTIFIER_VERSION__:false */\n/* global __DEFAULT_BROWSER_SCRUB_FIELDS__:false */\n/* global __DEFAULT_LOG_LEVEL__:false */\n/* global __DEFAULT_REPORT_LEVEL__:false */\n/* global __DEFAULT_UNCAUGHT_ERROR_LEVEL:false */\n/* global __DEFAULT_ENDPOINT__:false */\n\nvar defaultOptions = {\n  version: __NOTIFIER_VERSION__,\n  scrubFields: __DEFAULT_BROWSER_SCRUB_FIELDS__,\n  logLevel: __DEFAULT_LOG_LEVEL__,\n  reportLevel: __DEFAULT_REPORT_LEVEL__,\n  uncaughtErrorLevel: __DEFAULT_UNCAUGHT_ERROR_LEVEL,\n  endpoint: __DEFAULT_ENDPOINT__,\n  verbose: false,\n  enabled: true,\n  sendConfig: false,\n  includeItemsInTelemetry: true,\n  captureIp: true\n};\n\nmodule.exports = Rollbar;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/rollbar.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nvar RateLimiter = require('./rateLimiter');\nvar Queue = require('./queue');\nvar Notifier = require('./notifier');\nvar Telemeter = require('./telemetry');\nvar _ = require('./utility');\n\n/*\n * Rollbar - the interface to Rollbar\n *\n * @param options\n * @param api\n * @param logger\n */\nfunction Rollbar(options, api, logger, platform) {\n  this.options = _.merge(options);\n  this.logger = logger;\n  Rollbar.rateLimiter.configureGlobal(this.options);\n  Rollbar.rateLimiter.setPlatformOptions(platform, this.options);\n  this.queue = new Queue(Rollbar.rateLimiter, api, logger, this.options);\n  this.notifier = new Notifier(this.queue, this.options);\n  this.telemeter = new Telemeter(this.options);\n  this.lastError = null;\n  this.lastErrorHash = 'none';\n}\n\nvar defaultOptions = {\n  maxItems: 0,\n  itemsPerMinute: 60\n};\n\nRollbar.rateLimiter = new RateLimiter(defaultOptions);\n\nRollbar.prototype.global = function(options) {\n  Rollbar.rateLimiter.configureGlobal(options);\n  return this;\n};\n\nRollbar.prototype.configure = function(options, payloadData) {\n  var oldOptions = this.options;\n  var payload = {};\n  if (payloadData) {\n    payload = {payload: payloadData};\n  }\n  this.options = _.merge(oldOptions, options, payload);\n  this.notifier && this.notifier.configure(this.options);\n  this.telemeter && this.telemeter.configure(this.options);\n  this.global(this.options);\n  return this;\n};\n\nRollbar.prototype.log = function(item) {\n  var level = this._defaultLogLevel();\n  return this._log(level, item);\n};\n\nRollbar.prototype.debug = function(item) {\n  this._log('debug', item);\n};\n\nRollbar.prototype.info = function(item) {\n  this._log('info', item);\n};\n\nRollbar.prototype.warn = function(item) {\n  this._log('warning', item);\n};\n\nRollbar.prototype.warning = function(item) {\n  this._log('warning', item);\n};\n\nRollbar.prototype.error = function(item) {\n  this._log('error', item);\n};\n\nRollbar.prototype.critical = function(item) {\n  this._log('critical', item);\n};\n\nRollbar.prototype.wait = function(callback) {\n  this.queue.wait(callback);\n};\n\nRollbar.prototype.captureEvent = function(type, metadata, level) {\n  return this.telemeter.captureEvent(type, metadata, level);\n};\n\nRollbar.prototype.captureDomContentLoaded = function(ts) {\n  return this.telemeter.captureDomContentLoaded(ts);\n};\n\nRollbar.prototype.captureLoad = function(ts) {\n  return this.telemeter.captureLoad(ts);\n};\n\n/* Internal */\n\nRollbar.prototype._log = function(defaultLevel, item) {\n  var callback;\n  if (item.callback) {\n    callback = item.callback;\n    delete item.callback;\n  }\n  if (this._sameAsLastError(item)) {\n    if (callback) {\n      var error = new Error('ignored identical item');\n      error.item = item;\n      callback(error);\n    }\n    return;\n  }\n  try {\n    item.level = item.level || defaultLevel;\n    this.telemeter._captureRollbarItem(item);\n    item.telemetryEvents = this.telemeter.copyEvents();\n    this.notifier.log(item, callback);\n  } catch (e) {\n    this.logger.error(e);\n  }\n};\n\nRollbar.prototype._defaultLogLevel = function() {\n  return this.options.logLevel || 'debug';\n};\n\nRollbar.prototype._sameAsLastError = function(item) {\n  if (!item._isUncaught) {\n    return false;\n  }\n  var itemHash = generateItemHash(item);\n  if (this.lastErrorHash === itemHash) {\n    return true;\n  }\n  this.lastError = item.err;\n  this.lastErrorHash = itemHash;\n  return false;\n};\n\nfunction generateItemHash(item) {\n  var message = item.message || '';\n  var stack = (item.err || {}).stack || String(item.err);\n  return message + '::' + stack;\n}\n\nmodule.exports = Rollbar;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/rollbar.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nvar _ = require('./utility');\n\n/*\n * RateLimiter - an object that encapsulates the logic for counting items sent to Rollbar\n *\n * @param options - the same options that are accepted by configureGlobal offered as a convenience\n */\nfunction RateLimiter(options) {\n  this.startTime = _.now();\n  this.counter = 0;\n  this.perMinCounter = 0;\n  this.platform = null;\n  this.platformOptions = {};\n  this.configureGlobal(options);\n}\n\nRateLimiter.globalSettings = {\n  startTime: _.now(),\n  maxItems: undefined,\n  itemsPerMinute: undefined\n};\n\n/*\n * configureGlobal - set the global rate limiter options\n *\n * @param options - Only the following values are recognized:\n *    startTime: a timestamp of the form returned by (new Date()).getTime()\n *    maxItems: the maximum items\n *    itemsPerMinute: the max number of items to send in a given minute\n */\nRateLimiter.prototype.configureGlobal = function(options) {\n  if (options.startTime !== undefined) {\n    RateLimiter.globalSettings.startTime = options.startTime;\n  }\n  if (options.maxItems !== undefined) {\n    RateLimiter.globalSettings.maxItems = options.maxItems;\n  }\n  if (options.itemsPerMinute !== undefined) {\n    RateLimiter.globalSettings.itemsPerMinute = options.itemsPerMinute;\n  }\n};\n\n/*\n * shouldSend - determine if we should send a given item based on rate limit settings\n *\n * @param item - the item we are about to send\n * @returns An object with the following structure:\n *  error: (Error|null)\n *  shouldSend: bool\n *  payload: (Object|null)\n *  If shouldSend is false, the item passed as a parameter should not be sent to Rollbar, and\n *  exactly one of error or payload will be non-null. If error is non-null, the returned Error will\n *  describe the situation, but it means that we were already over a rate limit (either globally or\n *  per minute) when this item was checked. If error is null, and therefore payload is non-null, it\n *  means this item put us over the global rate limit and the payload should be sent to Rollbar in\n *  place of the passed in item.\n */\nRateLimiter.prototype.shouldSend = function(item, now) {\n  now = now || _.now();\n  var elapsedTime = now - this.startTime;\n  if (elapsedTime < 0 || elapsedTime >= 60000) {\n    this.startTime = now;\n    this.perMinCounter = 0;\n  }\n\n  var globalRateLimit = RateLimiter.globalSettings.maxItems;\n  var globalRateLimitPerMin = RateLimiter.globalSettings.itemsPerMinute;\n\n  if (checkRate(item, globalRateLimit, this.counter)) {\n    return shouldSendValue(this.platform, this.platformOptions, globalRateLimit + ' max items reached', false);\n  } else if (checkRate(item, globalRateLimitPerMin, this.perMinCounter)) {\n    return shouldSendValue(this.platform, this.platformOptions, globalRateLimitPerMin + ' items per minute reached', false);\n  }\n  this.counter++;\n  this.perMinCounter++;\n\n  var shouldSend = !checkRate(item, globalRateLimit, this.counter);\n  var perMinute = shouldSend;\n  shouldSend = shouldSend && !checkRate(item, globalRateLimitPerMin, this.perMinCounter);\n  return shouldSendValue(this.platform, this.platformOptions, null, shouldSend, globalRateLimit, globalRateLimitPerMin, perMinute);\n};\n\nRateLimiter.prototype.setPlatformOptions = function(platform, options) {\n  this.platform = platform;\n  this.platformOptions = options;\n};\n\n/* Helpers */\n\nfunction checkRate(item, limit, counter) {\n  return !item.ignoreRateLimit && limit >= 1 && counter > limit;\n}\n\nfunction shouldSendValue(platform, options, error, shouldSend, globalRateLimit, limitPerMin, perMinute) {\n  var payload = null;\n  if (error) {\n    error = new Error(error);\n  }\n  if (!error && !shouldSend) {\n    payload = rateLimitPayload(platform, options, globalRateLimit, limitPerMin, perMinute);\n  }\n  return {error: error, shouldSend: shouldSend, payload: payload};\n}\n\nfunction rateLimitPayload(platform, options, globalRateLimit, limitPerMin, perMinute) {\n  var environment = options.environment || (options.payload && options.payload.environment);\n  var msg;\n  if (perMinute) {\n    msg = 'item per minute limit reached, ignoring errors until timeout';\n  } else {\n    msg = 'maxItems has been hit, ignoring errors until reset.';\n  }\n  var item = {\n    body: {\n      message: {\n        body: msg,\n        extra: {\n          maxItems: globalRateLimit,\n          itemsPerMinute: limitPerMin\n        }\n      }\n    },\n    language: 'javascript',\n    environment: environment,\n    notifier: {\n      version: (options.notifier && options.notifier.version) || options.version\n    }\n  };\n  if (platform === 'browser') {\n    item.platform = 'browser';\n    item.framework = 'browser-js';\n    item.notifier.name = 'rollbar-browser-js';\n  } else if (platform === 'server') {\n    item.framework = options.framework || 'node-js';\n    item.notifier.name = options.notifier.name;\n  } else if (platform === 'react-native') {\n    item.framework = options.framework || 'react-native';\n    item.notifier.name = options.notifier.name;\n  }\n  return item;\n}\n\nmodule.exports = RateLimiter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/rateLimiter.js\n// module id = 4\n// module chunks = 0","'use strict';\n\nvar merge = require('./merge');\n\nvar RollbarJSON = {};\nvar __initRollbarJSON = false;\nfunction setupJSON() {\n  if (__initRollbarJSON) {\n    return;\n  }\n  __initRollbarJSON = true;\n\n  if (isDefined(JSON)) {\n    if (isNativeFunction(JSON.stringify)) {\n      RollbarJSON.stringify = JSON.stringify;\n    }\n    if (isNativeFunction(JSON.parse)) {\n      RollbarJSON.parse = JSON.parse;\n    }\n  }\n  if (!isFunction(RollbarJSON.stringify) || !isFunction(RollbarJSON.parse)) {\n    var setupCustomJSON = require('../vendor/JSON-js/json3.js');\n    setupCustomJSON(RollbarJSON);\n  }\n}\nsetupJSON();\n\n/*\n * isType - Given a Javascript value and a string, returns true if the type of the value matches the\n * given string.\n *\n * @param x - any value\n * @param t - a lowercase string containing one of the following type names:\n *    - undefined\n *    - null\n *    - error\n *    - number\n *    - boolean\n *    - string\n *    - symbol\n *    - function\n *    - object\n *    - array\n * @returns true if x is of type t, otherwise false\n */\nfunction isType(x, t) {\n  return t === typeName(x);\n}\n\n/*\n * typeName - Given a Javascript value, returns the type of the object as a string\n */\nfunction typeName(x) {\n  var name = typeof x;\n  if (name !== 'object') {\n    return name;\n  }\n  if (!x) {\n    return 'null';\n  }\n  if (x instanceof Error) {\n    return 'error';\n  }\n  return ({}).toString.call(x).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n}\n\n/* isFunction - a convenience function for checking if a value is a function\n *\n * @param f - any value\n * @returns true if f is a function, otherwise false\n */\nfunction isFunction(f) {\n  return isType(f, 'function');\n}\n\n/* isNativeFunction - a convenience function for checking if a value is a native JS function\n *\n * @param f - any value\n * @returns true if f is a native JS function, otherwise false\n */\nfunction isNativeFunction(f) {\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n  var funcMatchString = Function.prototype.toString.call(Object.prototype.hasOwnProperty)\n    .replace(reRegExpChar, '\\\\$&')\n    .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?');\n  var reIsNative = RegExp('^' + funcMatchString + '$');\n  return isObject(f) && reIsNative.test(f);\n}\n\n/* isObject - Checks if the argument is an object\n *\n * @param value - any value\n * @returns true is value is an object function is an object)\n*/\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/*\n * isDefined - a convenience function for checking if a value is not equal to undefined\n *\n * @param u - any value\n * @returns true if u is anything other than undefined\n */\nfunction isDefined(u) {\n  return !isType(u, 'undefined');\n}\n\n/*\n * isIterable - convenience function for checking if a value can be iterated, essentially\n * whether it is an object or an array.\n *\n * @param i - any value\n * @returns true if i is an object or an array as determined by `typeName`\n */\nfunction isIterable(i) {\n  var type = typeName(i);\n  return (type === 'object' || type === 'array');\n}\n\n/*\n * isError - convenience function for checking if a value is of an error type\n *\n * @param e - any value\n * @returns true if e is an error\n */\nfunction isError(e) {\n  // Detect both Error and Firefox Exception type\n  return isType(e, 'error') || isType(e, 'exception');\n}\n\nfunction traverse(obj, func, seen) {\n  var k, v, i;\n  var isObj = isType(obj, 'object');\n  var isArray = isType(obj, 'array');\n  var keys = [];\n\n  if (isObj && seen.indexOf(obj) !== -1) {\n    return obj;\n  }\n  seen.push(obj);\n\n  if (isObj) {\n    for (k in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, k)) {\n        keys.push(k);\n      }\n    }\n  } else if (isArray) {\n    for (i = 0; i < obj.length; ++i) {\n      keys.push(i);\n    }\n  }\n\n  var result = isObj ? {} : [];\n  var same = true;\n  for (i = 0; i < keys.length; ++i) {\n    k = keys[i];\n    v = obj[k];\n    result[k] = func(k, v, seen);\n    same = same && result[k] === obj[k];\n  }\n\n  return (keys.length != 0 && !same) ? result : obj;\n}\n\nfunction redact() {\n  return '********';\n}\n\n// from http://stackoverflow.com/a/8809472/1138191\nfunction uuid4() {\n  var d = now();\n  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n  });\n  return uuid;\n}\n\nvar LEVELS = {\n  debug: 0,\n  info: 1,\n  warning: 2,\n  error: 3,\n  critical: 4\n};\n\nfunction sanitizeUrl(url) {\n  var baseUrlParts = parseUri(url);\n  if (!baseUrlParts) {\n    return '(unknown)';\n  }\n\n  // remove a trailing # if there is no anchor\n  if (baseUrlParts.anchor === '') {\n    baseUrlParts.source = baseUrlParts.source.replace('#', '');\n  }\n\n  url = baseUrlParts.source.replace('?' + baseUrlParts.query, '');\n  return url;\n}\n\nvar parseUriOptions = {\n  strictMode: false,\n  key: [\n    'source',\n    'protocol',\n    'authority',\n    'userInfo',\n    'user',\n    'password',\n    'host',\n    'port',\n    'relative',\n    'path',\n    'directory',\n    'file',\n    'query',\n    'anchor'\n  ],\n  q: {\n    name: 'queryKey',\n    parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n  },\n  parser: {\n    strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n    loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\n\nfunction parseUri(str) {\n  if (!isType(str, 'string')) {\n    return undefined;\n  }\n\n  var o = parseUriOptions;\n  var m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str);\n  var uri = {};\n\n  for (var i = 0, l = o.key.length; i < l; ++i) {\n    uri[o.key[i]] = m[i] || '';\n  }\n\n  uri[o.q.name] = {};\n  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n    if ($1) {\n      uri[o.q.name][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\nfunction addParamsAndAccessTokenToPath(accessToken, options, params) {\n  params = params || {};\n  params.access_token = accessToken;\n  var paramsArray = [];\n  var k;\n  for (k in params) {\n    if (Object.prototype.hasOwnProperty.call(params, k)) {\n      paramsArray.push([k, params[k]].join('='));\n    }\n  }\n  var query = '?' + paramsArray.sort().join('&');\n\n  options = options || {};\n  options.path = options.path || '';\n  var qs = options.path.indexOf('?');\n  var h = options.path.indexOf('#');\n  var p;\n  if (qs !== -1 && (h === -1 || h > qs)) {\n    p = options.path;\n    options.path = p.substring(0,qs) + query + '&' + p.substring(qs+1);\n  } else {\n    if (h !== -1) {\n      p = options.path;\n      options.path = p.substring(0,h) + query + p.substring(h);\n    } else {\n      options.path = options.path + query;\n    }\n  }\n}\n\nfunction formatUrl(u, protocol) {\n  protocol = protocol || u.protocol;\n  if (!protocol && u.port) {\n    if (u.port === 80) {\n      protocol = 'http:';\n    } else if (u.port === 443) {\n      protocol = 'https:';\n    }\n  }\n  protocol = protocol || 'https:';\n\n  if (!u.hostname) {\n    return null;\n  }\n  var result = protocol + '//' + u.hostname;\n  if (u.port) {\n    result = result + ':' + u.port;\n  }\n  if (u.path) {\n    result = result + u.path;\n  }\n  return result;\n}\n\nfunction stringify(obj, backup) {\n  var value, error;\n  try {\n    value = RollbarJSON.stringify(obj);\n  } catch (jsonError) {\n    if (backup && isFunction(backup)) {\n      try {\n        value = backup(obj);\n      } catch (backupError) {\n        error = backupError;\n      }\n    } else {\n      error = jsonError;\n    }\n  }\n  return {error: error, value: value};\n}\n\nfunction jsonParse(s) {\n  var value, error;\n  try {\n    value = RollbarJSON.parse(s);\n  } catch (e) {\n    error = e;\n  }\n  return {error: error, value: value};\n}\n\nfunction makeUnhandledStackInfo(\n  message,\n  url,\n  lineno,\n  colno,\n  error,\n  mode,\n  backupMessage,\n  errorParser\n) {\n  var location = {\n    url: url || '',\n    line: lineno,\n    column: colno\n  };\n  location.func = errorParser.guessFunctionName(location.url, location.line);\n  location.context = errorParser.gatherContext(location.url, location.line);\n  var href = document && document.location && document.location.href;\n  var useragent = window && window.navigator && window.navigator.userAgent;\n  return {\n    'mode': mode,\n    'message': error ? String(error) : (message || backupMessage),\n    'url': href,\n    'stack': [location],\n    'useragent': useragent\n  };\n}\n\nfunction wrapCallback(logger, f) {\n  return function(err, resp) {\n    try {\n      f(err, resp);\n    } catch (e) {\n      logger.error(e);\n    }\n  };\n}\n\nfunction createItem(args, logger, notifier, requestKeys, lambdaContext) {\n  var message, err, custom, callback, request;\n  var arg;\n  var extraArgs = [];\n\n  for (var i = 0, l = args.length; i < l; ++i) {\n    arg = args[i];\n\n    var typ = typeName(arg);\n    switch (typ) {\n      case 'undefined':\n        break;\n      case 'string':\n        message ? extraArgs.push(arg) : message = arg;\n        break;\n      case 'function':\n        callback = wrapCallback(logger, arg);\n        break;\n      case 'date':\n        extraArgs.push(arg);\n        break;\n      case 'error':\n      case 'domexception':\n      case 'exception': // Firefox Exception type\n        err ? extraArgs.push(arg) : err = arg;\n        break;\n      case 'object':\n      case 'array':\n        if (arg instanceof Error || (typeof DOMException !== 'undefined' && arg instanceof DOMException)) {\n          err ? extraArgs.push(arg) : err = arg;\n          break;\n        }\n        if (requestKeys && typ === 'object' && !request) {\n          for (var j = 0, len = requestKeys.length; j < len; ++j) {\n            if (arg[requestKeys[j]] !== undefined) {\n              request = arg;\n              break;\n            }\n          }\n          if (request) {\n            break;\n          }\n        }\n        custom ? extraArgs.push(arg) : custom = arg;\n        break;\n      default:\n        if (arg instanceof Error || (typeof DOMException !== 'undefined' && arg instanceof DOMException)) {\n          err ? extraArgs.push(arg) : err = arg;\n          break;\n        }\n        extraArgs.push(arg);\n    }\n  }\n\n  if (extraArgs.length > 0) {\n    // if custom is an array this turns it into an object with integer keys\n    custom = merge(custom);\n    custom.extraArgs = extraArgs;\n  }\n\n  var item = {\n    message: message,\n    err: err,\n    custom: custom,\n    timestamp: now(),\n    callback: callback,\n    uuid: uuid4()\n  };\n  if (custom && custom.level !== undefined) {\n    item.level = custom.level;\n    delete custom.level;\n  }\n  if (requestKeys && request) {\n    item.request = request;\n  }\n  if (lambdaContext) {\n    item.lambdaContext = lambdaContext;\n  }\n  item._originalArgs = args;\n  return item;\n}\n\nvar TELEMETRY_TYPES = ['log', 'network', 'dom', 'navigation', 'error', 'manual'];\nvar TELEMETRY_LEVELS = ['critical', 'error', 'warning', 'info', 'debug'];\n\nfunction arrayIncludes(arr, val) {\n  for (var k = 0; k < arr.length; ++k) {\n    if (arr[k] === val) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction createTelemetryEvent(args) {\n  var type, metadata, level;\n  var arg;\n\n  for (var i = 0, l = args.length; i < l; ++i) {\n    arg = args[i];\n\n    var typ = typeName(arg);\n    switch (typ) {\n      case 'string':\n        if (arrayIncludes(TELEMETRY_TYPES, arg)) {\n          type = arg;\n        } else if (arrayIncludes(TELEMETRY_LEVELS, arg)) {\n          level = arg;\n        }\n        break;\n      case 'object':\n        metadata = arg;\n        break;\n      default:\n        break;\n    }\n  }\n  var event = {\n    type: type || 'manual',\n    metadata: metadata || {},\n    level: level\n  };\n\n  return event;\n}\n\n/*\n * get - given an obj/array and a keypath, return the value at that keypath or\n *       undefined if not possible.\n *\n * @param obj - an object or array\n * @param path - a string of keys separated by '.' such as 'plugin.jquery.0.message'\n *    which would correspond to 42 in `{plugin: {jquery: [{message: 42}]}}`\n */\nfunction get(obj, path) {\n  if (!obj) {\n    return undefined;\n  }\n  var keys = path.split('.');\n  var result = obj;\n  try {\n    for (var i = 0, len = keys.length; i < len; ++i) {\n      result = result[keys[i]];\n    }\n  } catch (e) {\n    result = undefined;\n  }\n  return result;\n}\n\nfunction set(obj, path, value) {\n  if (!obj) {\n    return;\n  }\n  var keys = path.split('.');\n  var len = keys.length;\n  if (len < 1) {\n    return;\n  }\n  if (len === 1) {\n    obj[keys[0]] = value;\n    return;\n  }\n  try {\n    var temp = obj[keys[0]] || {};\n    var replacement = temp;\n    for (var i = 1; i < len - 1; ++i) {\n      temp[keys[i]] = temp[keys[i]] || {};\n      temp = temp[keys[i]];\n    }\n    temp[keys[len-1]] = value;\n    obj[keys[0]] = replacement;\n  } catch (e) {\n    return;\n  }\n}\n\nfunction scrub(data, scrubFields) {\n  scrubFields = scrubFields || [];\n  var paramRes = _getScrubFieldRegexs(scrubFields);\n  var queryRes = _getScrubQueryParamRegexs(scrubFields);\n\n  function redactQueryParam(dummy0, paramPart) {\n    return paramPart + redact();\n  }\n\n  function paramScrubber(v) {\n    var i;\n    if (isType(v, 'string')) {\n      for (i = 0; i < queryRes.length; ++i) {\n        v = v.replace(queryRes[i], redactQueryParam);\n      }\n    }\n    return v;\n  }\n\n  function valScrubber(k, v) {\n    var i;\n    for (i = 0; i < paramRes.length; ++i) {\n      if (paramRes[i].test(k)) {\n        v = redact();\n        break;\n      }\n    }\n    return v;\n  }\n\n  function scrubber(k, v, seen) {\n    var tmpV = valScrubber(k, v);\n    if (tmpV === v) {\n      if (isType(v, 'object') || isType(v, 'array')) {\n        return traverse(v, scrubber, seen);\n      }\n      return paramScrubber(tmpV);\n    } else {\n      return tmpV;\n    }\n  }\n\n  return traverse(data, scrubber, []);\n}\n\nfunction _getScrubFieldRegexs(scrubFields) {\n  var ret = [];\n  var pat;\n  for (var i = 0; i < scrubFields.length; ++i) {\n    pat = '^\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?$';\n    ret.push(new RegExp(pat, 'i'));\n  }\n  return ret;\n}\n\n\nfunction _getScrubQueryParamRegexs(scrubFields) {\n  var ret = [];\n  var pat;\n  for (var i = 0; i < scrubFields.length; ++i) {\n    pat = '\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?';\n    ret.push(new RegExp('(' + pat + '=)([^&\\\\n]+)', 'igm'));\n  }\n  return ret;\n}\n\nfunction formatArgsAsString(args) {\n  var i, len, arg;\n  var result = [];\n  for (i = 0, len = args.length; i < len; ++i) {\n    arg = args[i];\n    switch (typeName(arg)) {\n      case 'object':\n        arg = stringify(arg);\n        arg = arg.error || arg.value;\n        if (arg.length > 500) {\n          arg = arg.substr(0, 497) + '...';\n        }\n        break;\n      case 'null':\n        arg = 'null';\n        break;\n      case 'undefined':\n        arg = 'undefined';\n        break;\n      case 'symbol':\n        arg = arg.toString();\n        break;\n    }\n    result.push(arg);\n  }\n  return result.join(' ');\n}\n\nfunction now() {\n  if (Date.now) {\n    return +Date.now();\n  }\n  return +new Date();\n}\n\nfunction filterIp(requestData, captureIp) {\n  if (!requestData || !requestData['user_ip'] || captureIp === true) {\n    return;\n  }\n  var newIp = requestData['user_ip'];\n  if (!captureIp) {\n    newIp = null;\n  } else {\n    try {\n      var parts;\n      if (newIp.indexOf('.') !== -1) {\n        parts = newIp.split('.');\n        parts.pop();\n        parts.push('0');\n        newIp = parts.join('.');\n      } else if (newIp.indexOf(':') !== -1) {\n        parts = newIp.split(':');\n        if (parts.length > 2) {\n          var beginning = parts.slice(0, 3);\n          var slashIdx = beginning[2].indexOf('/');\n          if (slashIdx !== -1) {\n            beginning[2] = beginning[2].substring(0, slashIdx);\n          }\n          var terminal = '0000:0000:0000:0000:0000';\n          newIp = beginning.concat(terminal).join(':');\n        }\n      } else {\n        newIp = null;\n      }\n    } catch (e) {\n      newIp = null;\n    }\n  }\n  requestData['user_ip'] = newIp;\n}\n\nfunction handleOptions(current, input, payload) {\n  var result = merge(current, input, payload);\n  if (!input || input.overwriteScrubFields) {\n    return result;\n  }\n  if (input.scrubFields) {\n    result.scrubFields = (current.scrubFields || []).concat(input.scrubFields);\n  }\n  return result;\n}\n\nmodule.exports = {\n  addParamsAndAccessTokenToPath: addParamsAndAccessTokenToPath,\n  createItem: createItem,\n  createTelemetryEvent: createTelemetryEvent,\n  filterIp: filterIp,\n  formatArgsAsString: formatArgsAsString,\n  formatUrl: formatUrl,\n  get: get,\n  handleOptions: handleOptions,\n  isError: isError,\n  isFunction: isFunction,\n  isIterable: isIterable,\n  isNativeFunction: isNativeFunction,\n  isType: isType,\n  jsonParse: jsonParse,\n  LEVELS: LEVELS,\n  makeUnhandledStackInfo: makeUnhandledStackInfo,\n  merge: merge,\n  now: now,\n  redact: redact,\n  sanitizeUrl: sanitizeUrl,\n  scrub: scrub,\n  set: set,\n  stringify: stringify,\n  traverse: traverse,\n  typeName: typeName,\n  uuid4: uuid4\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utility.js\n// module id = 5\n// module chunks = 0","'use strict';\n\n'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nfunction merge() {\n  var i, src, copy, clone, name,\n      result = {},\n     current = null,\n      length = arguments.length;\n\n  for (i=0; i < length; i++) {\n    current = arguments[i];\n    if (current == null) {\n      continue;\n    }\n\n    for (name in current) {\n      src = result[name];\n      copy = current[name];\n      if (result !== copy) {\n        if (copy && isPlainObject(copy)) {\n          clone = src && isPlainObject(src) ? src : {};\n          result[name] = merge(clone, copy);\n        } else if (typeof copy !== 'undefined') {\n          result[name] = copy;\n        }\n      }\n    }\n  }\n  return result;\n}\n\nmodule.exports = merge;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/merge.js\n// module id = 6\n// module chunks = 0","//  json3.js\n//  2017-02-21\n//  Public Domain.\n//  NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n//  See http://www.JSON.org/js.html\n//  This code should be minified before deployment.\n//  See http://javascript.crockford.com/jsmin.html\n\n//  USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\n//  NOT CONTROL.\n\n//  This file creates a global JSON object containing two methods: stringify\n//  and parse. This file provides the ES5 JSON capability to ES3 systems.\n//  If a project might run on IE8 or earlier, then this file should be included.\n//  This file does nothing on ES5 systems.\n\n//      JSON.stringify(value, replacer, space)\n//          value       any JavaScript value, usually an object or array.\n//          replacer    an optional parameter that determines how object\n//                      values are stringified for objects. It can be a\n//                      function or an array of strings.\n//          space       an optional parameter that specifies the indentation\n//                      of nested structures. If it is omitted, the text will\n//                      be packed without extra whitespace. If it is a number,\n//                      it will specify the number of spaces to indent at each\n//                      level. If it is a string (such as \"\\t\" or \"&nbsp;\"),\n//                      it contains the characters used to indent at each level.\n//          This method produces a JSON text from a JavaScript value.\n//          When an object value is found, if the object contains a toJSON\n//          method, its toJSON method will be called and the result will be\n//          stringified. A toJSON method does not serialize: it returns the\n//          value represented by the name/value pair that should be serialized,\n//          or undefined if nothing should be serialized. The toJSON method\n//          will be passed the key associated with the value, and this will be\n//          bound to the value.\n\n//          For example, this would serialize Dates as ISO strings.\n\n//              Date.prototype.toJSON = function (key) {\n//                  function f(n) {\n//                      // Format integers to have at least two digits.\n//                      return (n < 10)\n//                          ? \"0\" + n\n//                          : n;\n//                  }\n//                  return this.getUTCFullYear()   + \"-\" +\n//                       f(this.getUTCMonth() + 1) + \"-\" +\n//                       f(this.getUTCDate())      + \"T\" +\n//                       f(this.getUTCHours())     + \":\" +\n//                       f(this.getUTCMinutes())   + \":\" +\n//                       f(this.getUTCSeconds())   + \"Z\";\n//              };\n\n//          You can provide an optional replacer method. It will be passed the\n//          key and value of each member, with this bound to the containing\n//          object. The value that is returned from your method will be\n//          serialized. If your method returns undefined, then the member will\n//          be excluded from the serialization.\n\n//          If the replacer parameter is an array of strings, then it will be\n//          used to select the members to be serialized. It filters the results\n//          such that only members with keys listed in the replacer array are\n//          stringified.\n\n//          Values that do not have JSON representations, such as undefined or\n//          functions, will not be serialized. Such values in objects will be\n//          dropped; in arrays they will be replaced with null. You can use\n//          a replacer function to replace those with JSON values.\n\n//          JSON.stringify(undefined) returns undefined.\n\n//          The optional space parameter produces a stringification of the\n//          value that is filled with line breaks and indentation to make it\n//          easier to read.\n\n//          If the space parameter is a non-empty string, then that string will\n//          be used for indentation. If the space parameter is a number, then\n//          the indentation will be that many spaces.\n\n//          Example:\n\n//          text = JSON.stringify([\"e\", {pluribus: \"unum\"}]);\n//          // text is '[\"e\",{\"pluribus\":\"unum\"}]'\n\n//          text = JSON.stringify([\"e\", {pluribus: \"unum\"}], null, \"\\t\");\n//          // text is '[\\n\\t\"e\",\\n\\t{\\n\\t\\t\"pluribus\": \"unum\"\\n\\t}\\n]'\n\n//          text = JSON.stringify([new Date()], function (key, value) {\n//              return this[key] instanceof Date\n//                  ? \"Date(\" + this[key] + \")\"\n//                  : value;\n//          });\n//          // text is '[\"Date(---current time---)\"]'\n\n//      JSON.parse(text, reviver)\n//          This method parses a JSON text to produce an object or array.\n//          It can throw a SyntaxError exception.\n//          This has been modified to use JSON-js/json_parse_state.js as the\n//          parser instead of the one built around eval found in JSON-js/json2.js\n\n//          The optional reviver parameter is a function that can filter and\n//          transform the results. It receives each of the keys and values,\n//          and its return value is used instead of the original value.\n//          If it returns what it received, then the structure is not modified.\n//          If it returns undefined then the member is deleted.\n\n//          Example:\n\n//          // Parse the text. Values that look like ISO date strings will\n//          // be converted to Date objects.\n\n//          myData = JSON.parse(text, function (key, value) {\n//              var a;\n//              if (typeof value === \"string\") {\n//                  a =\n//   /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\n//                  if (a) {\n//                      return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\n//                          +a[5], +a[6]));\n//                  }\n//              }\n//              return value;\n//          });\n\n//          myData = JSON.parse('[\"Date(09/09/2001)\"]', function (key, value) {\n//              var d;\n//              if (typeof value === \"string\" &&\n//                      value.slice(0, 5) === \"Date(\" &&\n//                      value.slice(-1) === \")\") {\n//                  d = new Date(value.slice(5, -1));\n//                  if (d) {\n//                      return d;\n//                  }\n//              }\n//              return value;\n//          });\n\n//  This is a reference implementation. You are free to copy, modify, or\n//  redistribute.\n\n/*jslint\n  for, this\n  */\n\n/*property\n  JSON, apply, call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,\n  getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,\n  lastIndex, length, parse, prototype, push, replace, slice, stringify,\n  test, toJSON, toString, valueOf\n  */\n\nvar setupCustomJSON = function(JSON) {\n\n  var rx_one = /^[\\],:{}\\s]*$/;\n  var rx_two = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\n  var rx_three = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\n  var rx_four = /(?:^|:|,)(?:\\s*\\[)+/g;\n  var rx_escapable = /[\\\\\"\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n  var rx_dangerous = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n\n  function f(n) {\n    // Format integers to have at least two digits.\n    return n < 10\n      ? \"0\" + n\n      : n;\n  }\n\n  function this_value() {\n    return this.valueOf();\n  }\n\n  if (typeof Date.prototype.toJSON !== \"function\") {\n\n    Date.prototype.toJSON = function () {\n\n      return isFinite(this.valueOf())\n        ? this.getUTCFullYear() + \"-\" +\n        f(this.getUTCMonth() + 1) + \"-\" +\n        f(this.getUTCDate()) + \"T\" +\n        f(this.getUTCHours()) + \":\" +\n        f(this.getUTCMinutes()) + \":\" +\n        f(this.getUTCSeconds()) + \"Z\"\n        : null;\n    };\n\n    Boolean.prototype.toJSON = this_value;\n    Number.prototype.toJSON = this_value;\n    String.prototype.toJSON = this_value;\n  }\n\n  var gap;\n  var indent;\n  var meta;\n  var rep;\n\n\n  function quote(string) {\n\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n\n    rx_escapable.lastIndex = 0;\n    return rx_escapable.test(string)\n      ? \"\\\"\" + string.replace(rx_escapable, function (a) {\n        var c = meta[a];\n        return typeof c === \"string\"\n          ? c\n          : \"\\\\u\" + (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);\n      }) + \"\\\"\"\n    : \"\\\"\" + string + \"\\\"\";\n  }\n\n\n  function str(key, holder) {\n\n    // Produce a string from holder[key].\n\n    var i;          // The loop counter.\n    var k;          // The member key.\n    var v;          // The member value.\n    var length;\n    var mind = gap;\n    var partial;\n    var value = holder[key];\n\n    // If the value has a toJSON method, call it to obtain a replacement value.\n\n    if (value && typeof value === \"object\" &&\n        typeof value.toJSON === \"function\") {\n      value = value.toJSON(key);\n    }\n\n    // If we were called with a replacer function, then call the replacer to\n    // obtain a replacement value.\n\n    if (typeof rep === \"function\") {\n      value = rep.call(holder, key, value);\n    }\n\n    // What happens next depends on the value's type.\n\n    switch (typeof value) {\n      case \"string\":\n        return quote(value);\n\n      case \"number\":\n\n        // JSON numbers must be finite. Encode non-finite numbers as null.\n\n        return isFinite(value)\n          ? String(value)\n          : \"null\";\n\n      case \"boolean\":\n      case \"null\":\n\n        // If the value is a boolean or null, convert it to a string. Note:\n        // typeof null does not produce \"null\". The case is included here in\n        // the remote chance that this gets fixed someday.\n\n        return String(value);\n\n        // If the type is \"object\", we might be dealing with an object or an array or\n        // null.\n\n      case \"object\":\n\n        // Due to a specification blunder in ECMAScript, typeof null is \"object\",\n        // so watch out for that case.\n\n        if (!value) {\n          return \"null\";\n        }\n\n        // Make an array to hold the partial results of stringifying this object value.\n\n        gap += indent;\n        partial = [];\n\n        // Is the value an array?\n\n        if (Object.prototype.toString.apply(value) === \"[object Array]\") {\n\n          // The value is an array. Stringify every element. Use null as a placeholder\n          // for non-JSON values.\n\n          length = value.length;\n          for (i = 0; i < length; i += 1) {\n            partial[i] = str(i, value) || \"null\";\n          }\n\n          // Join all of the elements together, separated with commas, and wrap them in\n          // brackets.\n\n          v = partial.length === 0\n            ? \"[]\"\n            : gap\n            ? \"[\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"]\"\n            : \"[\" + partial.join(\",\") + \"]\";\n          gap = mind;\n          return v;\n        }\n\n        // If the replacer is an array, use it to select the members to be stringified.\n\n        if (rep && typeof rep === \"object\") {\n          length = rep.length;\n          for (i = 0; i < length; i += 1) {\n            if (typeof rep[i] === \"string\") {\n              k = rep[i];\n              v = str(k, value);\n              if (v) {\n                partial.push(quote(k) + (\n                      gap\n                      ? \": \"\n                      : \":\"\n                      ) + v);\n              }\n            }\n          }\n        } else {\n\n          // Otherwise, iterate through all of the keys in the object.\n\n          for (k in value) {\n            if (Object.prototype.hasOwnProperty.call(value, k)) {\n              v = str(k, value);\n              if (v) {\n                partial.push(quote(k) + (\n                      gap\n                      ? \": \"\n                      : \":\"\n                      ) + v);\n              }\n            }\n          }\n        }\n\n        // Join all of the member texts together, separated with commas,\n        // and wrap them in braces.\n\n        v = partial.length === 0\n          ? \"{}\"\n          : gap\n          ? \"{\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"}\"\n          : \"{\" + partial.join(\",\") + \"}\";\n        gap = mind;\n        return v;\n    }\n  }\n\n  // If the JSON object does not yet have a stringify method, give it one.\n\n  if (typeof JSON.stringify !== \"function\") {\n    meta = {    // table of character substitutions\n      \"\\b\": \"\\\\b\",\n      \"\\t\": \"\\\\t\",\n      \"\\n\": \"\\\\n\",\n      \"\\f\": \"\\\\f\",\n      \"\\r\": \"\\\\r\",\n      \"\\\"\": \"\\\\\\\"\",\n      \"\\\\\": \"\\\\\\\\\"\n    };\n    JSON.stringify = function (value, replacer, space) {\n\n      // The stringify method takes a value and an optional replacer, and an optional\n      // space parameter, and returns a JSON text. The replacer can be a function\n      // that can replace values, or an array of strings that will select the keys.\n      // A default replacer method can be provided. Use of the space parameter can\n      // produce text that is more easily readable.\n\n      var i;\n      gap = \"\";\n      indent = \"\";\n\n      // If the space parameter is a number, make an indent string containing that\n      // many spaces.\n\n      if (typeof space === \"number\") {\n        for (i = 0; i < space; i += 1) {\n          indent += \" \";\n        }\n\n        // If the space parameter is a string, it will be used as the indent string.\n\n      } else if (typeof space === \"string\") {\n        indent = space;\n      }\n\n      // If there is a replacer, it must be a function or an array.\n      // Otherwise, throw an error.\n\n      rep = replacer;\n      if (replacer && typeof replacer !== \"function\" &&\n          (typeof replacer !== \"object\" ||\n           typeof replacer.length !== \"number\")) {\n        throw new Error(\"JSON.stringify\");\n      }\n\n      // Make a fake root object containing our value under the key of \"\".\n      // Return the result of stringifying the value.\n\n      return str(\"\", {\"\": value});\n    };\n  }\n\n\n  // If the JSON object does not yet have a parse method, give it one.\n\n  if (typeof JSON.parse !== \"function\") {\n    JSON.parse = (function () {\n\n      // This function creates a JSON parse function that uses a state machine rather\n      // than the dangerous eval function to parse a JSON text.\n\n      var state;      // The state of the parser, one of\n      // 'go'         The starting state\n      // 'ok'         The final, accepting state\n      // 'firstokey'  Ready for the first key of the object or\n      //              the closing of an empty object\n      // 'okey'       Ready for the next key of the object\n      // 'colon'      Ready for the colon\n      // 'ovalue'     Ready for the value half of a key/value pair\n      // 'ocomma'     Ready for a comma or closing }\n      // 'firstavalue' Ready for the first value of an array or\n      //              an empty array\n      // 'avalue'     Ready for the next value of an array\n      // 'acomma'     Ready for a comma or closing ]\n      var stack;      // The stack, for controlling nesting.\n      var container;  // The current container object or array\n      var key;        // The current key\n      var value;      // The current value\n      var escapes = { // Escapement translation table\n        \"\\\\\": \"\\\\\",\n        \"\\\"\": \"\\\"\",\n        \"/\": \"/\",\n        \"t\": \"\\t\",\n        \"n\": \"\\n\",\n        \"r\": \"\\r\",\n        \"f\": \"\\f\",\n        \"b\": \"\\b\"\n      };\n      var string = {   // The actions for string tokens\n        go: function () {\n          state = \"ok\";\n        },\n        firstokey: function () {\n          key = value;\n          state = \"colon\";\n        },\n        okey: function () {\n          key = value;\n          state = \"colon\";\n        },\n        ovalue: function () {\n          state = \"ocomma\";\n        },\n        firstavalue: function () {\n          state = \"acomma\";\n        },\n        avalue: function () {\n          state = \"acomma\";\n        }\n      };\n      var number = {   // The actions for number tokens\n        go: function () {\n          state = \"ok\";\n        },\n        ovalue: function () {\n          state = \"ocomma\";\n        },\n        firstavalue: function () {\n          state = \"acomma\";\n        },\n        avalue: function () {\n          state = \"acomma\";\n        }\n      };\n      var action = {\n\n        // The action table describes the behavior of the machine. It contains an\n        // object for each token. Each object contains a method that is called when\n        // a token is matched in a state. An object will lack a method for illegal\n        // states.\n\n        \"{\": {\n          go: function () {\n            stack.push({state: \"ok\"});\n            container = {};\n            state = \"firstokey\";\n          },\n          ovalue: function () {\n            stack.push({container: container, state: \"ocomma\", key: key});\n            container = {};\n            state = \"firstokey\";\n          },\n          firstavalue: function () {\n            stack.push({container: container, state: \"acomma\"});\n            container = {};\n            state = \"firstokey\";\n          },\n          avalue: function () {\n            stack.push({container: container, state: \"acomma\"});\n            container = {};\n            state = \"firstokey\";\n          }\n        },\n        \"}\": {\n          firstokey: function () {\n            var pop = stack.pop();\n            value = container;\n            container = pop.container;\n            key = pop.key;\n            state = pop.state;\n          },\n          ocomma: function () {\n            var pop = stack.pop();\n            container[key] = value;\n            value = container;\n            container = pop.container;\n            key = pop.key;\n            state = pop.state;\n          }\n        },\n        \"[\": {\n          go: function () {\n            stack.push({state: \"ok\"});\n            container = [];\n            state = \"firstavalue\";\n          },\n          ovalue: function () {\n            stack.push({container: container, state: \"ocomma\", key: key});\n            container = [];\n            state = \"firstavalue\";\n          },\n          firstavalue: function () {\n            stack.push({container: container, state: \"acomma\"});\n            container = [];\n            state = \"firstavalue\";\n          },\n          avalue: function () {\n            stack.push({container: container, state: \"acomma\"});\n            container = [];\n            state = \"firstavalue\";\n          }\n        },\n        \"]\": {\n          firstavalue: function () {\n            var pop = stack.pop();\n            value = container;\n            container = pop.container;\n            key = pop.key;\n            state = pop.state;\n          },\n          acomma: function () {\n            var pop = stack.pop();\n            container.push(value);\n            value = container;\n            container = pop.container;\n            key = pop.key;\n            state = pop.state;\n          }\n        },\n        \":\": {\n          colon: function () {\n            if (Object.hasOwnProperty.call(container, key)) {\n              throw new SyntaxError(\"Duplicate key '\" + key + \"\\\"\");\n            }\n            state = \"ovalue\";\n          }\n        },\n        \",\": {\n          ocomma: function () {\n            container[key] = value;\n            state = \"okey\";\n          },\n          acomma: function () {\n            container.push(value);\n            state = \"avalue\";\n          }\n        },\n        \"true\": {\n          go: function () {\n            value = true;\n            state = \"ok\";\n          },\n          ovalue: function () {\n            value = true;\n            state = \"ocomma\";\n          },\n          firstavalue: function () {\n            value = true;\n            state = \"acomma\";\n          },\n          avalue: function () {\n            value = true;\n            state = \"acomma\";\n          }\n        },\n        \"false\": {\n          go: function () {\n            value = false;\n            state = \"ok\";\n          },\n          ovalue: function () {\n            value = false;\n            state = \"ocomma\";\n          },\n          firstavalue: function () {\n            value = false;\n            state = \"acomma\";\n          },\n          avalue: function () {\n            value = false;\n            state = \"acomma\";\n          }\n        },\n        \"null\": {\n          go: function () {\n            value = null;\n            state = \"ok\";\n          },\n          ovalue: function () {\n            value = null;\n            state = \"ocomma\";\n          },\n          firstavalue: function () {\n            value = null;\n            state = \"acomma\";\n          },\n          avalue: function () {\n            value = null;\n            state = \"acomma\";\n          }\n        }\n      };\n\n      function debackslashify(text) {\n\n        // Remove and replace any backslash escapement.\n\n        return text.replace(/\\\\(?:u(.{4})|([^u]))/g, function (ignore, b, c) {\n          return b\n            ? String.fromCharCode(parseInt(b, 16))\n            : escapes[c];\n        });\n      }\n\n      return function (source, reviver) {\n\n        // A regular expression is used to extract tokens from the JSON text.\n        // The extraction process is cautious.\n\n        var result;\n        var tx = /^[\\u0020\\t\\n\\r]*(?:([,:\\[\\]{}]|true|false|null)|(-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)|\"((?:[^\\r\\n\\t\\\\\\\"]|\\\\(?:[\"\\\\\\/trnfb]|u[0-9a-fA-F]{4}))*)\")/;\n\n        // Set the starting state.\n\n        state = \"go\";\n\n        // The stack records the container, key, and state for each object or array\n        // that contains another object or array while processing nested structures.\n\n        stack = [];\n\n        // If any error occurs, we will catch it and ultimately throw a syntax error.\n\n        try {\n\n          // For each token...\n\n          while (true) {\n            result = tx.exec(source);\n            if (!result) {\n              break;\n            }\n\n            // result is the result array from matching the tokenizing regular expression.\n            //  result[0] contains everything that matched, including any initial whitespace.\n            //  result[1] contains any punctuation that was matched, or true, false, or null.\n            //  result[2] contains a matched number, still in string form.\n            //  result[3] contains a matched string, without quotes but with escapement.\n\n            if (result[1]) {\n\n              // Token: Execute the action for this state and token.\n\n              action[result[1]][state]();\n\n            } else if (result[2]) {\n\n              // Number token: Convert the number string into a number value and execute\n              // the action for this state and number.\n\n              value = +result[2];\n              number[state]();\n            } else {\n\n              // String token: Replace the escapement sequences and execute the action for\n              // this state and string.\n\n              value = debackslashify(result[3]);\n              string[state]();\n            }\n\n            // Remove the token from the string. The loop will continue as long as there\n            // are tokens. This is a slow process, but it allows the use of ^ matching,\n            // which assures that no illegal tokens slip through.\n\n            source = source.slice(result[0].length);\n          }\n\n          // If we find a state/token combination that is illegal, then the action will\n          // cause an error. We handle the error by simply changing the state.\n\n        } catch (e) {\n          state = e;\n        }\n\n        // The parsing is finished. If we are not in the final \"ok\" state, or if the\n        // remaining source contains anything except whitespace, then we did not have\n        //a well-formed JSON text.\n\n        if (state !== \"ok\" || (/[^\\u0020\\t\\n\\r]/.test(source))) {\n          throw (state instanceof SyntaxError)\n            ? state\n            : new SyntaxError(\"JSON\");\n        }\n\n        // If there is a reviver function, we recursively walk the new structure,\n        // passing each name/value pair to the reviver function for possible\n        // transformation, starting with a temporary root object that holds the current\n        // value in an empty key. If there is not a reviver function, we simply return\n        // that value.\n\n        return (typeof reviver === \"function\")\n          ? (function walk(holder, key) {\n            var k;\n            var v;\n            var val = holder[key];\n            if (val && typeof val === \"object\") {\n              for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(val, k)) {\n                  v = walk(val, k);\n                  if (v !== undefined) {\n                    val[k] = v;\n                  } else {\n                    delete val[k];\n                  }\n                }\n              }\n            }\n            return reviver.call(holder, key, val);\n          }({\"\": value}, \"\"))\n        : value;\n      };\n    }());\n  }\n}\n\nmodule.exports = setupCustomJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./vendor/JSON-js/json3.js\n// module id = 7\n// module chunks = 0","'use strict';\n\nvar _ = require('./utility');\n\n/*\n * Queue - an object which handles which handles a queue of items to be sent to Rollbar.\n *   This object handles rate limiting via a passed in rate limiter, retries based on connection\n *   errors, and filtering of items based on a set of configurable predicates. The communication to\n *   the backend is performed via a given API object.\n *\n * @param rateLimiter - An object which conforms to the interface\n *    rateLimiter.shouldSend(item) -> bool\n * @param api - An object which conforms to the interface\n *    api.postItem(payload, function(err, response))\n * @param logger - An object used to log verbose messages if desired\n * @param options - see Queue.prototype.configure\n */\nfunction Queue(rateLimiter, api, logger, options) {\n  this.rateLimiter = rateLimiter;\n  this.api = api;\n  this.logger = logger;\n  this.options = options;\n  this.predicates = [];\n  this.pendingItems = [];\n  this.pendingRequests = [];\n  this.retryQueue = [];\n  this.retryHandle = null;\n  this.waitCallback = null;\n  this.waitIntervalID = null;\n}\n\n/*\n * configure - updates the options this queue uses\n *\n * @param options\n */\nQueue.prototype.configure = function(options) {\n  this.api && this.api.configure(options);\n  var oldOptions = this.options;\n  this.options = _.merge(oldOptions, options);\n  return this;\n};\n\n/*\n * addPredicate - adds a predicate to the end of the list of predicates for this queue\n *\n * @param predicate - function(item, options) -> (bool|{err: Error})\n *  Returning true means that this predicate passes and the item is okay to go on the queue\n *  Returning false means do not add the item to the queue, but it is not an error\n *  Returning {err: Error} means do not add the item to the queue, and the given error explains why\n *  Returning {err: undefined} is equivalent to returning true but don't do that\n */\nQueue.prototype.addPredicate = function(predicate) {\n  if (_.isFunction(predicate)) {\n    this.predicates.push(predicate);\n  }\n  return this;\n};\n\nQueue.prototype.addPendingItem = function(item) {\n  this.pendingItems.push(item);\n};\n\nQueue.prototype.removePendingItem = function(item) {\n  var idx = this.pendingItems.indexOf(item);\n  if (idx !== -1) {\n    this.pendingItems.splice(idx, 1);\n  }\n};\n\n/*\n * addItem - Send an item to the Rollbar API if all of the predicates are satisfied\n *\n * @param item - The payload to send to the backend\n * @param callback - function(error, repsonse) which will be called with the response from the API\n *  in the case of a success, otherwise response will be null and error will have a value. If both\n *  error and response are null then the item was stopped by a predicate which did not consider this\n *  to be an error condition, but nonetheless did not send the item to the API.\n *  @param originalError - The original error before any transformations that is to be logged if any\n */\nQueue.prototype.addItem = function(item, callback, originalError, originalItem) {\n  if (!callback || !_.isFunction(callback)) {\n    callback = function() { return; };\n  }\n  var predicateResult = this._applyPredicates(item);\n  if (predicateResult.stop) {\n    this.removePendingItem(originalItem);\n    callback(predicateResult.err);\n    return;\n  }\n  this._maybeLog(item, originalError);\n  this.removePendingItem(originalItem);\n  this.pendingRequests.push(item);\n  try {\n    this._makeApiRequest(item, function(err, resp) {\n      this._dequeuePendingRequest(item);\n      callback(err, resp);\n    }.bind(this));\n  } catch (e) {\n    this._dequeuePendingRequest(item);\n    callback(e);\n  }\n};\n\n/*\n * wait - Stop any further errors from being added to the queue, and get called back when all items\n *   currently processing have finished sending to the backend.\n *\n * @param callback - function() called when all pending items have been sent\n */\nQueue.prototype.wait = function(callback) {\n  if (!_.isFunction(callback)) {\n    return;\n  }\n  this.waitCallback = callback;\n  if (this._maybeCallWait()) {\n    return;\n  }\n  if (this.waitIntervalID) {\n    this.waitIntervalID = clearInterval(this.waitIntervalID);\n  }\n  this.waitIntervalID = setInterval(function() {\n    this._maybeCallWait();\n  }.bind(this), 500);\n};\n\n/* _applyPredicates - Sequentially applies the predicates that have been added to the queue to the\n *   given item with the currently configured options.\n *\n * @param item - An item in the queue\n * @returns {stop: bool, err: (Error|null)} - stop being true means do not add item to the queue,\n *   the error value should be passed up to a callbak if we are stopping.\n */\nQueue.prototype._applyPredicates = function(item) {\n  var p = null;\n  for (var i = 0, len = this.predicates.length; i < len; i++) {\n    p = this.predicates[i](item, this.options);\n    if (!p || p.err !== undefined) {\n      return {stop: true, err: p.err};\n    }\n  }\n  return {stop: false, err: null};\n};\n\n/*\n * _makeApiRequest - Send an item to Rollbar, callback when done, if there is an error make an\n *   effort to retry if we are configured to do so.\n *\n * @param item - an item ready to send to the backend\n * @param callback - function(err, response)\n */\nQueue.prototype._makeApiRequest = function(item, callback) {\n  var rateLimitResponse = this.rateLimiter.shouldSend(item);\n  if (rateLimitResponse.shouldSend) {\n    this.api.postItem(item, function(err, resp) {\n      if (err) {\n        this._maybeRetry(err, item, callback);\n      } else {\n        callback(err, resp);\n      }\n    }.bind(this));\n  } else if (rateLimitResponse.error) {\n    callback(rateLimitResponse.error);\n  } else {\n    this.api.postItem(rateLimitResponse.payload, callback);\n  }\n};\n\n// These are errors basically mean there is no internet connection\nvar RETRIABLE_ERRORS = ['ECONNRESET', 'ENOTFOUND', 'ESOCKETTIMEDOUT', 'ETIMEDOUT', 'ECONNREFUSED', 'EHOSTUNREACH', 'EPIPE', 'EAI_AGAIN'];\n\n/*\n * _maybeRetry - Given the error returned by the API, decide if we should retry or just callback\n *   with the error.\n *\n * @param err - an error returned by the API transport\n * @param item - the item that was trying to be sent when this error occured\n * @param callback - function(err, response)\n */\nQueue.prototype._maybeRetry = function(err, item, callback) {\n  var shouldRetry = false;\n  if (this.options.retryInterval) {\n    for (var i = 0, len = RETRIABLE_ERRORS.length; i < len; i++) {\n      if (err.code === RETRIABLE_ERRORS[i]) {\n        shouldRetry = true;\n        break;\n      }\n    }\n  }\n  if (shouldRetry) {\n    this._retryApiRequest(item, callback);\n  } else {\n    callback(err);\n  }\n};\n\n/*\n * _retryApiRequest - Add an item and a callback to a queue and possibly start a timer to process\n *   that queue based on the retryInterval in the options for this queue.\n *\n * @param item - an item that failed to send due to an error we deem retriable\n * @param callback - function(err, response)\n */\nQueue.prototype._retryApiRequest = function(item, callback) {\n  this.retryQueue.push({item: item, callback: callback});\n\n  if (!this.retryHandle) {\n    this.retryHandle = setInterval(function() {\n      while (this.retryQueue.length) {\n        var retryObject = this.retryQueue.shift();\n        this._makeApiRequest(retryObject.item, retryObject.callback);\n      }\n    }.bind(this), this.options.retryInterval);\n  }\n};\n\n/*\n * _dequeuePendingRequest - Removes the item from the pending request queue, this queue is used to\n *   enable to functionality of providing a callback that clients can pass to `wait` to be notified\n *   when the pending request queue has been emptied. This must be called when the API finishes\n *   processing this item. If a `wait` callback is configured, it is called by this function.\n *\n * @param item - the item previously added to the pending request queue\n */\nQueue.prototype._dequeuePendingRequest = function(item) {\n  var idx = this.pendingRequests.indexOf(item);\n  if (idx !== -1) {\n    this.pendingRequests.splice(idx, 1);\n    this._maybeCallWait();\n  }\n};\n\nQueue.prototype._maybeLog = function(data, originalError) {\n  if (this.logger && this.options.verbose) {\n    var message = originalError;\n    message = message || _.get(data, 'body.trace.exception.message');\n    message = message || _.get(data, 'body.trace_chain.0.exception.message');\n    if (message) {\n      this.logger.error(message);\n      return;\n    }\n    message = _.get(data, 'body.message.body');\n    if (message) {\n      this.logger.log(message);\n    }\n  }\n};\n\nQueue.prototype._maybeCallWait = function() {\n  if (_.isFunction(this.waitCallback) && this.pendingItems.length === 0 && this.pendingRequests.length === 0) {\n    if (this.waitIntervalID) {\n      this.waitIntervalID = clearInterval(this.waitIntervalID);\n    }\n    this.waitCallback();\n    return true;\n  }\n  return false;\n};\n\nmodule.exports = Queue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/queue.js\n// module id = 8\n// module chunks = 0","'use strict';\n\nvar _ = require('./utility');\n\n/*\n * Notifier - the internal object responsible for delegating between the client exposed API, the\n * chain of transforms necessary to turn an item into something that can be sent to Rollbar, and the\n * queue which handles the communcation with the Rollbar API servers.\n *\n * @param queue - an object that conforms to the interface: addItem(item, callback)\n * @param options - an object representing the options to be set for this notifier, this should have\n * any defaults already set by the caller\n */\nfunction Notifier(queue, options) {\n  this.queue = queue;\n  this.options = options;\n  this.transforms = [];\n}\n\n/*\n * configure - updates the options for this notifier with the passed in object\n *\n * @param options - an object which gets merged with the current options set on this notifier\n * @returns this\n */\nNotifier.prototype.configure = function(options) {\n  this.queue && this.queue.configure(options);\n  var oldOptions = this.options;\n  this.options = _.merge(oldOptions, options);\n  return this;\n};\n\n/*\n * addTransform - adds a transform onto the end of the queue of transforms for this notifier\n *\n * @param transform - a function which takes three arguments:\n *    * item: An Object representing the data to eventually be sent to Rollbar\n *    * options: The current value of the options for this notifier\n *    * callback: function(err: (Null|Error), item: (Null|Object)) the transform must call this\n *    callback with a null value for error if it wants the processing chain to continue, otherwise\n *    with an error to terminate the processing. The item should be the updated item after this\n *    transform is finished modifying it.\n */\nNotifier.prototype.addTransform = function(transform) {\n  if (_.isFunction(transform)) {\n    this.transforms.push(transform);\n  }\n  return this;\n};\n\n/*\n * log - the internal log function which applies the configured transforms and then pushes onto the\n * queue to be sent to the backend.\n *\n * @param item - An object with the following structure:\n *    message [String] - An optional string to be sent to rollbar\n *    error [Error] - An optional error\n *\n * @param callback - A function of type function(err, resp) which will be called with exactly one\n * null argument and one non-null argument. The callback will be called once, either during the\n * transform stage if an error occurs inside a transform, or in response to the communication with\n * the backend. The second argument will be the response from the backend in case of success.\n */\nNotifier.prototype.log = function(item, callback) {\n  if (!callback || !_.isFunction(callback)) {\n    callback = function() {};\n  }\n\n  if (!this.options.enabled) {\n    return callback(new Error('Rollbar is not enabled'));\n  }\n\n  this.queue.addPendingItem(item);\n  var originalError = item.err;\n  this._applyTransforms(item, function(err, i) {\n    if (err) {\n      this.queue.removePendingItem(item);\n      return callback(err, null);\n    }\n    this.queue.addItem(i, callback, originalError, item);\n  }.bind(this));\n};\n\n/* Internal */\n\n/*\n * _applyTransforms - Applies the transforms that have been added to this notifier sequentially. See\n * `addTransform` for more information.\n *\n * @param item - An item to be transformed\n * @param callback - A function of type function(err, item) which will be called with a non-null\n * error and a null item in the case of a transform failure, or a null error and non-null item after\n * all transforms have been applied.\n */\nNotifier.prototype._applyTransforms = function(item, callback) {\n  var transformIndex = -1;\n  var transformsLength = this.transforms.length;\n  var transforms = this.transforms;\n  var options = this.options;\n\n  var cb = function(err, i) {\n    if (err) {\n      callback(err, null);\n      return;\n    }\n\n    transformIndex++;\n\n    if (transformIndex === transformsLength) {\n      callback(null, i);\n      return;\n    }\n\n    transforms[transformIndex](i, options, cb);\n  };\n\n  cb(null, item);\n};\n\nmodule.exports = Notifier;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/notifier.js\n// module id = 9\n// module chunks = 0","'use strict';\n\nvar _ = require('./utility');\n\nvar MAX_EVENTS = 100;\n\nfunction Telemeter(options) {\n  this.queue = [];\n  this.options = _.merge(options);\n  var maxTelemetryEvents = this.options.maxTelemetryEvents || MAX_EVENTS;\n  this.maxQueueSize = Math.max(0, Math.min(maxTelemetryEvents, MAX_EVENTS));\n}\n\nTelemeter.prototype.configure = function(options) {\n  var oldOptions = this.options;\n  this.options = _.merge(oldOptions, options);\n  var maxTelemetryEvents = this.options.maxTelemetryEvents || MAX_EVENTS;\n  var newMaxEvents = Math.max(0, Math.min(maxTelemetryEvents, MAX_EVENTS));\n  var deleteCount = 0;\n  if (this.maxQueueSize > newMaxEvents) {\n    deleteCount = this.maxQueueSize - newMaxEvents;\n  }\n  this.maxQueueSize = newMaxEvents;\n  this.queue.splice(0, deleteCount);\n};\n\nTelemeter.prototype.copyEvents = function() {\n  var events = Array.prototype.slice.call(this.queue, 0);\n  if (_.isFunction(this.options.filterTelemetry)) {\n    try {\n      var i = events.length;\n      while (i--) {\n        if (this.options.filterTelemetry(events[i])) {\n          events.splice(i, 1);\n        }\n      }\n    } catch (e) {\n      this.options.filterTelemetry = null;\n    }\n  }\n  return events;\n};\n\nTelemeter.prototype.capture = function(type, metadata, level, rollbarUUID, timestamp) {\n  var e = {\n    level: getLevel(type, level),\n    type: type,\n    timestamp_ms: timestamp || _.now(),\n    body: metadata,\n    source: 'client'\n  };\n  if (rollbarUUID) {\n    e.uuid = rollbarUUID;\n  }\n\n  try {\n    if (_.isFunction(this.options.filterTelemetry) && this.options.filterTelemetry(e)) {\n      return false;\n    }\n  } catch (exc) {\n    this.options.filterTelemetry = null;\n  }\n\n  this.push(e);\n  return e;\n};\n\nTelemeter.prototype.captureEvent = function(type, metadata, level, rollbarUUID) {\n  return this.capture(type, metadata, level, rollbarUUID);\n};\n\nTelemeter.prototype.captureError = function(err, level, rollbarUUID, timestamp) {\n  var metadata = {\n    message: err.message || String(err)\n  };\n  if (err.stack) {\n    metadata.stack = err.stack;\n  }\n  return this.capture('error', metadata, level, rollbarUUID, timestamp);\n};\n\nTelemeter.prototype.captureLog = function(message, level, rollbarUUID, timestamp) {\n  return this.capture('log', {\n    message: message\n  }, level, rollbarUUID, timestamp);\n};\n\nTelemeter.prototype.captureNetwork = function(metadata, subtype, rollbarUUID, requestData) {\n  subtype = subtype || 'xhr';\n  metadata.subtype = metadata.subtype || subtype;\n  if (requestData) {\n    metadata.request = requestData;\n  }\n  var level = this.levelFromStatus(metadata.status_code);\n  return this.capture('network', metadata, level, rollbarUUID);\n};\n\nTelemeter.prototype.levelFromStatus = function(statusCode) {\n  if (statusCode >= 200 && statusCode < 400) {\n    return 'info';\n  }\n  if (statusCode === 0 || statusCode >= 400) {\n    return 'error';\n  }\n  return 'info';\n};\n\nTelemeter.prototype.captureDom = function(subtype, element, value, checked, rollbarUUID) {\n  var metadata = {\n    subtype: subtype,\n    element: element\n  };\n  if (value !== undefined) {\n    metadata.value = value;\n  }\n  if (checked !== undefined) {\n    metadata.checked = checked;\n  }\n  return this.capture('dom', metadata, 'info', rollbarUUID);\n};\n\nTelemeter.prototype.captureNavigation = function(from, to, rollbarUUID) {\n  return this.capture('navigation', {from: from, to: to}, 'info', rollbarUUID);\n};\n\nTelemeter.prototype.captureDomContentLoaded = function(ts) {\n  return this.capture('navigation', {subtype: 'DOMContentLoaded'}, 'info', undefined, ts && ts.getTime());\n  /**\n   * If we decide to make this a dom event instead, then use the line below:\n  return this.capture('dom', {subtype: 'DOMContentLoaded'}, 'info', undefined, ts && ts.getTime());\n  */\n};\nTelemeter.prototype.captureLoad = function(ts) {\n  return this.capture('navigation', {subtype: 'load'}, 'info', undefined, ts && ts.getTime());\n  /**\n   * If we decide to make this a dom event instead, then use the line below:\n  return this.capture('dom', {subtype: 'load'}, 'info', undefined, ts && ts.getTime());\n  */\n};\n\nTelemeter.prototype.captureConnectivityChange = function(type, rollbarUUID) {\n  return this.captureNetwork({change: type}, 'connectivity', rollbarUUID);\n};\n\n// Only intended to be used internally by the notifier\nTelemeter.prototype._captureRollbarItem = function(item) {\n  if (!this.options.includeItemsInTelemetry) {\n    return;\n  }\n  if (item.err) {\n    return this.captureError(item.err, item.level, item.uuid, item.timestamp);\n  }\n  if (item.message) {\n    return this.captureLog(item.message, item.level, item.uuid, item.timestamp);\n  }\n  if (item.custom) {\n    return this.capture('log', item.custom, item.level, item.uuid, item.timestamp);\n  }\n};\n\nTelemeter.prototype.push = function(e) {\n  this.queue.push(e);\n  if (this.queue.length > this.maxQueueSize) {\n    this.queue.shift();\n  }\n};\n\nfunction getLevel(type, level) {\n  if (level) {\n    return level;\n  }\n  var defaultLevel = {\n    error: 'error',\n    manual: 'info'\n  };\n  return defaultLevel[type] || 'info';\n}\n\nmodule.exports = Telemeter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/telemetry.js\n// module id = 10\n// module chunks = 0","'use strict';\n\nvar _ = require('./utility');\nvar helpers = require('./apiUtility');\n\nvar defaultOptions = {\n  hostname: 'api.rollbar.com',\n  path: '/api/1/item/',\n  search: null,\n  version: '1',\n  protocol: 'https:',\n  port: 443\n};\n\n/**\n * Api is an object that encapsulates methods of communicating with\n * the Rollbar API.  It is a standard interface with some parts implemented\n * differently for server or browser contexts.  It is an object that should\n * be instantiated when used so it can contain non-global options that may\n * be different for another instance of RollbarApi.\n *\n * @param options {\n *    accessToken: the accessToken to use for posting items to rollbar\n *    endpoint: an alternative endpoint to send errors to\n *        must be a valid, fully qualified URL.\n *        The default is: https://api.rollbar.com/api/1/item\n *    proxy: if you wish to proxy requests provide an object\n *        with the following keys:\n *          host or hostname (required): foo.example.com\n *          port (optional): 123\n *          protocol (optional): https\n * }\n */\nfunction Api(options, t, u, j) {\n  this.options = options;\n  this.transport = t;\n  this.url = u;\n  this.jsonBackup = j;\n  this.accessToken = options.accessToken;\n  this.transportOptions = _getTransport(options, u);\n}\n\n/**\n *\n * @param data\n * @param callback\n */\nApi.prototype.postItem = function(data, callback) {\n  var transportOptions = helpers.transportOptions(this.transportOptions, 'POST');\n  var payload = helpers.buildPayload(this.accessToken, data, this.jsonBackup);\n  this.transport.post(this.accessToken, transportOptions, payload, callback);\n};\n\nApi.prototype.configure = function(options) {\n  var oldOptions = this.oldOptions;\n  this.options = _.merge(oldOptions, options);\n  this.transportOptions = _getTransport(this.options, this.url);\n  if (this.options.accessToken !== undefined) {\n    this.accessToken = this.options.accessToken;\n  }\n  return this;\n};\n\nfunction _getTransport(options, url) {\n  return helpers.getTransportFromOptions(options, defaultOptions, url);\n}\n\nmodule.exports = Api;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/api.js\n// module id = 11\n// module chunks = 0","'use strict';\n\nvar _ = require('./utility');\n\nfunction buildPayload(accessToken, data, jsonBackup) {\n  if (!_.isType(data.context, 'string')) {\n    var contextResult = _.stringify(data.context, jsonBackup);\n    if (contextResult.error) {\n      data.context = 'Error: could not serialize \\'context\\'';\n    } else {\n      data.context = contextResult.value || '';\n    }\n    if (data.context.length > 255) {\n      data.context = data.context.substr(0, 255);\n    }\n  }\n  return {\n    access_token: accessToken,\n    data: data\n  };\n}\n\nfunction getTransportFromOptions(options, defaults, url) {\n  var hostname = defaults.hostname;\n  var protocol = defaults.protocol;\n  var port = defaults.port;\n  var path = defaults.path;\n  var search = defaults.search;\n\n  var proxy = options.proxy;\n  if (options.endpoint) {\n    var opts = url.parse(options.endpoint);\n    hostname = opts.hostname;\n    protocol = opts.protocol;\n    port = opts.port;\n    path = opts.pathname;\n    search = opts.search;\n  }\n  return {\n    hostname: hostname,\n    protocol: protocol,\n    port: port,\n    path: path,\n    search: search,\n    proxy: proxy\n  };\n}\n\nfunction transportOptions(transport, method) {\n  var protocol = transport.protocol || 'https:';\n  var port = transport.port || (protocol === 'http:' ? 80 : protocol === 'https:' ? 443 : undefined);\n  var hostname = transport.hostname;\n  var path = transport.path;\n  if (transport.search) {\n    path = path + transport.search;\n  }\n  if (transport.proxy) {\n    path = protocol + '//' + hostname + path;\n    hostname = transport.proxy.host || transport.proxy.hostname;\n    port = transport.proxy.port;\n    protocol = transport.proxy.protocol || protocol;\n  }\n  return {\n    protocol: protocol,\n    hostname: hostname,\n    path: path,\n    port: port,\n    method: method\n  };\n}\n\nfunction appendPathToPath(base, path) {\n  var baseTrailingSlash = /\\/$/.test(base);\n  var pathBeginningSlash = /^\\//.test(path);\n\n  if (baseTrailingSlash && pathBeginningSlash) {\n    path = path.substring(1);\n  } else if (!baseTrailingSlash && !pathBeginningSlash) {\n    path = '/' + path;\n  }\n\n  return base + path;\n}\n\nmodule.exports = {\n  buildPayload: buildPayload,\n  getTransportFromOptions: getTransportFromOptions,\n  transportOptions: transportOptions,\n  appendPathToPath: appendPathToPath\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/apiUtility.js\n// module id = 12\n// module chunks = 0","'use strict';\n\n/* eslint-disable no-console */\nrequire('console-polyfill');\nvar detection = require('./detection');\nvar _ = require('../utility');\n\nfunction error() {\n  var args = Array.prototype.slice.call(arguments, 0);\n  args.unshift('Rollbar:');\n  if (detection.ieVersion() <= 8) {\n    console.error(_.formatArgsAsString(args));\n  } else {\n    console.error.apply(console, args);\n  }\n}\n\nfunction info() {\n  var args = Array.prototype.slice.call(arguments, 0);\n  args.unshift('Rollbar:');\n  if (detection.ieVersion() <= 8) {\n    console.info(_.formatArgsAsString(args));\n  } else {\n    console.info.apply(console, args);\n  }\n}\n\nfunction log() {\n  var args = Array.prototype.slice.call(arguments, 0);\n  args.unshift('Rollbar:');\n  if (detection.ieVersion() <= 8) {\n    console.log(_.formatArgsAsString(args));\n  } else {\n    console.log.apply(console, args);\n  }\n}\n\n/* eslint-enable no-console */\n\nmodule.exports = {\n  error: error,\n  info: info,\n  log: log\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/logger.js\n// module id = 13\n// module chunks = 0","// Console-polyfill. MIT license.\n// https://github.com/paulmillr/console-polyfill\n// Make it safe to do console.log() always.\n(function(global) {\n  'use strict';\n  if (!global.console) {\n    global.console = {};\n  }\n  var con = global.console;\n  var prop, method;\n  var dummy = function() {};\n  var properties = ['memory'];\n  var methods = ('assert,clear,count,debug,dir,dirxml,error,exception,group,' +\n     'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' +\n     'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(',');\n  while (prop = properties.pop()) if (!con[prop]) con[prop] = {};\n  while (method = methods.pop()) if (!con[method]) con[method] = dummy;\n  // Using `this` for web workers & supports Browserify / Webpack.\n})(typeof window === 'undefined' ? this : window);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/console-polyfill/index.js\n// module id = 14\n// module chunks = 0","'use strict';\n\n// This detection.js module is used to encapsulate any ugly browser/feature\n// detection we may need to do.\n\n// Figure out which version of IE we're using, if any.\n// This is gleaned from http://stackoverflow.com/questions/5574842/best-way-to-check-for-ie-less-than-9-in-javascript-without-library\n// Will return an integer on IE (i.e. 8)\n// Will return undefined otherwise\nfunction getIEVersion() {\n\tvar undef;\n\tif (!document) {\n\t\treturn undef;\n\t}\n\n  var v = 3,\n    div = document.createElement('div'),\n    all = div.getElementsByTagName('i');\n\n  while (\n    div.innerHTML = '<!--[if gt IE ' + (++v) + ']><i></i><![endif]-->',\n      all[0]\n    );\n\n  return v > 4 ? v : undef;\n}\n\nvar Detection = {\n  ieVersion: getIEVersion\n};\n\nmodule.exports = Detection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/detection.js\n// module id = 15\n// module chunks = 0","'use strict';\n\nfunction captureUncaughtExceptions(window, handler, shim) {\n  if (!window) { return; }\n  var oldOnError;\n\n  if (typeof handler._rollbarOldOnError === 'function') {\n    oldOnError = handler._rollbarOldOnError;\n  } else if (window.onerror) {\n    oldOnError = window.onerror;\n    while (oldOnError._rollbarOldOnError) {\n      oldOnError = oldOnError._rollbarOldOnError;\n    }\n    handler._rollbarOldOnError = oldOnError;\n  }\n\n  var fn = function() {\n    var args = Array.prototype.slice.call(arguments, 0);\n    _rollbarWindowOnError(window, handler, oldOnError, args);\n  };\n  if (shim) {\n    fn._rollbarOldOnError = oldOnError;\n  }\n  window.onerror = fn;\n}\n\nfunction _rollbarWindowOnError(window, r, old, args) {\n  if (window._rollbarWrappedError) {\n    if (!args[4]) {\n      args[4] = window._rollbarWrappedError;\n    }\n    if (!args[5]) {\n      args[5] = window._rollbarWrappedError._rollbarContext;\n    }\n    window._rollbarWrappedError = null;\n  }\n\n  r.handleUncaughtException.apply(r, args);\n  if (old) {\n    old.apply(window, args);\n  }\n}\n\nfunction captureUnhandledRejections(window, handler, shim) {\n  if (!window) { return; }\n\n  if (typeof window._rollbarURH === 'function' && window._rollbarURH.belongsToShim) {\n    window.removeEventListener('unhandledrejection', window._rollbarURH);\n  }\n\n  var rejectionHandler = function (evt) {\n    var reason, promise, detail;\n    try {\n      reason = evt.reason;\n    } catch (e) {\n      reason = undefined;\n    }\n    try {\n      promise = evt.promise;\n    } catch (e) {\n      promise = '[unhandledrejection] error getting `promise` from event';\n    }\n    try {\n      detail = evt.detail;\n      if (!reason && detail) {\n        reason = detail.reason;\n        promise = detail.promise;\n      }\n    } catch (e) {\n      // Ignore\n    }\n    if (!reason) {\n      reason = '[unhandledrejection] error getting `reason` from event';\n    }\n\n    if (handler && handler.handleUnhandledRejection) {\n      handler.handleUnhandledRejection(reason, promise);\n    }\n  };\n  rejectionHandler.belongsToShim = shim;\n  window._rollbarURH = rejectionHandler;\n  window.addEventListener('unhandledrejection', rejectionHandler);\n}\n\nfunction wrapGlobals(window, handler, shim) {\n  if (!window) { return; }\n  // Adapted from https://github.com/bugsnag/bugsnag-js\n  var globals = 'EventTarget,Window,Node,ApplicationCache,AudioTrackList,ChannelMergerNode,CryptoOperation,EventSource,FileReader,HTMLUnknownElement,IDBDatabase,IDBRequest,IDBTransaction,KeyOperation,MediaController,MessagePort,ModalWindow,Notification,SVGElementInstance,Screen,TextTrack,TextTrackCue,TextTrackList,WebSocket,WebSocketWorker,Worker,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload'.split(',');\n  var i, global;\n  for (i = 0; i < globals.length; ++i) {\n    global = globals[i];\n\n    if (window[global] && window[global].prototype) {\n      _extendListenerPrototype(handler, window[global].prototype, shim);\n    }\n  }\n}\n\nfunction _extendListenerPrototype(handler, prototype, shim) {\n  if (prototype.hasOwnProperty && prototype.hasOwnProperty('addEventListener')) {\n    var oldAddEventListener = prototype.addEventListener;\n    while (oldAddEventListener._rollbarOldAdd && oldAddEventListener.belongsToShim) {\n      oldAddEventListener = oldAddEventListener._rollbarOldAdd;\n    }\n    var addFn = function(event, callback, bubble) {\n      oldAddEventListener.call(this, event, handler.wrap(callback), bubble);\n    };\n    addFn._rollbarOldAdd = oldAddEventListener;\n    addFn.belongsToShim = shim;\n    prototype.addEventListener = addFn;\n\n    var oldRemoveEventListener = prototype.removeEventListener;\n    while (oldRemoveEventListener._rollbarOldRemove && oldRemoveEventListener.belongsToShim) {\n      oldRemoveEventListener = oldRemoveEventListener._rollbarOldRemove;\n    }\n    var removeFn = function(event, callback, bubble) {\n      oldRemoveEventListener.call(this, event, callback && callback._rollbar_wrapped || callback, bubble);\n    };\n    removeFn._rollbarOldRemove = oldRemoveEventListener;\n    removeFn.belongsToShim = shim;\n    prototype.removeEventListener = removeFn;\n  }\n}\n\nmodule.exports = {\n  captureUncaughtExceptions: captureUncaughtExceptions,\n  captureUnhandledRejections: captureUnhandledRejections,\n  wrapGlobals: wrapGlobals\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/globalSetup.js\n// module id = 16\n// module chunks = 0","'use strict';\n\n/*global XDomainRequest*/\n\nvar _ = require('../utility');\nvar truncation = require('../truncation');\nvar logger = require('./logger');\n\n/*\n * accessToken may be embedded in payload but that should not\n *   be assumed\n *\n * options: {\n *   hostname\n *   protocol\n *   path\n *   port\n *   method\n * }\n *\n *  params is an object containing key/value pairs. These\n *    will be appended to the path as 'key=value&key=value'\n *\n * payload is an unserialized object\n */\n\nfunction get(accessToken, options, params, callback, requestFactory) {\n  if (!callback || !_.isFunction(callback)) {\n    callback = function() {};\n  }\n  _.addParamsAndAccessTokenToPath(accessToken, options, params);\n\n  var method = 'GET';\n  var url = _.formatUrl(options);\n  _makeZoneRequest(accessToken, url, method, null, callback, requestFactory);\n}\n\nfunction post(accessToken, options, payload, callback, requestFactory) {\n  if (!callback || !_.isFunction(callback)) {\n    callback = function() {};\n  }\n\n  if (!payload) {\n    return callback(new Error('Cannot send empty request'));\n  }\n\n  var stringifyResult = truncation.truncate(payload);\n  if (stringifyResult.error) {\n    return callback(stringifyResult.error);\n  }\n\n  var writeData = stringifyResult.value;\n  var method = 'POST';\n  var url = _.formatUrl(options);\n  _makeZoneRequest(accessToken, url, method, writeData, callback, requestFactory);\n}\n\n// Wraps _makeRequest and if Angular 2+ Zone.js is detected, changes scope\n// so Angular change detection isn't triggered on each API call.\n// This is the equivalent of runOutsideAngular().\n//\nfunction _makeZoneRequest(accessToken, url, method, data, callback, requestFactory) {\n  var gWindow = ((typeof window != 'undefined') && window) || ((typeof self != 'undefined') && self);\n  var currentZone = gWindow && gWindow.Zone && gWindow.Zone.current;\n\n  if (currentZone && currentZone._name === 'angular') {\n    var rootZone = currentZone._parent;\n    rootZone.run(function () {\n      _makeRequest(accessToken, url, method, data, callback, requestFactory);\n    });\n  } else {\n    _makeRequest(accessToken, url, method, data, callback, requestFactory);\n  }\n}\n\nfunction _makeRequest(accessToken, url, method, data, callback, requestFactory) {\n  var request;\n  if (requestFactory) {\n    request = requestFactory();\n  } else {\n    request = _createXMLHTTPObject();\n  }\n  if (!request) {\n    // Give up, no way to send requests\n    return callback(new Error('No way to send a request'));\n  }\n  try {\n    try {\n      var onreadystatechange = function() {\n        try {\n          if (onreadystatechange && request.readyState === 4) {\n            onreadystatechange = undefined;\n\n            var parseResponse = _.jsonParse(request.responseText);\n            if (_isSuccess(request)) {\n              callback(parseResponse.error, parseResponse.value);\n              return;\n            } else if (_isNormalFailure(request)) {\n              if (request.status === 403) {\n                // likely caused by using a server access token\n                var message = parseResponse.value && parseResponse.value.message;\n                logger.error(message);\n              }\n              // return valid http status codes\n              callback(new Error(String(request.status)));\n            } else {\n              // IE will return a status 12000+ on some sort of connection failure,\n              // so we return a blank error\n              // http://msdn.microsoft.com/en-us/library/aa383770%28VS.85%29.aspx\n              var msg = 'XHR response had no status code (likely connection failure)';\n              callback(_newRetriableError(msg));\n            }\n          }\n        } catch (ex) {\n          //jquery source mentions firefox may error out while accessing the\n          //request members if there is a network error\n          //https://github.com/jquery/jquery/blob/a938d7b1282fc0e5c52502c225ae8f0cef219f0a/src/ajax/xhr.js#L111\n          var exc;\n          if (ex && ex.stack) {\n            exc = ex;\n          } else {\n            exc = new Error(ex);\n          }\n          callback(exc);\n        }\n      };\n\n      request.open(method, url, true);\n      if (request.setRequestHeader) {\n        request.setRequestHeader('Content-Type', 'application/json');\n        request.setRequestHeader('X-Rollbar-Access-Token', accessToken);\n      }\n      request.onreadystatechange = onreadystatechange;\n      request.send(data);\n    } catch (e1) {\n      // Sending using the normal xmlhttprequest object didn't work, try XDomainRequest\n      if (typeof XDomainRequest !== 'undefined') {\n\n        // Assume we are in a really old browser which has a bunch of limitations:\n        // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\n        // Extreme paranoia: if we have XDomainRequest then we have a window, but just in case\n        if (!window || !window.location) {\n          return callback(new Error('No window available during request, unknown environment'));\n        }\n\n        // If the current page is http, try and send over http\n        if (window.location.href.substring(0, 5) === 'http:' && url.substring(0, 5) === 'https') {\n          url = 'http' + url.substring(5);\n        }\n\n        var xdomainrequest = new XDomainRequest();\n        xdomainrequest.onprogress = function() {};\n        xdomainrequest.ontimeout = function() {\n          var msg = 'Request timed out';\n          var code = 'ETIMEDOUT';\n          callback(_newRetriableError(msg, code));\n        };\n        xdomainrequest.onerror = function() {\n          callback(new Error('Error during request'));\n        };\n        xdomainrequest.onload = function() {\n          var parseResponse = _.jsonParse(xdomainrequest.responseText);\n          callback(parseResponse.error, parseResponse.value);\n        };\n        xdomainrequest.open(method, url, true);\n        xdomainrequest.send(data);\n      } else {\n        callback(new Error('Cannot find a method to transport a request'));\n      }\n    }\n  } catch (e2) {\n    callback(e2);\n  }\n}\n\nfunction _createXMLHTTPObject() {\n  /* global ActiveXObject:false */\n\n  var factories = [\n    function () {\n      return new XMLHttpRequest();\n    },\n    function () {\n      return new ActiveXObject('Msxml2.XMLHTTP');\n    },\n    function () {\n      return new ActiveXObject('Msxml3.XMLHTTP');\n    },\n    function () {\n      return new ActiveXObject('Microsoft.XMLHTTP');\n    }\n  ];\n  var xmlhttp;\n  var i;\n  var numFactories = factories.length;\n  for (i = 0; i < numFactories; i++) {\n    /* eslint-disable no-empty */\n    try {\n      xmlhttp = factories[i]();\n      break;\n    } catch (e) {\n      // pass\n    }\n    /* eslint-enable no-empty */\n  }\n  return xmlhttp;\n}\n\nfunction _isSuccess(r) {\n  return r && r.status && r.status === 200;\n}\n\nfunction _isNormalFailure(r) {\n  return r && _.isType(r.status, 'number') && r.status >= 400 && r.status < 600;\n}\n\nfunction _newRetriableError(message, code) {\n  var err = new Error(message);\n  err.code = code || 'ENOTFOUND';\n  return err;\n}\n\nmodule.exports = {\n  get: get,\n  post: post\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/transport.js\n// module id = 17\n// module chunks = 0","'use strict';\n\nvar _ = require('./utility');\n\nfunction raw(payload, jsonBackup) {\n  return [payload, _.stringify(payload, jsonBackup)];\n}\n\nfunction selectFrames(frames, range) {\n  var len = frames.length;\n  if (len > range * 2) {\n    return frames.slice(0, range).concat(frames.slice(len - range));\n  }\n  return frames;\n}\n\nfunction truncateFrames(payload, jsonBackup, range) {\n  range = (typeof range === 'undefined') ? 30 : range;\n  var body = payload.data.body;\n  var frames;\n  if (body.trace_chain) {\n    var chain = body.trace_chain;\n    for (var i = 0; i < chain.length; i++) {\n      frames = chain[i].frames;\n      frames = selectFrames(frames, range);\n      chain[i].frames = frames;\n    }\n  } else if (body.trace) {\n    frames = body.trace.frames;\n    frames = selectFrames(frames, range);\n    body.trace.frames = frames;\n  }\n  return [payload, _.stringify(payload, jsonBackup)];\n}\n\nfunction maybeTruncateValue(len, val) {\n  if (!val) {\n    return val;\n  }\n  if (val.length > len) {\n    return val.slice(0, len - 3).concat('...');\n  }\n  return val;\n}\n\nfunction truncateStrings(len, payload, jsonBackup) {\n  function truncator(k, v, seen) {\n    switch (_.typeName(v)) {\n      case 'string':\n        return maybeTruncateValue(len, v);\n      case 'object':\n      case 'array':\n        return _.traverse(v, truncator, seen);\n      default:\n        return v;\n    }\n  }\n  payload = _.traverse(payload, truncator, []);\n  return [payload, _.stringify(payload, jsonBackup)];\n}\n\nfunction truncateTraceData(traceData) {\n  if (traceData.exception) {\n    delete traceData.exception.description;\n    traceData.exception.message = maybeTruncateValue(255, traceData.exception.message);\n  }\n  traceData.frames = selectFrames(traceData.frames, 1);\n  return traceData;\n}\n\nfunction minBody(payload, jsonBackup) {\n  var body = payload.data.body;\n  if (body.trace_chain) {\n    var chain = body.trace_chain;\n    for (var i = 0; i < chain.length; i++) {\n      chain[i] = truncateTraceData(chain[i]);\n    }\n  } else if (body.trace) {\n    body.trace = truncateTraceData(body.trace);\n  }\n  return [payload, _.stringify(payload, jsonBackup)];\n}\n\nfunction needsTruncation(payload, maxSize) {\n  return payload.length > maxSize;\n}\n\nfunction truncate(payload, jsonBackup, maxSize) {\n  maxSize = (typeof maxSize === 'undefined') ? (512 * 1024) : maxSize;\n  var strategies = [\n    raw,\n    truncateFrames,\n    truncateStrings.bind(null, 1024),\n    truncateStrings.bind(null, 512),\n    truncateStrings.bind(null, 256),\n    minBody\n  ];\n  var strategy, results, result;\n\n  while ((strategy = strategies.shift())) {\n    results = strategy(payload, jsonBackup);\n    payload = results[0];\n    result = results[1];\n    if (result.error || !needsTruncation(result.value, maxSize)) {\n      return result;\n    }\n  }\n  return result;\n}\n\nmodule.exports = {\n  truncate: truncate,\n\n  /* for testing */\n  raw: raw,\n  truncateFrames: truncateFrames,\n  truncateStrings: truncateStrings,\n  maybeTruncateValue: maybeTruncateValue\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/truncation.js\n// module id = 18\n// module chunks = 0","'use strict';\n\n// See https://nodejs.org/docs/latest/api/url.html\nfunction parse(url) {\n  var result = {\n    protocol: null, auth: null, host: null, path: null,\n    hash: null, href: url, hostname: null, port: null,\n    pathname: null, search: null, query: null\n  };\n\n  var i, last;\n  i = url.indexOf('//');\n  if (i !== -1) {\n    result.protocol = url.substring(0,i);\n    last = i+2;\n  } else {\n    last = 0;\n  }\n  \n  i = url.indexOf('@', last);\n  if (i !== -1) {\n    result.auth = url.substring(last, i);\n    last = i+1;\n  }\n\n  i = url.indexOf('/', last);\n  if (i === -1) {\n    i = url.indexOf('?', last);\n    if (i === -1) {\n      i = url.indexOf('#', last);\n      if (i === -1) {\n        result.host = url.substring(last);\n      } else {\n        result.host = url.substring(last, i);\n        result.hash = url.substring(i);\n      }\n      result.hostname = result.host.split(':')[0];\n      result.port = result.host.split(':')[1];\n      if (result.port) {\n        result.port = parseInt(result.port, 10);\n      }\n      return result;\n    } else {\n      result.host = url.substring(last, i);\n      result.hostname = result.host.split(':')[0];\n      result.port = result.host.split(':')[1];\n      if (result.port) {\n        result.port = parseInt(result.port, 10);\n      }\n      last = i;\n    }\n  } else {\n    result.host = url.substring(last, i);\n    result.hostname = result.host.split(':')[0];\n    result.port = result.host.split(':')[1];\n    if (result.port) {\n      result.port = parseInt(result.port, 10);\n    }\n    last = i;\n  }\n\n  i = url.indexOf('#', last);\n  if (i === -1) {\n    result.path = url.substring(last);\n  } else {\n    result.path = url.substring(last, i);\n    result.hash = url.substring(i);\n  }\n\n  if (result.path) {\n    var pathParts = result.path.split('?');\n    result.pathname = pathParts[0];\n    result.query = pathParts[1];\n    result.search = result.query ? '?' + result.query : null;\n  }\n  return result;\n}\n\nmodule.exports = {\n  parse: parse\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/url.js\n// module id = 19\n// module chunks = 0","'use strict';\n\nvar _ = require('../utility');\nvar errorParser = require('./errorParser');\nvar logger = require('./logger');\n\nfunction handleItemWithError(item, options, callback) {\n  item.data = item.data || {};\n  if (item.err) {\n    try {\n      item.stackInfo = item.err._savedStackTrace || errorParser.parse(item.err);\n    } catch (e) {\n      logger.error('Error while parsing the error object.', e);\n      try {\n        item.message = item.err.message || item.err.description || item.message || String(item.err);\n      } catch (e2) {\n        item.message = String(item.err) || String(e2);\n      }\n      delete item.err;\n    }\n  }\n  callback(null, item);\n}\n\nfunction ensureItemHasSomethingToSay(item, options, callback) {\n  if (!item.message && !item.stackInfo && !item.custom) {\n    callback(new Error('No message, stack info, or custom data'), null);\n  }\n  callback(null, item);\n}\n\nfunction addBaseInfo(item, options, callback) {\n  var environment = (options.payload && options.payload.environment) || options.environment;\n  item.data = _.merge(item.data, {\n    environment: environment,\n    level: item.level,\n    endpoint: options.endpoint,\n    platform: 'browser',\n    framework: 'browser-js',\n    language: 'javascript',\n    server: {},\n    uuid: item.uuid,\n    notifier: {\n      name: 'rollbar-browser-js',\n      version: options.version\n    }\n  });\n  callback(null, item);\n}\n\nfunction addRequestInfo(window) {\n  return function(item, options, callback) {\n    if (!window || !window.location) {\n      return callback(null, item);\n    }\n    var remoteString = '$remote_ip';\n    if (!options.captureIp) {\n      remoteString = null;\n    } else if (options.captureIp !== true) {\n      remoteString += '_anonymize';\n    }\n    _.set(item, 'data.request', {\n      url: window.location.href,\n      query_string: window.location.search,\n      user_ip: remoteString\n    });\n    callback(null, item);\n  };\n}\n\nfunction addClientInfo(window) {\n  return function(item, options, callback) {\n    if (!window) {\n      return callback(null, item);\n    }\n    var nav = window.navigator || {};\n    var scr = window.screen || {};\n    _.set(item, 'data.client', {\n      runtime_ms: item.timestamp - window._rollbarStartTime,\n      timestamp: Math.round(item.timestamp / 1000),\n      javascript: {\n        browser: nav.userAgent,\n        language: nav.language,\n        cookie_enabled: nav.cookieEnabled,\n        screen: {\n          width: scr.width,\n          height: scr.height\n        }\n      }\n    });\n    callback(null, item);\n  };\n}\n\nfunction addPluginInfo(window) {\n  return function(item, options, callback) {\n    if (!window || !window.navigator) {\n      return callback(null, item);\n    }\n    var plugins = [];\n    var navPlugins = window.navigator.plugins || [];\n    var cur;\n    for (var i=0, l=navPlugins.length; i < l; ++i) {\n      cur = navPlugins[i];\n      plugins.push({name: cur.name, description: cur.description});\n    }\n    _.set(item, 'data.client.javascript.plugins', plugins);\n    callback(null, item);\n  };\n}\n\nfunction addBody(item, options, callback) {\n  if (item.stackInfo) {\n    addBodyTrace(item, options, callback);\n  } else {\n    addBodyMessage(item, options, callback);\n  }\n}\n\nfunction addBodyMessage(item, options, callback) {\n  var message = item.message;\n  var custom = item.custom;\n\n  if (!message) {\n    if (custom) {\n      var scrubFields = options.scrubFields;\n      var messageResult = _.stringify(_.scrub(custom, scrubFields));\n      message = messageResult.error || messageResult.value || '';\n    } else {\n      message = '';\n    }\n  }\n  var result = {\n    body: message\n  };\n\n  if (custom) {\n    result.extra = _.merge(custom);\n  }\n\n  _.set(item, 'data.body', {message: result});\n  callback(null, item);\n}\n\n\nfunction addBodyTrace(item, options, callback) {\n  var description = item.data.description;\n  var stackInfo = item.stackInfo;\n  var custom = item.custom;\n\n  var guess = errorParser.guessErrorClass(stackInfo.message);\n  var className = stackInfo.name || guess[0];\n  var message = guess[1];\n  var trace = {\n    exception: {\n      'class': className,\n      message: message\n    }\n  };\n\n  if (description) {\n    trace.exception.description = description;\n  }\n\n  // Transform a TraceKit stackInfo object into a Rollbar trace\n  var stack = stackInfo.stack;\n  if (stack && stack.length === 0 && item._unhandledStackInfo && item._unhandledStackInfo.stack) {\n    stack = item._unhandledStackInfo.stack;\n  }\n  if (stack) {\n    if (stack.length === 0) {\n      trace.exception.stack = stackInfo.rawStack;\n      trace.exception.raw = String(stackInfo.rawException);\n    }\n    var stackFrame;\n    var frame;\n    var code;\n    var pre;\n    var post;\n    var contextLength;\n    var i, mid;\n\n    trace.frames = [];\n    for (i = 0; i < stack.length; ++i) {\n      stackFrame = stack[i];\n      frame = {\n        filename: stackFrame.url ? _.sanitizeUrl(stackFrame.url) : '(unknown)',\n        lineno: stackFrame.line || null,\n        method: (!stackFrame.func || stackFrame.func === '?') ? '[anonymous]' : stackFrame.func,\n        colno: stackFrame.column\n      };\n      if (options.sendFrameUrl) {\n        frame.url = stackFrame.url;\n      }\n      if (frame.method && frame.method.endsWith && frame.method.endsWith('_rollbar_wrapped')) {\n        continue;\n      }\n\n      code = pre = post = null;\n      contextLength = stackFrame.context ? stackFrame.context.length : 0;\n      if (contextLength) {\n        mid = Math.floor(contextLength / 2);\n        pre = stackFrame.context.slice(0, mid);\n        code = stackFrame.context[mid];\n        post = stackFrame.context.slice(mid);\n      }\n\n      if (code) {\n        frame.code = code;\n      }\n\n      if (pre || post) {\n        frame.context = {};\n        if (pre && pre.length) {\n          frame.context.pre = pre;\n        }\n        if (post && post.length) {\n          frame.context.post = post;\n        }\n      }\n\n      if (stackFrame.args) {\n        frame.args = stackFrame.args;\n      }\n\n      trace.frames.push(frame);\n    }\n\n    // NOTE(cory): reverse the frames since rollbar.com expects the most recent call last\n    trace.frames.reverse();\n\n    if (custom) {\n      trace.extra = _.merge(custom);\n    }\n    _.set(item, 'data.body', {trace: trace});\n    callback(null, item);\n  } else {\n    item.message = className + ': ' + message;\n    addBodyMessage(item, options, callback);\n  }\n}\n\nfunction scrubPayload(item, options, callback) {\n  var scrubFields = options.scrubFields;\n  item.data = _.scrub(item.data, scrubFields);\n  callback(null, item);\n}\n\nmodule.exports = {\n  handleItemWithError: handleItemWithError,\n  ensureItemHasSomethingToSay: ensureItemHasSomethingToSay,\n  addBaseInfo: addBaseInfo,\n  addRequestInfo: addRequestInfo,\n  addClientInfo: addClientInfo,\n  addPluginInfo: addPluginInfo,\n  addBody: addBody,\n  scrubPayload: scrubPayload\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/transforms.js\n// module id = 20\n// module chunks = 0","'use strict';\n\nvar ErrorStackParser = require('error-stack-parser');\n\nvar UNKNOWN_FUNCTION = '?';\nvar ERR_CLASS_REGEXP = new RegExp('^(([a-zA-Z0-9-_$ ]*): *)?(Uncaught )?([a-zA-Z0-9-_$ ]*): ');\n\nfunction guessFunctionName() {\n  return UNKNOWN_FUNCTION;\n}\n\n\nfunction gatherContext() {\n  return null;\n}\n\n\nfunction Frame(stackFrame) {\n  var data = {};\n\n  data._stackFrame = stackFrame;\n\n  data.url = stackFrame.fileName;\n  data.line = stackFrame.lineNumber;\n  data.func = stackFrame.functionName;\n  data.column = stackFrame.columnNumber;\n  data.args = stackFrame.args;\n\n  data.context = gatherContext();\n\n  return data;\n}\n\n\nfunction Stack(exception) {\n  function getStack() {\n    var parserStack = [];\n    var exc;\n\n    if (!exception.stack) {\n      try {\n        throw exception;\n      } catch (e) {\n        exc = e;\n      }\n    } else {\n      exc = exception;\n    }\n\n    try {\n      parserStack = ErrorStackParser.parse(exc);\n    } catch(e) {\n      parserStack = [];\n    }\n\n    var stack = [];\n\n    for (var i = 0; i < parserStack.length; i++) {\n      stack.push(new Frame(parserStack[i]));\n    }\n\n    return stack;\n  }\n\n  var name = exception.constructor && exception.constructor.name;\n  if (!name || !name.length || name.length < 3) {\n    name = exception.name;\n  }\n\n  return {\n    stack: getStack(),\n    message: exception.message,\n    name: name,\n    rawStack: exception.stack,\n    rawException: exception\n  };\n}\n\n\nfunction parse(e) {\n  return new Stack(e);\n}\n\n\nfunction guessErrorClass(errMsg) {\n  if (!errMsg || !errMsg.match) {\n    return ['Unknown error. There was no error message to display.', ''];\n  }\n  var errClassMatch = errMsg.match(ERR_CLASS_REGEXP);\n  var errClass = '(unknown)';\n\n  if (errClassMatch) {\n    errClass = errClassMatch[errClassMatch.length - 1];\n    errMsg = errMsg.replace((errClassMatch[errClassMatch.length - 2] || '') + errClass + ':', '');\n    errMsg = errMsg.replace(/(^[\\s]+|[\\s]+$)/g, '');\n  }\n  return [errClass, errMsg];\n}\n\n\nmodule.exports = {\n  guessFunctionName: guessFunctionName,\n  guessErrorClass: guessErrorClass,\n  gatherContext: gatherContext,\n  parse: parse,\n  Stack: Stack,\n  Frame: Frame\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/errorParser.js\n// module id = 21\n// module chunks = 0","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n\n    function _map(array, fn, thisArg) {\n        if (typeof Array.prototype.map === 'function') {\n            return array.map(fn, thisArg);\n        } else {\n            var output = new Array(array.length);\n            for (var i = 0; i < array.length; i++) {\n                output[i] = fn.call(thisArg, array[i]);\n            }\n            return output;\n        }\n    }\n\n    function _filter(array, fn, thisArg) {\n        if (typeof Array.prototype.filter === 'function') {\n            return array.filter(fn, thisArg);\n        } else {\n            var output = [];\n            for (var i = 0; i < array.length; i++) {\n                if (fn.call(thisArg, array[i])) {\n                    output.push(array[i]);\n                }\n            }\n            return output;\n        }\n    }\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         * @param error {Error}\n         * @return Array[StackFrame]\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        /**\n         * Separate line and column numbers from a URL-like string.\n         * @param urlLike String\n         * @return Array[String]\n         */\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var locationParts = urlLike.replace(/[\\(\\)\\s]/g, '').split(':');\n            var lastNumber = locationParts.pop();\n            var possibleNumber = locationParts[locationParts.length - 1];\n            if (!isNaN(parseFloat(possibleNumber)) && isFinite(possibleNumber)) {\n                var lineNumber = locationParts.pop();\n                return [locationParts.join(':'), lineNumber, lastNumber];\n            } else {\n                return [locationParts.join(':'), lastNumber, undefined];\n            }\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = _filter(error.stack.split('\\n'), function (line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return _map(filtered, function (line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, '');\n                }\n                var tokens = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').split(/\\s+/).slice(1);\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = tokens.join(' ') || undefined;\n                var fileName = locationParts[0] === 'eval' ? undefined : locationParts[0];\n\n                return new StackFrame(functionName, undefined, fileName, locationParts[1], locationParts[2], line);\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = _filter(error.stack.split('\\n'), function (line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return _map(filtered, function (line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame(line);\n                } else {\n                    var tokens = line.split('@');\n                    var locationParts = this.extractLocation(tokens.pop());\n                    var functionName = tokens.shift() || undefined;\n                    return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2], line);\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame(undefined, undefined, match[2], match[1], undefined, lines[i]));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame(match[3] || undefined, undefined, match[2], match[1], undefined, lines[i]));\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = _filter(error.stack.split('\\n'), function (line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) &&\n                    !line.match(/^Error created at/);\n            }, this);\n\n            return _map(filtered, function (line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ? undefined : argsRaw.split(',');\n                return new StackFrame(functionName, args, locationParts[0], locationParts[1], locationParts[2], line);\n            }, this);\n        }\n    };\n}));\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/error-stack-parser/error-stack-parser.js\n// module id = 22\n// module chunks = 0","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function () {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function StackFrame(functionName, args, fileName, lineNumber, columnNumber, source) {\n        if (functionName !== undefined) {\n            this.setFunctionName(functionName);\n        }\n        if (args !== undefined) {\n            this.setArgs(args);\n        }\n        if (fileName !== undefined) {\n            this.setFileName(fileName);\n        }\n        if (lineNumber !== undefined) {\n            this.setLineNumber(lineNumber);\n        }\n        if (columnNumber !== undefined) {\n            this.setColumnNumber(columnNumber);\n        }\n        if (source !== undefined) {\n            this.setSource(source);\n        }\n    }\n\n    StackFrame.prototype = {\n        getFunctionName: function () {\n            return this.functionName;\n        },\n        setFunctionName: function (v) {\n            this.functionName = String(v);\n        },\n\n        getArgs: function () {\n            return this.args;\n        },\n        setArgs: function (v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        // NOTE: Property name may be misleading as it includes the path,\n        // but it somewhat mirrors V8's JavaScriptStackTraceApi\n        // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's\n        // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14\n        getFileName: function () {\n            return this.fileName;\n        },\n        setFileName: function (v) {\n            this.fileName = String(v);\n        },\n\n        getLineNumber: function () {\n            return this.lineNumber;\n        },\n        setLineNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Line Number must be a Number');\n            }\n            this.lineNumber = Number(v);\n        },\n\n        getColumnNumber: function () {\n            return this.columnNumber;\n        },\n        setColumnNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Column Number must be a Number');\n            }\n            this.columnNumber = Number(v);\n        },\n\n        getSource: function () {\n            return this.source;\n        },\n        setSource: function (v) {\n            this.source = String(v);\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    return StackFrame;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/error-stack-parser/~/stackframe/stackframe.js\n// module id = 23\n// module chunks = 0","'use strict';\n\nvar _ = require('./utility');\n\nfunction itemToPayload(item, options, callback) {\n  var payloadOptions = options.payload || {};\n  if (payloadOptions.body) {\n    delete payloadOptions.body;\n  }\n\n  var data = _.merge(item.data, payloadOptions);\n  if (item._isUncaught) {\n    data._isUncaught = true;\n  }\n  if (item._originalArgs) {\n    data._originalArgs = item._originalArgs;\n  }\n  callback(null, data);\n}\n\nfunction addTelemetryData(item, options, callback) {\n  if (item.telemetryEvents) {\n    _.set(item, 'data.body.telemetry', item.telemetryEvents);\n  }\n  callback(null, item);\n}\n\nfunction addMessageWithError(item, options, callback) {\n  if (!item.message) {\n    callback(null, item);\n    return;\n  }\n  var tracePath = 'data.body.trace_chain.0';\n  var trace = _.get(item, tracePath);\n  if (!trace) {\n    tracePath = 'data.body.trace';\n    trace = _.get(item, tracePath);\n  }\n  if (trace) {\n    if (!(trace.exception && trace.exception.description)) {\n      _.set(item, tracePath+'.exception.description', item.message);\n      callback(null, item);\n      return;\n    }\n    var extra = _.get(item, tracePath+'.extra') || {};\n    var newExtra =  _.merge(extra, {message: item.message});\n    _.set(item, tracePath+'.extra', newExtra);\n  }\n  callback(null, item);\n}\n\nfunction userTransform(logger) {\n  return function(item, options, callback) {\n    var newItem = _.merge(item);\n    try {\n      if (_.isFunction(options.transform)) {\n        options.transform(newItem.data, item);\n      }\n    } catch (e) {\n      options.transform = null;\n      logger.error('Error while calling custom transform() function. Removing custom transform().', e);\n      callback(null, item);\n      return;\n    }\n    callback(null, newItem);\n  }\n}\n\nfunction addConfigToPayload(item, options, callback) {\n  if (!options.sendConfig) {\n    return callback(null, item);\n  }\n  var configKey = '_rollbarConfig';\n  var custom = _.get(item, 'data.custom') || {};\n  custom[configKey] = options;\n  item.data.custom = custom;\n  callback(null, item);\n}\n\nmodule.exports = {\n  itemToPayload: itemToPayload,\n  addTelemetryData: addTelemetryData,\n  addMessageWithError: addMessageWithError,\n  userTransform: userTransform,\n  addConfigToPayload: addConfigToPayload\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/transforms.js\n// module id = 24\n// module chunks = 0","'use strict';\n\nvar _ = require('../utility');\n\nfunction checkIgnore(item, settings) {\n  if (_.get(settings, 'plugins.jquery.ignoreAjaxErrors')) {\n    return !_.get(item, 'body.message.extra.isAjax');\n  }\n  return true;\n}\n\nmodule.exports = {\n  checkIgnore: checkIgnore\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/predicates.js\n// module id = 25\n// module chunks = 0","'use strict';\n\nvar _ = require('./utility');\n\nfunction checkLevel(item, settings) {\n  var level = item.level;\n  var levelVal = _.LEVELS[level] || 0;\n  var reportLevel = settings.reportLevel;\n  var reportLevelVal = _.LEVELS[reportLevel] || 0;\n\n  if (levelVal < reportLevelVal) {\n    return false;\n  }\n  return true;\n}\n\nfunction userCheckIgnore(logger) {\n  return function(item, settings) {\n    var isUncaught = !!item._isUncaught;\n    delete item._isUncaught;\n    var args = item._originalArgs;\n    delete item._originalArgs;\n    try {\n      if (_.isFunction(settings.onSendCallback)) {\n        settings.onSendCallback(isUncaught, args, item);\n      }\n    } catch (e) {\n      settings.onSendCallback = null;\n      logger.error('Error while calling onSendCallback, removing', e);\n    }\n    try {\n      if (_.isFunction(settings.checkIgnore) && settings.checkIgnore(isUncaught, args, item)) {\n        return false;\n      }\n    } catch (e) {\n      settings.checkIgnore = null;\n      logger.error('Error while calling custom checkIgnore(), removing', e);\n    }\n    return true;\n  }\n}\n\nfunction urlIsNotBlacklisted(logger) {\n  return function(item, settings) {\n    return !urlIsOnAList(item, settings, 'blacklist', logger);\n  }\n}\n\nfunction urlIsWhitelisted(logger) {\n  return function(item, settings) {\n    return urlIsOnAList(item, settings, 'whitelist', logger);\n  }\n}\n\nfunction urlIsOnAList(item, settings, whiteOrBlack, logger) {\n  // whitelist is the default\n  var black = false;\n  if (whiteOrBlack === 'blacklist') {\n    black = true;\n  }\n  var list, trace, frame, filename, frameLength, url, listLength, urlRegex;\n  var i, j;\n\n  try {\n    list = black ? settings.hostBlackList : settings.hostWhiteList;\n    listLength = list && list.length;\n    trace = _.get(item, 'body.trace');\n\n    // These two checks are important to come first as they are defaults\n    // in case the list is missing or the trace is missing or not well-formed\n    if (!list || listLength === 0) {\n      return !black;\n    }\n    if (!trace || !trace.frames || trace.frames.length === 0) {\n      return !black;\n    }\n\n    frameLength = trace.frames.length;\n    for (i = 0; i < frameLength; i++) {\n      frame = trace.frames[i];\n      filename = frame.filename;\n\n      if (!_.isType(filename, 'string')) {\n        return !black;\n      }\n\n      for (j = 0; j < listLength; j++) {\n        url = list[j];\n        urlRegex = new RegExp(url);\n\n        if (urlRegex.test(filename)) {\n          return true;\n        }\n      }\n    }\n  } catch (e)\n  /* istanbul ignore next */\n  {\n    if (black) {\n      settings.hostBlackList = null;\n    } else {\n      settings.hostWhiteList = null;\n    }\n    var listName = black ? 'hostBlackList' : 'hostWhiteList';\n    logger.error('Error while reading your configuration\\'s ' + listName + ' option. Removing custom ' + listName + '.', e);\n    return !black;\n  }\n  return false;\n}\n\nfunction messageIsIgnored(logger) {\n  return function(item, settings) {\n    var exceptionMessage, i, ignoredMessages,\n        len, messageIsIgnored, rIgnoredMessage,\n        body, traceMessage, bodyMessage;\n\n    try {\n      messageIsIgnored = false;\n      ignoredMessages = settings.ignoredMessages;\n\n      if (!ignoredMessages || ignoredMessages.length === 0) {\n        return true;\n      }\n\n      body = item.body;\n      traceMessage = _.get(body, 'trace.exception.message');\n      bodyMessage = _.get(body, 'message.body');\n\n      exceptionMessage = traceMessage || bodyMessage;\n\n      if (!exceptionMessage){\n        return true;\n      }\n\n      len = ignoredMessages.length;\n      for (i = 0; i < len; i++) {\n        rIgnoredMessage = new RegExp(ignoredMessages[i], 'gi');\n        messageIsIgnored = rIgnoredMessage.test(exceptionMessage);\n\n        if (messageIsIgnored) {\n          break;\n        }\n      }\n    } catch(e)\n    /* istanbul ignore next */\n    {\n      settings.ignoredMessages = null;\n      logger.error('Error while reading your configuration\\'s ignoredMessages option. Removing custom ignoredMessages.');\n    }\n\n    return !messageIsIgnored;\n  }\n}\n\nmodule.exports = {\n  checkLevel: checkLevel,\n  userCheckIgnore: userCheckIgnore,\n  urlIsNotBlacklisted: urlIsNotBlacklisted,\n  urlIsWhitelisted: urlIsWhitelisted,\n  messageIsIgnored: messageIsIgnored\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/predicates.js\n// module id = 26\n// module chunks = 0","'use strict';\n\nvar _ = require('../utility');\nvar urlparser = require('./url');\nvar domUtil = require('./domUtility');\n\nvar defaults = {\n  network: true,\n  networkResponseHeaders: false,\n  networkResponseBody: false,\n  networkRequestBody: false,\n  log: true,\n  dom: true,\n  navigation: true,\n  connectivity: true\n};\n\nfunction replace(obj, name, replacement, replacements, type) {\n  var orig = obj[name];\n  obj[name] = replacement(orig);\n  if (replacements) {\n    replacements[type].push([obj, name, orig]);\n  }\n}\n\nfunction restore(replacements, type) {\n  var b;\n  while (replacements[type].length) {\n    b = replacements[type].shift();\n    b[0][b[1]] = b[2];\n  }\n}\n\nfunction nameFromDescription(description) {\n  if (!description || !description.attributes) { return null; }\n  var attrs = description.attributes;\n  for (var a = 0; a < attrs.length; ++a) {\n    if (attrs[a].key === 'name') {\n      return attrs[a].value;\n    }\n  }\n  return null;\n}\n\nfunction defaultValueScrubber(scrubFields) {\n  var patterns = [];\n  for (var i = 0; i < scrubFields.length; ++i) {\n    patterns.push(new RegExp(scrubFields[i], 'i'));\n  }\n  return function(description) {\n    var name = nameFromDescription(description);\n    if (!name) { return false; }\n    for (var i = 0; i < patterns.length; ++i) {\n      if (patterns[i].test(name)) {\n        return true;\n      }\n    }\n    return false;\n  };\n}\n\nfunction Instrumenter(options, telemeter, rollbar, _window, _document) {\n  var autoInstrument = options.autoInstrument;\n  if (options.enabled === false || autoInstrument === false) {\n    this.autoInstrument = {};\n  } else {\n    if (!_.isType(autoInstrument, 'object')) {\n      autoInstrument = defaults;\n    }\n    this.autoInstrument = _.merge(defaults, autoInstrument);\n  }\n  this.scrubTelemetryInputs = !!options.scrubTelemetryInputs;\n  this.telemetryScrubber = options.telemetryScrubber;\n  this.defaultValueScrubber = defaultValueScrubber(options.scrubFields);\n  this.telemeter = telemeter;\n  this.rollbar = rollbar;\n  this._window = _window || {};\n  this._document = _document || {};\n  this.replacements = {\n    network: [],\n    log: [],\n    navigation: [],\n    connectivity: []\n  };\n  this.eventRemovers = {\n    dom: [],\n    connectivity: []\n  };\n\n  this._location = this._window.location;\n  this._lastHref = this._location && this._location.href;\n}\n\nInstrumenter.prototype.configure = function(options) {\n  var autoInstrument = options.autoInstrument;\n  var oldSettings = _.merge(this.autoInstrument);\n  if (options.enabled === false || autoInstrument === false) {\n    this.autoInstrument = {};\n  } else {\n    if (!_.isType(autoInstrument, 'object')) {\n      autoInstrument = defaults;\n    }\n    this.autoInstrument = _.merge(defaults, autoInstrument);\n  }\n  this.instrument(oldSettings);\n  if (options.scrubTelemetryInputs !== undefined) {\n    this.scrubTelemetryInputs = !!options.scrubTelemetryInputs;\n  }\n  if (options.telemetryScrubber !== undefined) {\n    this.telemetryScrubber = options.telemetryScrubber;\n  }\n};\n\nInstrumenter.prototype.instrument = function(oldSettings) {\n  if (this.autoInstrument.network && !(oldSettings && oldSettings.network)) {\n    this.instrumentNetwork();\n  } else if (!this.autoInstrument.network && oldSettings && oldSettings.network) {\n    this.deinstrumentNetwork();\n  }\n\n  if (this.autoInstrument.log && !(oldSettings && oldSettings.log)) {\n    this.instrumentConsole();\n  } else if (!this.autoInstrument.log && oldSettings && oldSettings.log) {\n    this.deinstrumentConsole();\n  }\n\n  if (this.autoInstrument.dom && !(oldSettings && oldSettings.dom)) {\n    this.instrumentDom();\n  } else if (!this.autoInstrument.dom && oldSettings && oldSettings.dom) {\n    this.deinstrumentDom();\n  }\n\n  if (this.autoInstrument.navigation && !(oldSettings && oldSettings.navigation)) {\n    this.instrumentNavigation();\n  } else if (!this.autoInstrument.navigation && oldSettings && oldSettings.navigation) {\n    this.deinstrumentNavigation();\n  }\n\n  if (this.autoInstrument.connectivity && !(oldSettings && oldSettings.connectivity)) {\n    this.instrumentConnectivity();\n  } else if (!this.autoInstrument.connectivity && oldSettings && oldSettings.connectivity) {\n    this.deinstrumentConnectivity();\n  }\n};\n\nInstrumenter.prototype.deinstrumentNetwork = function() {\n  restore(this.replacements, 'network');\n};\n\nInstrumenter.prototype.instrumentNetwork = function() {\n  var self = this;\n\n  function wrapProp(prop, xhr) {\n    if (prop in xhr && _.isFunction(xhr[prop])) {\n      replace(xhr, prop, function(orig) {\n        return self.rollbar.wrap(orig);\n      });\n    }\n  }\n\n  if ('XMLHttpRequest' in this._window) {\n    var xhrp = this._window.XMLHttpRequest.prototype;\n    replace(xhrp, 'open', function(orig) {\n      return function(method, url) {\n        if (_.isType(url, 'string')) {\n          this.__rollbar_xhr = {\n            method: method,\n            url: url,\n            status_code: null,\n            start_time_ms: _.now(),\n            end_time_ms: null\n          };\n        }\n        return orig.apply(this, arguments);\n      };\n    }, this.replacements, 'network');\n\n    replace(xhrp, 'send', function(orig) {\n      /* eslint-disable no-unused-vars */\n      return function(data) {\n      /* eslint-enable no-unused-vars */\n        var xhr = this;\n\n        function onreadystatechangeHandler() {\n          if (xhr.__rollbar_xhr) {\n            if (xhr.__rollbar_xhr.status_code === null) {\n              xhr.__rollbar_xhr.status_code = 0;\n              var requestData = null;\n              if (self.autoInstrument.networkRequestBody) {\n                requestData = data;\n              }\n              xhr.__rollbar_event = self.telemeter.captureNetwork(xhr.__rollbar_xhr, 'xhr', undefined, requestData);\n            }\n            if (xhr.readyState < 2) {\n              xhr.__rollbar_xhr.start_time_ms = _.now();\n            }\n            if (xhr.readyState > 3) {\n              xhr.__rollbar_xhr.end_time_ms = _.now();\n\n              var headers = null;\n              if (self.autoInstrument.networkResponseHeaders) {\n                var headersConfig = self.autoInstrument.networkResponseHeaders;\n                headers = {};\n                try {\n                  var header, i;\n                  if (headersConfig === true) {\n                    var allHeaders = xhr.getAllResponseHeaders();\n                    if (allHeaders) {\n                      var arr = allHeaders.trim().split(/[\\r\\n]+/);\n                      var parts, value;\n                      for (i=0; i < arr.length; i++) {\n                        parts = arr[i].split(': ');\n                        header = parts.shift();\n                        value = parts.join(': ');\n                        headers[header] = value;\n                      }\n                    }\n                  } else {\n                    for (i=0; i < headersConfig.length; i++) {\n                      header = headersConfig[i];\n                      headers[header] = xhr.getResponseHeader(header);\n                    }\n                  }\n                } catch (e) {\n                  /* we ignore the errors here that could come from different\n                   * browser issues with the xhr methods */\n                }\n              }\n              var body = null;\n              if (self.autoInstrument.networkResponseBody) {\n                try {\n                  body = xhr.responseText;\n                } catch (e) {\n                  /* ignore errors from reading responseText */\n                }\n              }\n              var response = null;\n              if (body || headers) {\n                response = {};\n                if (body) {\n                  response.body = body;\n                }\n                if (headers) {\n                  response.headers = headers;\n                }\n              }\n              if (response) {\n                xhr.__rollbar_xhr.response = response;\n              }\n              try {\n                var code = xhr.status;\n                code = code === 1223 ? 204 : code;\n                xhr.__rollbar_xhr.status_code = code;\n                xhr.__rollbar_event.level = self.telemeter.levelFromStatus(code);\n              } catch (e) {\n                /* ignore possible exception from xhr.status */\n              }\n            }\n          }\n        }\n\n        wrapProp('onload', xhr);\n        wrapProp('onerror', xhr);\n        wrapProp('onprogress', xhr);\n\n        if ('onreadystatechange' in xhr && _.isFunction(xhr.onreadystatechange)) {\n          replace(xhr, 'onreadystatechange', function(orig) {\n            return self.rollbar.wrap(orig, undefined, onreadystatechangeHandler);\n          });\n        } else {\n          xhr.onreadystatechange = onreadystatechangeHandler;\n        }\n        return orig.apply(this, arguments);\n      }\n    }, this.replacements, 'network');\n  }\n\n  if ('fetch' in this._window) {\n    replace(this._window, 'fetch', function(orig) {\n      /* eslint-disable no-unused-vars */\n      return function(fn, t) {\n      /* eslint-enable no-unused-vars */\n        var args = new Array(arguments.length);\n        for (var i=0, len=args.length; i < len; i++) {\n          args[i] = arguments[i];\n        }\n        var input = args[0];\n        var method = 'GET';\n        var url;\n        if (_.isType(input, 'string')) {\n          url = input;\n        } else if (input) {\n          url = input.url;\n          if (input.method) {\n            method = input.method;\n          }\n        }\n        if (args[1] && args[1].method) {\n          method = args[1].method;\n        }\n        var metadata = {\n          method: method,\n          url: url,\n          status_code: null,\n          start_time_ms: _.now(),\n          end_time_ms: null\n        };\n        var requestData = null;\n        if (self.autoInstrument.networkRequestBody) {\n          if (args[1] && args[1].body) {\n            requestData = args[1].body;\n          } else if (args[0] && !_.isType(args[0], 'string') && args[0].body) {\n            requestData = args[0].body;\n          }\n        }\n        self.telemeter.captureNetwork(metadata, 'fetch', undefined, requestData);\n        return orig.apply(this, args).then(function (resp) {\n          metadata.end_time_ms = _.now();\n          metadata.status_code = resp.status;\n          var headers = null;\n          if (self.autoInstrument.networkResponseHeaders) {\n            var headersConfig = self.autoInstrument.networkResponseHeaders;\n            headers = {};\n            try {\n              if (headersConfig === true) {\n                // This is unsupported in IE so we can't do it\n                /*\n                var allHeaders = resp.headers.entries();\n                for (var pair of allHeaders) {\n                  headers[pair[0]] = pair[1];\n                }\n                */\n              } else {\n                for (var i=0; i < headersConfig.length; i++) {\n                  var header = headersConfig[i];\n                  headers[header] = resp.headers.get(header);\n                }\n              }\n            } catch (e) {\n              /* ignore probable IE errors */\n            }\n          }\n          var response = null;\n          if (headers) {\n            response = {\n              headers: headers\n            };\n          }\n          if (response) {\n            metadata.response = response;\n          }\n          return resp;\n        });\n      };\n    }, this.replacements, 'network');\n  }\n};\n\nInstrumenter.prototype.deinstrumentConsole = function() {\n  if (!('console' in this._window && this._window.console.log)) {\n    return;\n  }\n  var b;\n  while (this.replacements['log'].length) {\n    b = this.replacements['log'].shift();\n    this._window.console[b[0]] = b[1];\n  }\n};\n\nInstrumenter.prototype.instrumentConsole = function() {\n  if (!('console' in this._window && this._window.console.log)) {\n    return;\n  }\n\n  var self = this;\n  var c = this._window.console;\n\n  function wrapConsole(method) {\n    var orig = c[method];\n    var origConsole = c;\n    var level = method === 'warn' ? 'warning' : method;\n    c[method] = function() {\n      var args = Array.prototype.slice.call(arguments);\n      var message = _.formatArgsAsString(args);\n      self.telemeter.captureLog(message, level);\n      if (orig) {\n        Function.prototype.apply.call(orig, origConsole, args);\n      }\n    };\n    self.replacements['log'].push([method, orig]);\n  }\n  var methods = ['debug','info','warn','error','log'];\n  for (var i=0, len=methods.length; i < len; i++) {\n    wrapConsole(methods[i]);\n  }\n};\n\nInstrumenter.prototype.deinstrumentDom = function() {\n  if (!('addEventListener' in this._window || 'attachEvent' in this._window)) {\n    return;\n  }\n  this.removeListeners('dom');\n};\n\nInstrumenter.prototype.instrumentDom = function() {\n  if (!('addEventListener' in this._window || 'attachEvent' in this._window)) {\n    return;\n  }\n  var clickHandler = this.handleClick.bind(this);\n  var blurHandler = this.handleBlur.bind(this);\n  this.addListener('dom', this._window, 'click', 'onclick', clickHandler, true);\n  this.addListener('dom', this._window, 'blur', 'onfocusout', blurHandler, true);\n};\n\nInstrumenter.prototype.handleClick = function(evt) {\n  try {\n    var e = domUtil.getElementFromEvent(evt, this._document);\n    var hasTag = e && e.tagName;\n    var anchorOrButton = domUtil.isDescribedElement(e, 'a') || domUtil.isDescribedElement(e, 'button');\n    if (hasTag && (anchorOrButton || domUtil.isDescribedElement(e, 'input', ['button', 'submit']))) {\n        this.captureDomEvent('click', e);\n    } else if (domUtil.isDescribedElement(e, 'input', ['checkbox', 'radio'])) {\n      this.captureDomEvent('input', e, e.value, e.checked);\n    }\n  } catch (exc) {\n    // TODO: Not sure what to do here\n  }\n};\n\nInstrumenter.prototype.handleBlur = function(evt) {\n  try {\n    var e = domUtil.getElementFromEvent(evt, this._document);\n    if (e && e.tagName) {\n      if (domUtil.isDescribedElement(e, 'textarea')) {\n        this.captureDomEvent('input', e, e.value);\n      } else if (domUtil.isDescribedElement(e, 'select') && e.options && e.options.length) {\n        this.handleSelectInputChanged(e);\n      } else if (domUtil.isDescribedElement(e, 'input') && !domUtil.isDescribedElement(e, 'input', ['button', 'submit', 'hidden', 'checkbox', 'radio'])) {\n        this.captureDomEvent('input', e, e.value);\n      }\n    }\n  } catch (exc) {\n    // TODO: Not sure what to do here\n  }\n};\n\nInstrumenter.prototype.handleSelectInputChanged = function(elem) {\n  if (elem.multiple) {\n    for (var i = 0; i < elem.options.length; i++) {\n      if (elem.options[i].selected) {\n        this.captureDomEvent('input', elem, elem.options[i].value);\n      }\n    }\n  } else if (elem.selectedIndex >= 0 && elem.options[elem.selectedIndex]) {\n    this.captureDomEvent('input', elem, elem.options[elem.selectedIndex].value);\n  }\n};\n\nInstrumenter.prototype.captureDomEvent = function(subtype, element, value, isChecked) {\n  if (value !== undefined) {\n    if (this.scrubTelemetryInputs || (domUtil.getElementType(element) === 'password')) {\n      value = '[scrubbed]';\n    } else {\n      var description = domUtil.describeElement(element);\n      if (this.telemetryScrubber) {\n        if (this.telemetryScrubber(description)) {\n          value = '[scrubbed]';\n        }\n      } else if (this.defaultValueScrubber(description)) {\n        value = '[scrubbed]';\n      }\n    }\n  }\n  var elementString = domUtil.elementArrayToString(domUtil.treeToArray(element));\n  this.telemeter.captureDom(subtype, elementString, value, isChecked);\n};\n\nInstrumenter.prototype.deinstrumentNavigation = function() {\n  var chrome = this._window.chrome;\n  var chromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  // See https://github.com/angular/angular.js/pull/13945/files\n  var hasPushState = !chromePackagedApp && this._window.history && this._window.history.pushState;\n  if (!hasPushState) {\n    return;\n  }\n  restore(this.replacements, 'navigation');\n};\n\nInstrumenter.prototype.instrumentNavigation = function() {\n  var chrome = this._window.chrome;\n  var chromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  // See https://github.com/angular/angular.js/pull/13945/files\n  var hasPushState = !chromePackagedApp && this._window.history && this._window.history.pushState;\n  if (!hasPushState) {\n    return;\n  }\n  var self = this;\n  replace(this._window, 'onpopstate', function(orig) {\n    return function() {\n      var current = self._location.href;\n      self.handleUrlChange(self._lastHref, current);\n      if (orig) {\n        orig.apply(this, arguments);\n      }\n    };\n  }, this.replacements, 'navigation');\n\n  replace(this._window.history, 'pushState', function(orig) {\n    return function() {\n      var url = arguments.length > 2 ? arguments[2] : undefined;\n      if (url) {\n        self.handleUrlChange(self._lastHref, url + '');\n      }\n      return orig.apply(this, arguments);\n    };\n  }, this.replacements, 'navigation');\n};\n\nInstrumenter.prototype.handleUrlChange = function(from, to) {\n  var parsedHref = urlparser.parse(this._location.href);\n  var parsedTo = urlparser.parse(to);\n  var parsedFrom = urlparser.parse(from);\n  this._lastHref = to;\n  if (parsedHref.protocol === parsedTo.protocol && parsedHref.host === parsedTo.host) {\n    to = parsedTo.path + (parsedTo.hash || '');\n  }\n  if (parsedHref.protocol === parsedFrom.protocol && parsedHref.host === parsedFrom.host) {\n    from = parsedFrom.path + (parsedFrom.hash || '');\n  }\n  this.telemeter.captureNavigation(from, to);\n};\n\nInstrumenter.prototype.deinstrumentConnectivity = function() {\n  if (!('addEventListener' in this._window || 'body' in this._document)) {\n    return;\n  }\n  if (this._window.addEventListener) {\n    this.removeListeners('connectivity');\n  } else {\n    restore(this.replacements, 'connectivity');\n  }\n};\n\nInstrumenter.prototype.instrumentConnectivity = function() {\n  if (!('addEventListener' in this._window || 'body' in this._document)) {\n    return;\n  }\n  if (this._window.addEventListener) {\n    this.addListener('connectivity', this._window, 'online', undefined, function() {\n      this.telemeter.captureConnectivityChange('online');\n    }.bind(this), true);\n    this.addListener('connectivity', this._window, 'offline', undefined, function() {\n      this.telemeter.captureConnectivityChange('offline');\n    }.bind(this), true);\n  } else {\n    var self = this;\n    replace(this._document.body, 'ononline', function(orig) {\n      return function() {\n        self.telemeter.captureConnectivityChange('online');\n        if (orig) {\n          orig.apply(this, arguments);\n        }\n      }\n    }, this.replacements, 'connectivity');\n    replace(this._document.body, 'onoffline', function(orig) {\n      return function() {\n        self.telemeter.captureConnectivityChange('offline');\n        if (orig) {\n          orig.apply(this, arguments);\n        }\n      }\n    }, this.replacements, 'connectivity');\n  }\n};\n\nInstrumenter.prototype.addListener = function(section, obj, type, altType, handler, capture) {\n  if (obj.addEventListener) {\n    obj.addEventListener(type, handler, capture);\n    this.eventRemovers[section].push(function() {\n      obj.removeEventListener(type, handler, capture);\n    });\n  } else if (altType) {\n    obj.attachEvent(altType, handler);\n    this.eventRemovers[section].push(function() {\n      obj.detachEvent(altType, handler);\n    });\n  }\n};\n\nInstrumenter.prototype.removeListeners = function(section) {\n  var r;\n  while (this.eventRemovers[section].length) {\n    r = this.eventRemovers[section].shift();\n    r();\n  }\n};\n\nmodule.exports = Instrumenter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/telemetry.js\n// module id = 27\n// module chunks = 0","'use strict';\n\nfunction getElementType(e) {\n  return (e.getAttribute('type') || '').toLowerCase();\n}\n\nfunction isDescribedElement(element, type, subtypes) {\n  if (element.tagName.toLowerCase() !== type.toLowerCase()) {\n    return false;\n  }\n  if (!subtypes) {\n    return true;\n  }\n  element = getElementType(element);\n  for (var i = 0; i < subtypes.length; i++) {\n    if (subtypes[i] === element) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getElementFromEvent(evt, doc) {\n  if (evt.target) {\n    return evt.target;\n  }\n  if (doc && doc.elementFromPoint) {\n    return doc.elementFromPoint(evt.clientX, evt.clientY);\n  }\n  return undefined;\n}\n\nfunction treeToArray(elem) {\n  var MAX_HEIGHT = 5;\n  var out = [];\n  var nextDescription;\n  for (var height = 0; elem && height < MAX_HEIGHT; height++) {\n    nextDescription = describeElement(elem);\n    if (nextDescription.tagName === 'html') {\n      break;\n    }\n    out.unshift(nextDescription);\n    elem = elem.parentNode;\n  }\n  return out;\n}\n\nfunction elementArrayToString(a) {\n  var MAX_LENGTH = 80;\n  var separator = ' > ', separatorLength = separator.length;\n  var out = [], len = 0, nextStr, totalLength;\n\n  for (var i = a.length - 1; i >= 0; i--) {\n    nextStr = descriptionToString(a[i]);\n    totalLength = len + (out.length * separatorLength) + nextStr.length;\n    if (i < a.length - 1 && totalLength >= MAX_LENGTH + 3) {\n      out.unshift('...');\n      break;\n    }\n    out.unshift(nextStr);\n    len += nextStr.length;\n  }\n  return out.join(separator);\n}\n\nfunction descriptionToString(desc) {\n  if (!desc || !desc.tagName) {\n    return '';\n  }\n  var out = [desc.tagName];\n  if (desc.id) {\n    out.push('#' + desc.id);\n  }\n  if (desc.classes) {\n    out.push('.' + desc.classes.join('.'));\n  }\n  for (var i = 0; i < desc.attributes.length; i++) {\n    out.push('[' + desc.attributes[i].key + '=\"' + desc.attributes[i].value + '\"]');\n  }\n\n  return out.join('');\n}\n\n/**\n * Input: a dom element\n * Output: null if tagName is falsey or input is falsey, else\n *  {\n *    tagName: String,\n *    id: String | undefined,\n *    classes: [String] | undefined,\n *    attributes: [\n *      {\n *        key: OneOf(type, name, title, alt),\n *        value: String\n *      }\n *    ]\n *  }\n */\nfunction describeElement(elem) {\n  if (!elem || !elem.tagName) {\n    return null;\n  }\n  var out = {}, className, key, attr, i;\n  out.tagName = elem.tagName.toLowerCase();\n  if (elem.id) {\n    out.id = elem.id;\n  }\n  className = elem.className;\n  if (className && (typeof className === 'string')) {\n    out.classes = className.split(/\\s+/);\n  }\n  var attributes = ['type', 'name', 'title', 'alt'];\n  out.attributes = [];\n  for (i = 0; i < attributes.length; i++) {\n    key = attributes[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.attributes.push({key: key, value: attr});\n    }\n  }\n  return out;\n}\n\nmodule.exports = {\n  describeElement: describeElement,\n  descriptionToString: descriptionToString,\n  elementArrayToString: elementArrayToString,\n  treeToArray: treeToArray,\n  getElementFromEvent: getElementFromEvent,\n  isDescribedElement: isDescribedElement,\n  getElementType: getElementType\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/domUtility.js\n// module id = 28\n// module chunks = 0"],"sourceRoot":""}