"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs2/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var React = _interopRequireWildcard(require("react"));

var _context = _interopRequireDefault(require("./context"));

var _provider = _interopRequireDefault(require("./provider"));

var MathJaxText_ =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(MathJaxText_, _React$Component);

  function MathJaxText_(props) {
    var _this;

    (0, _classCallCheck2.default)(this, MathJaxText_);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MathJaxText_).call(this, props));
    _this.nodeRef = React.createRef();
    return _this;
  }

  (0, _createClass2.default)(MathJaxText_, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.typeset();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.typeset();
    }
  }, {
    key: "typeset",
    value: function typeset() {
      var MathJax = this.props.MathJax;

      if (!MathJax || !MathJax.Hub) {
        throw Error("Could not find MathJax while attempting typeset! It's likely the MathJax script hasn't been loaded or MathJax.Context is not in the hierarchy.");
      }

      var typeset = ["Typeset", MathJax.Hub, this.nodeRef.current];

      if (!this.props.onRender) {
        MathJax.Hub.Queue(typeset);
      } else {
        MathJax.Hub.Queue(typeset, this.props.onRender);
      }
    }
  }, {
    key: "render",
    value: function render() {
      return React.createElement("div", {
        ref: this.nodeRef
      }, this.props.children);
    }
  }]);
  return MathJaxText_;
}(React.Component);

var MathJaxText =
/*#__PURE__*/
function (_React$PureComponent) {
  (0, _inherits2.default)(MathJaxText, _React$PureComponent);

  function MathJaxText() {
    (0, _classCallCheck2.default)(this, MathJaxText);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MathJaxText).apply(this, arguments));
  }

  (0, _createClass2.default)(MathJaxText, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      return React.createElement(_context.default.Consumer, null, function (_ref) {
        var MathJax = _ref.MathJax,
            input = _ref.input,
            hasProviderAbove = _ref.hasProviderAbove;

        // If there is no <Provider /> in the above tree, create our own
        if (!hasProviderAbove) {
          return React.createElement(_provider.default, null, React.createElement(MathJaxText, _this2.props));
        }

        if (!MathJax) {
          return null;
        }

        return React.createElement(MathJaxText_, {
          onRender: _this2.props.onRender,
          input: input,
          MathJax: MathJax,
          hasProviderAbove: hasProviderAbove
        }, _this2.props.children);
      });
    }
  }]);
  return MathJaxText;
}(React.PureComponent);

(0, _defineProperty2.default)(MathJaxText, "defaultProps", {
  onRender: null
});
var _default = MathJaxText;
exports.default = _default;