"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/defineProperty"));

var _react = _interopRequireDefault(require("react"));

var SVGDisplay =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(SVGDisplay, _React$Component);

  function SVGDisplay() {
    (0, _classCallCheck2.default)(this, SVGDisplay);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SVGDisplay).apply(this, arguments));
  }

  (0, _createClass2.default)(SVGDisplay, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.el) {
        this.el.insertAdjacentHTML("beforeend", this.props.data);
      }
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      return nextProps.data !== this.props.data;
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (!this.el) return; // clear out all DOM element children

      while (this.el.firstChild) {
        this.el.removeChild(this.el.firstChild);
      }

      this.el.insertAdjacentHTML("beforeend", this.props.data);
    }
  }, {
    key: "render",
    value: function render() {
      var _this = this;

      return _react.default.createElement("div", {
        ref: function ref(el) {
          _this.el = el;
        }
      });
    }
  }]);
  return SVGDisplay;
}(_react.default.Component);

exports.default = SVGDisplay;
(0, _defineProperty2.default)(SVGDisplay, "MIMETYPE", "image/svg+xml");